{"version":3,"sources":["../src/module.js"],"names":["MetricsPanelCtrl","$","_","moment","d3","getTemplateSrv","PanelEvents","templateSrv","MultistatPanelCtrl","$scope","$injector","panelDefaults","timeFrom","timeShift","BarPadding","MultiBarPadding","BaseLineColor","BaseLineWidth","BaseLineValue","DateTimeColName","DateFormat","TooltipDateFormat","FlashHighLimitBar","FlashLowLimitBar","HighAxisColor","HighAxisWidth","HighBarColor","RecolorColName","HighLimitBarColor","HighLimitBarFlashColor","HighLimitBarFlashTimeout","HighLimitLineColor","HighLimitValue","HighLmitLineWidth","HighSideMargin","Horizontal","LabelColName","LabelNameFilter","LabelColor","OutOfRangeLabelColor","GroupLabelColor","LabelFontSize","GroupLabelFontSize","GroupGap","LabelMargin","Legend","Links","LowAxisColor","LowAxisWidth","LowBarColor","LowLimitBarColor","LowLimitBarFlashColor","LowLimitBarFlashTimeout","LowLimitLineColor","LowLimitValue","LowLmitLineWidth","LowSideMargin","MaxLineColor","MaxLineWidth","MaxLineValue","MinLineColor","MinLineWidth","MinLineValue","RecolorHighLimitBar","RecolorLowLimitBar","RecolorRules","ShowBaseLine","ShowDate","Aggregate","ShowHighLimitLine","ShowLabels","ShowGroupLabels","ShowLeftAxis","ShowLowLimitLine","ShowMaxLine","ShowMinLine","ShowRightAxis","ShowValues","SortColName","SortDirection","TZOffsetHours","ToolTipType","ToolTipFontSize","ValueColName","Values","ValueDecimals","ValueColor","ValueFontSize","OddRowColor","EvenRowColor","OutlineColor","GroupSortString","GroupCols","GroupNameFilter","ScaleFactor","ValuePosition","LableAngle","ShowBars","ShowLines","LineWidth","LineColor","DotSize","DotColor","CurveType","defaults","panel","length","Name","Selected","dashboardVariables","getVariables","forEach","v","current","push","name","value","console","log","JSON","stringify","events","on","dataReceived","onDataReceived","bind","dataError","onDataError","render","onRender","dataSnapshotLoad","onDataSnapshotLoad","editModeInitialized","onInitEditMode","className","id","obj","names","shift","updateNamedValue","Number","snapshotData","err","seriesList","data","displayStatusMessage","status","statusText","metricNames","sortDirections","aggregations","fontSizes","valuePositions","curveTypes","matchTypes","tooltipTypes","addEditorTab","cols","rows","columns","i","text","cols0","concat","index","up","ctrl","splice","dateTimeCol","$title","elem","closest","find","$maxDate","append","children","last","maxDate","dd","add","toUpperCase","fromNow","show","format","hide","msg","html","labelCol","sortCol","groupCol","recolorCol","range","timeSrv","timeRangeForUrl","from","to","colName","GroupColName","Value","Col","SelectedValues","filter","groupedLabelFunc","regex","RegExp","matchingRows","label","match","oo","nest","key","rollup","d","entries","x","Object","values","assign","sum","Array","mean","valueCol","max","min","groupNameOffset","replace","groupedRows","regexGroupRows","matchingGroups","groupName","groupSortString","sort","a","b","aPos","search","bPos","localeCompare","$container","svg","select","attr","$legend","legendValues","deselectedClassName","css","click","window","event","ctrlKey","CTRL","$apply","h","height","w","width","buildDateHtml","labelMargin","isNumeric","lowSideMargin","highSideMargin","selectAll","interrupt","barPadding","multiBarPadding","baseLineValue","minLineValue","maxLineValue","highLimitValue","recolorHighLimitBar","lowLimitValue","recolorLowLimitBar","flashHighLimitBar","flashLowLimitBar","tooltipType","tooltipFontSize","panelID","tooltipDivID","minValue","col","val","maxValue","remove","sortData","sortDirection","ascending","y","xx","yy","translateValues","s","s1","re","g","exec","j","dv","getTooltipContent","isArray","cc","toFixed","l","url","newtab","isInTooltip","$panel","$panelContent","panelContent","tooltipShow","parent","style","tooltipDiv","tooltipHtml","classed","tooltipHide","$tooltipDiv","tooltipWidth","tooltipHeight","minTop","mouseCoordinates","mouse","node","Left","Top","panelWidth","panelHeight","transition","duration","cancel","scaleAndClipValue","getBarColor","valueDef","recolorString","recolorRule","r","pattern","matchType","test","indexOf","color","Option","plotGroupHorizontal","numRows","left","hh","dh","labels","map","Math","random","toString","substr","labelScale","scaleBand","domain","rangeRound","paddingInner","paddingOuter","stripedata","stripeScale","oddeven","enter","step","g1","maxValueWidth","gap","bandwidth","each","thisWidth","getComputedTextLength","maxLabelWidth","labelAngle","minvalue","maxvalue","bbox","getBBox","sin","PI","c","cos","abs","valueScale","scaleLinear","nice","vLine","strokeWidth","HighLimitLineWidth","LowLimitLineWidth","bw","curveFunc","curveLinear","curveMonotoneY","curveCardinal","curveCatmullRom","lineFunction","line","curve","points","ggHighSide","call","axisTop","ggLowSide","axisBottom","gcols","dw","pointsPerRow","rr","floor","u","totalPoints","rowOverheadHeight","rowHeight","ceil","nn","ii","plotGroupVertical","g2","maxValueHeight","thisHeight","maxLabelHeight","hLine","curveMonotoneX","axisLeft","tickSizeInner","tickSizeOuter","ticks","axisRight","pointsPerCol","colOverheadWidth","colWidth","ww","pulseHigh","highFlashRects","_groups","highRepeat","active","pulseLow","lowFlashRects","lowRepeat","renderingCompleted","refresh","scope","attrs","panelContentElem","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/*jshint esversion: 6 */\r\n/*jshint -W087 */\r\n/*jshint -W014 */\r\nimport { MetricsPanelCtrl } from \"app/plugins/sdk\";\r\nimport $ from \"jquery\";\r\nimport \"jquery.flot\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport \"./css/multistat-panel.css!\";\r\nimport * as d3 from \"d3\";\r\nimport { getTemplateSrv } from '@grafana/runtime';\r\nimport { PanelEvents } from \"@grafana/data\";\r\n\r\nconst templateSrv = getTemplateSrv();\r\n\r\nclass MultistatPanelCtrl extends MetricsPanelCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    var panelDefaults = {\r\n      timeFrom: null,\r\n      timeShift: null,\r\n      BarPadding: 10,\r\n      MultiBarPadding: 10,\r\n      BaseLineColor: \"#ff0000\",\r\n      BaseLineWidth: 1,\r\n      BaseLineValue: null,\r\n      DateTimeColName: \"date\",\r\n      DateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      TooltipDateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      FlashHighLimitBar: false,\r\n      FlashLowLimitBar: false,\r\n      HighAxisColor: \"#ffffff\",\r\n      HighAxisWidth: 1,\r\n      HighBarColor: \"rgb(120, 128, 0)\",\r\n      RecolorColName: null,\r\n      HighLimitBarColor: \"#ff0000\",\r\n      HighLimitBarFlashColor: \"#ffa500\",\r\n      HighLimitBarFlashTimeout: 1000,\r\n      HighLimitLineColor: \"#ff0000\",\r\n      HighLimitValue: null,\r\n      HighLmitLineWidth: 1,\r\n      HighSideMargin: 22,\r\n      Horizontal: false,\r\n      LabelColName: \"\",\r\n      LabelNameFilter: \"\",\r\n      LabelColor: \"#ffffff\",\r\n      OutOfRangeLabelColor: \"#ffffff\",\r\n      GroupLabelColor: \"#ffffff\",\r\n      LabelFontSize: \"100%\",\r\n      GroupLabelFontSize: \"200%\",\r\n      GroupGap: 5,\r\n      LabelMargin: null,\r\n      Legend: false,\r\n      Links: [],\r\n      LowAxisColor: \"#ffffff\",\r\n      LowAxisWidth: 1,\r\n      LowBarColor: \"teal\",\r\n      LowLimitBarColor: \"#ff0000\",\r\n      LowLimitBarFlashColor: \"#ffa500\",\r\n      LowLimitBarFlashTimeout: 200,\r\n      LowLimitLineColor: \"#ff0000\",\r\n      LowLimitValue: null,\r\n      LowLmitLineWidth: 1,\r\n      LowSideMargin: 22,\r\n      MaxLineColor: \"rgb(74, 232, 12)\",\r\n      MaxLineWidth: 1,\r\n      MaxLineValue: null,\r\n      MinLineColor: \"#ff0000\",\r\n      MinLineWidth: 1,\r\n      MinLineValue: null,\r\n      RecolorHighLimitBar: false,\r\n      RecolorLowLimitBar: false,\r\n      RecolorRules: [],\r\n      ShowBaseLine: false,\r\n      ShowDate: false,\r\n      Aggregate: \"last\",\r\n      ShowHighLimitLine: false,\r\n      ShowLabels: true,\r\n      ShowGroupLabels: true,\r\n      ShowLeftAxis: true,\r\n      ShowLowLimitLine: false,\r\n      ShowMaxLine: false,\r\n      ShowMinLine: false,\r\n      ShowRightAxis: true,\r\n      ShowValues: true,\r\n      SortColName: \"value\",\r\n      SortDirection: \"ascending\",\r\n      TZOffsetHours: 0,\r\n      ToolTipType: \"\",\r\n      ToolTipFontSize: \"100%\",\r\n      ValueColName: \"\",\r\n      Values: [],\r\n      ValueDecimals: 2,\r\n      ValueColor: \"#ffffff\",\r\n      ValueFontSize: \"100%\",\r\n      OddRowColor: \"rgba(33, 33, 34, 0.92)\",\r\n      EvenRowColor: \"rgba(61, 61, 64, 0.78)\",\r\n      OutlineColor: \"rgba(245, 255, 0, 0.1)\",\r\n      GroupSortString: \"\",\r\n      GroupCols: 0,\r\n      GroupNameFilter: \"\",\r\n      ScaleFactor: 1,\r\n      ValuePosition: \"top\",\r\n      LableAngle: 0,\r\n      ShowBars: true,\r\n      ShowLines: false,\r\n      LineWidth: 5,\r\n      LineColor: \"blue\",\r\n      DotSize: 10,\r\n      DotColor: \"white\",\r\n      CurveType: \"Monotone\",\r\n    };\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    // Migrate old configurations from single value column to array of value columns\r\n    if (this.panel.Values.length === 0) {\r\n      this.panel.Values = [\r\n        {\r\n          Name: this.panel.ValueColName,\r\n          LowBarColor: this.panel.LowBarColor,\r\n          HighBarColor: this.panel.HighBarColor,\r\n          Selected: true\r\n        },\r\n      ];\r\n      delete this.panel.ValueColName;\r\n      delete this.panel.LowBarColor;\r\n      delete this.panel.HighBarColor;\r\n    }\r\n\r\n    this.dashboardVariables = [];\r\n    //console.log('Listing variables');\r\n    if (templateSrv){\r\n      templateSrv.getVariables().forEach((v) => {      \r\n        //console.log(JSON.stringify(v, null, 2));\r\n        if (v.current){\r\n          //console.log(\"dashboard variable[\" + v.name + \"]=\" + v.current.value);\r\n          //this.updateNamedValue(this.panel, v.name.split(\"_\"), v.current.value);   ////// WHAT WAS THIS FOR?????\r\n          this.dashboardVariables.push({name:v.name, value:v.current.value});\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log('this.dashboardVariables='+JSON.stringify(this.dashboardVariables, null, 2));\r\n\r\n    this.events.on(\r\n      PanelEvents.dataReceived,\r\n      this.onDataReceived.bind(this),\r\n      $scope\r\n    );\r\n\r\n    this.events.on(PanelEvents.dataError, this.onDataError.bind(this), $scope);\r\n\r\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\r\n\r\n    this.events.on(\r\n      PanelEvents.dataSnapshotLoad,\r\n      this.onDataSnapshotLoad.bind(this)\r\n    );\r\n    this.events.on(\r\n      PanelEvents.editModeInitialized,\r\n      this.onInitEditMode.bind(this)\r\n    );\r\n    this.events.on(\r\n      PanelEvents.dataSnapshotLoad,\r\n      this.onDataSnapshotLoad.bind(this)\r\n    );\r\n    this.className = \"michaeldmoore-multistat-panel-\" + this.panel.id;\r\n  }\r\n\r\n  updateNamedValue(obj, names, value) {\r\n    let name = names.shift();\r\n    if (obj[name]) {\r\n      if (names.length) this.updateNamedValue(obj[name], names, value);\r\n      else obj[name] = Number(value);\r\n    }\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  onDataError(err) {\r\n    this.seriesList = [];\r\n    this.data = [];\r\n    this.displayStatusMessage(\r\n      \"Query failure, Status=\" + err.status + \", \" + err.statusText\r\n    );\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.metricNames = [\r\n      \"min\",\r\n      \"max\",\r\n      \"avg\",\r\n      \"current\",\r\n      \"total\",\r\n      \"name\",\r\n      \"first\",\r\n      \"delta\",\r\n      \"diff\",\r\n      \"range\",\r\n    ];\r\n    this.sortDirections = [\"none\", \"ascending\", \"descending\"];\r\n    this.aggregations = [\"all\", \"last\", \"first\", \"mean\", \"max\", \"min\", \"sum\"];\r\n    this.fontSizes = [\r\n      \"20%\",\r\n      \"30%\",\r\n      \"50%\",\r\n      \"70%\",\r\n      \"80%\",\r\n      \"100%\",\r\n      \"110%\",\r\n      \"120%\",\r\n      \"150%\",\r\n      \"170%\",\r\n      \"200%\",\r\n      \"250%\",\r\n      \"300%\",\r\n      \"350%\",\r\n      \"400%\",\r\n    ];\r\n    this.valuePositions = [\"bar base\", \"bar end\", \"top\"];\r\n    this.curveTypes = [\"Linear\", \"Monotone\", \"Cardinal\", \"Catmull-Rom\"];\r\n    this.matchTypes = [\"exact\", \"subset\", \"list\", \"reg-ex\"];\r\n    this.tooltipTypes = [\"light\", \"dark\"];\r\n    this.addEditorTab(\r\n      \"Columns\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/columns.html\",\r\n      2\r\n    );\r\n    this.addEditorTab(\r\n      \"Layout\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/layout.html\",\r\n      3\r\n    );\r\n    this.addEditorTab(\r\n      \"Grouping\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/grouping.html\",\r\n      4\r\n    );\r\n    this.addEditorTab(\r\n      \"Options\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/options.html\",\r\n      5\r\n    );\r\n    this.addEditorTab(\r\n      \"Lines-and-Limits\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/linesandlimits.html\",\r\n      6\r\n    );\r\n    this.addEditorTab(\r\n      \"Bar links\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/barlinks.html\",\r\n      7\r\n    );\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    this.cols = [];\r\n     //console.log('onDataReceived(' + JSON.stringify(data, null, 2) + ')');\r\n    if (data.length == 0 || data[0].rows.length == 0) {\r\n      this.displayStatusMessage(\"No data to show\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    } else if (/*data[0].type == \"table\" || */data[0].columns) {\r\n      this.data = data[0];\r\n\r\n      for (let i = 0; i < this.data.columns.length; i++)\r\n        this.cols[i] = this.data.columns[i].text;\r\n      this.cols0 = [\"\"].concat(this.cols);\r\n\r\n      this.render();\r\n    } else {\r\n      this.displayStatusMessage(\"Multistat only supports Table datasets\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  onReorderValues(index, up) {\r\n    const Values = this.ctrl.panel.Values;\r\n    if (up) {\r\n      if (index) Values[index] = Values.splice(index - 1, 1, Values[index])[0];\r\n    } else {\r\n      if (index + 1 < Values.length)\r\n        Values[index] = Values.splice(index + 1, 1, Values[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderRecolorRules(index, up) {\r\n    const RecolorRules = this.ctrl.panel.RecolorRules;\r\n    if (up) {\r\n      if (index)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index - 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    } else {\r\n      if (index + 1 < RecolorRules.length)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index + 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderLinks(index, up) {\r\n    const Links = this.ctrl.panel.Links;\r\n    if (up) {\r\n      if (index) Links[index] = Links.splice(index - 1, 1, Links[index])[0];\r\n    } else {\r\n      if (index + 1 < Links.length)\r\n        Links[index] = Links.splice(index + 1, 1, Links[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  buildDateHtml(dateTimeCol) {\r\n    var $title = this.elem.closest(\".panel-container\").find(\".panel-title\");\r\n    var $maxDate = $title.find(\"span.michaeldmoore-multistat-panel-maxDate\");\r\n\r\n    if ($maxDate.length == 0)\r\n      $maxDate = $title\r\n        .append('<span class=\"michaeldmoore-multistat-panel-maxDate\"/>')\r\n        .children()\r\n        .last();\r\n\r\n    if (dateTimeCol != -1 && this.panel.ShowDate) {\r\n      var maxDate = this.rows[0][dateTimeCol];\r\n\r\n      for (let i = 1; i < this.rows.length; i++) {\r\n        if (maxDate < this.rows[i][dateTimeCol])\r\n          maxDate = this.rows[i][dateTimeCol];\r\n      }\r\n\r\n      var dd = moment(maxDate).add(this.panel.TZOffsetHours, \"h\");\r\n\r\n      if (this.panel.DateFormat.toUpperCase() == \"ELAPSED\")\r\n        $maxDate.text(dd.fromNow()).show();\r\n      else $maxDate.text(dd.format(this.panel.DateFormat)).show();\r\n    } else $maxDate.hide();\r\n  }\r\n\r\n  displayStatusMessage(msg) {\r\n    this.elem.html(\r\n      \"<div class='michaeldmoore-multistat-panel-statusmessage'>\" +\r\n      msg +\r\n      \"</div>\"\r\n    );\r\n  }\r\n\r\n  onRender() {\r\n    if (this.data != null && this.data.rows && this.data.rows.length) {\r\n      var cols = this.cols;\r\n      var dateTimeCol = -1;\r\n      var labelCol = -1;\r\n      var sortCol = 0;\r\n      var groupCol = -1;\r\n      var recolorCol = -1;\r\n\r\n      // clone dashboard variables array\r\n      var dashboardVariables = [...this.dashboardVariables];\r\n      let range = this.timeSrv.timeRangeForUrl();\r\n      dashboardVariables.push({name:\"from\", value:range.from});\r\n      dashboardVariables.push({name:\"to\", value:range.to});\r\n\r\n      cols.forEach((colName, i) => {\r\n        if (colName == this.panel.DateTimeColName) dateTimeCol = i;\r\n        if (colName == this.panel.LabelColName) labelCol = i;\r\n        if (colName == this.panel.SortColName) sortCol = i;\r\n        if (colName == this.panel.GroupColName) groupCol = i;\r\n        if (colName == this.panel.RecolorColName) recolorCol = i;\r\n\r\n        this.panel.Values.forEach((Value) => {\r\n          if (colName == Value.Name) {\r\n            Value.Col = i;\r\n          }\r\n        });\r\n      });\r\n\r\n      var SelectedValues = this.panel.Values.filter(\r\n        (value) => value.Col >= 0 && value.Selected\r\n      );\r\n\r\n      //console.log('onRender: this.data.rows\\n'+JSON.stringify(this.data.rows));\r\n\r\n      const groupedLabelFunc = function (obj) {\r\n        if (groupCol != -1) return obj[groupCol] + \":\" + obj[labelCol];\r\n        else return obj[labelCol];\r\n      };\r\n\r\n      if (this.panel.LabelNameFilter.length > 0 && labelCol != -1) {\r\n        var regex = new RegExp(this.panel.LabelNameFilter, \"\");\r\n        this.matchingRows = [];\r\n        for (let i = 0; i < this.data.rows.length; i++) {\r\n          var dd = this.data.rows[i];\r\n          var label = dd[labelCol];\r\n          if (label.match(regex) != null) this.matchingRows.push(dd);\r\n        }\r\n\r\n        if (this.matchingRows.length == 0) {\r\n          this.displayStatusMessage(\r\n            \"No data.  Regex filter '\" +\r\n            this.panel.LabelNameFilter +\r\n            \"' eliminated all \" +\r\n            this.data.rows.length +\r\n            \" rows from current query\"\r\n          );\r\n          return;\r\n        }\r\n      } else this.matchingRows = this.data.rows;\r\n\r\n      if (\r\n        this.panel.Aggregate != \"all\" &&\r\n        labelCol != -1 &&\r\n        SelectedValues.length > 0\r\n      ) {\r\n        var oo = [];\r\n        this.rows = [];\r\n        switch (this.panel.Aggregate) {\r\n          case \"first\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[0];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"last\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[d.length - 1];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"sum\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.sum(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"mean\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.mean(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n            case \"mean\":\r\n              this.rows = d3\r\n                .nest()\r\n                .key(groupedLabelFunc)\r\n                .rollup(function (d) {\r\n                  var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                  dd[valueCol] = d3.mean(d, function (d) {\r\n                    return d[valueCol];\r\n                  });\r\n                  return dd;\r\n                })\r\n                .entries(this.matchingRows)\r\n                .forEach(function (x) {\r\n                  oo.push(x.value);\r\n                });\r\n              this.rows = Array.from(oo);\r\n              break;\r\n  \r\n            case \"max\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.max(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"min\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.min(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n        }\r\n      } else {\r\n        this.rows = this.matchingRows;\r\n      }\r\n\r\n      //console.log('after aggregation('+this.panel.Aggregate+') this.rows:\\n'+JSON.stringify(this.rows));\r\n\r\n      var groupNameOffset = this.panel.ShowGroupLabels\r\n        ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n        : 0;\r\n\r\n      if (groupCol >= 0) {\r\n        this.groupedRows = d3\r\n          .nest()\r\n          .key(function (d) {\r\n            return d[groupCol];\r\n          })\r\n          .entries(this.rows);\r\n\r\n        if (this.panel.GroupNameFilter.length > 0) {\r\n          var regexGroupRows = new RegExp(this.panel.GroupNameFilter, \"\");\r\n          let matchingGroups = [];\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let groupName = this.groupedRows[i].key;\r\n            if (groupName.match(regexGroupRows) != null)\r\n              matchingGroups.push(this.groupedRows[i]);\r\n          }\r\n\r\n          if (matchingGroups.length > 0) this.groupedRows = matchingGroups;\r\n          else {\r\n            this.displayStatusMessage(\r\n              \"No groups.  Group Regex filter '\" +\r\n              this.panel.GroupNameFilter +\r\n              \"' eliminated all \" +\r\n              this.groupedRows.length +\r\n              \" groups from current query\"\r\n            );\r\n            return;\r\n          }\r\n        }\r\n\r\n        let groupSortString = this.panel.GroupSortString;\r\n\r\n        this.groupedRows.sort(function (a, b) {\r\n          var aPos = groupSortString.search(a.key);\r\n          var bPos = groupSortString.search(b.key);\r\n\r\n          if (aPos == bPos) return a.key.localeCompare(b.key);\r\n          else if (aPos == -1) return 1;\r\n          else if (bPos == -1) return -1;\r\n          else return aPos - bPos;\r\n        });\r\n      } else {\r\n        this.groupedRows = null;\r\n      }\r\n\r\n      this.elem.html(\r\n        \"<div class='\" +\r\n        this.className +\r\n        \"' style='display: flex; flex-direction: column; height:100%; width:100%'>\" +\r\n        \"</div>\"\r\n      );\r\n\r\n      var $container = this.elem.find(\"div\");\r\n\r\n      this.svg = d3\r\n        .select(\".\" + this.className)\r\n        .append(\"svg\")\r\n        .attr(\"height\", \"100%\");\r\n\r\n      if (this.panel.Legend) {\r\n        var $legend = $container\r\n          .append(\r\n            \"<div><p></p><ul class='michaeldmoore-multistat-panel-legend'></ul></div>\"\r\n          )\r\n          .find(\"ul\");\r\n\r\n        const legendValues = this.panel.Values.filter(\r\n          (value) => value.Col >= 0\r\n        );\r\n        legendValues.forEach((value, i) => {\r\n          ///////////////////////////////////////////////////////////////////////////////\r\n          // Be careful with this - the toggling/selection logic is quite complicated. //\r\n          ///////////////////////////////////////////////////////////////////////////////\r\n          let deselectedClassName = value.Selected\r\n            ? \"\"\r\n            : \" class='michaeldmoore-multistat-panel-legend-deselected'\";\r\n          $legend\r\n            .append(\"<li\" + deselectedClassName + \">\" + value.Name + \"</li>\")\r\n            .children()\r\n            .last()\r\n            .css(\"background-color\", value.HighBarColor)\r\n            .css(\"color\", this.panel.ValueColor)\r\n            .click(function () {\r\n              //console.log('legend-click() value='+JSON.stringify(value,null,2));\r\n              if (window.event.ctrlKey) {\r\n                // toggle this item only\r\n                value.Selected = !value.Selected;\r\n              } else {\r\n                if (!value.Selected || SelectedValues.length != 1) {\r\n                  // deselect everything\r\n                  legendValues.forEach((v) => (v.Selected = false));\r\n                  // and re-select this one;\r\n                  value.Selected = true;\r\n                } else {\r\n                  legendValues.forEach((v) => (v.Selected = true));\r\n                }\r\n              }\r\n              //console.log('legend-click() legendValues='+JSON.stringify(legendValues,null,2));\r\n              // force a re-render\r\n              CTRL.$scope.$apply(() => {\r\n                CTRL.render();\r\n              });\r\n            });\r\n        });\r\n      }\r\n\r\n      var h = $container.find(\"svg\").height();\r\n      var w = $container.width() - 15;\r\n\r\n      this.buildDateHtml(dateTimeCol);\r\n\r\n      var labelMargin =\r\n        $.isNumeric(this.panel.LabelMargin) && this.panel.LabelMargin >= 0\r\n          ? this.panel.LabelMargin\r\n          : null;\r\n      var lowSideMargin =\r\n        this.panel.LowSideMargin >= 0 ? this.panel.LowSideMargin : 0;\r\n      var highSideMargin =\r\n        this.panel.HighSideMargin >= 0 ? this.panel.HighSideMargin : 0;\r\n\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.highflash\")\r\n        .interrupt();\r\n\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.lowflash\")\r\n        .interrupt();\r\n\r\n      var id = this.panel.id;\r\n      var barPadding = this.panel.BarPadding;\r\n      var multiBarPadding = this.panel.MultiBarPadding;\r\n      var baseLineValue = this.panel.BaseLineValue;\r\n      var minLineValue = this.panel.MinLineValue;\r\n      var maxLineValue = this.panel.MaxLineValue;\r\n      var highLimitValue = this.panel.HighLimitValue;\r\n      var HighLimitBarColor = this.panel.HighLimitBarColor;\r\n      var HighLimitBarFlashColor = this.panel.HighLimitBarFlashColor;\r\n      var HighLimitBarFlashTimeout = this.panel.HighLimitBarFlashTimeout;\r\n      var recolorHighLimitBar = this.panel.RecolorHighLimitBar;\r\n      var Links = this.panel.Links;\r\n      var lowLimitValue = this.panel.LowLimitValue;\r\n      var LowLimitBarColor = this.panel.LowLimitBarColor;\r\n      var LowLimitBarFlashColor = this.panel.LowLimitBarFlashColor;\r\n      var LowLimitBarFlashTimeout = this.panel.LowLimitBarFlashTimeout;\r\n      var RecolorRules = this.panel.RecolorRules;\r\n      var recolorLowLimitBar = this.panel.RecolorLowLimitBar;\r\n      var flashHighLimitBar = this.panel.FlashHighLimitBar;\r\n      var flashLowLimitBar = this.panel.FlashLowLimitBar;\r\n      var tooltipType = this.panel.ToolTipType;\r\n      var tooltipFontSize = this.panel.ToolTipFontSize;\r\n      var DateTimeColName = this.panel.DateTimeColName;\r\n      var TooltipDateFormat = this.panel.TooltipDateFormat;\r\n      var ValueColName = this.panel.ValueColName;\r\n      var ValueDecimals = this.panel.ValueDecimals;\r\n      var OddRowColor = this.panel.OddRowColor;\r\n      var EvenRowColor = this.panel.EvenRowColor;\r\n      var OutlineColor = this.panel.OutlineColor;\r\n      var TZOffsetHours = this.panel.TZOffsetHours;\r\n      var GroupCols = this.panel.GroupCols;\r\n      var GroupGap = this.panel.GroupGap;\r\n      var ScaleFactor = Number(this.panel.ScaleFactor);\r\n      var ValuePosition = this.panel.ValuePosition;\r\n\r\n      var panelID = \"michaeldmoore-multistat-panel-\" + id;\r\n      var tooltipDivID = \"michaeldmoore-multistat-panel-tooltip-\" + id;\r\n\r\n      var minValue =\r\n        SelectedValues.length &&\r\n        d3.min(this.rows, function (d) {\r\n          let min = Number(d[SelectedValues[0].Col]);\r\n          for (var i = 1; i < SelectedValues.length; i++) {\r\n            let col = SelectedValues[i].Col;\r\n            let val = Number(d[col]);\r\n            if (min > val) min = val;\r\n          }\r\n          return min * ScaleFactor;\r\n        });\r\n      if ($.isNumeric(minLineValue) == false) minLineValue = minValue;\r\n\r\n      var maxValue =\r\n        SelectedValues.length &&\r\n        d3.max(this.rows, function (d) {\r\n          let max = Number(d[SelectedValues[0].Col]);\r\n          for (var i = 1; i < SelectedValues.length; i++) {\r\n            let col = SelectedValues[i].Col;\r\n            let val = Number(d[col]);\r\n            if (max < val) max = val;\r\n          }\r\n          return max * ScaleFactor;\r\n        });\r\n      if ($.isNumeric(maxLineValue) == false) maxLineValue = maxValue;\r\n\r\n      if ($.isNumeric(baseLineValue) == false) baseLineValue = 0;\r\n\r\n      if (minLineValue > baseLineValue) minLineValue = baseLineValue;\r\n\r\n      if ($.isNumeric(lowLimitValue) && minLineValue > lowLimitValue)\r\n        minLineValue = lowLimitValue;\r\n\r\n      if (maxLineValue < baseLineValue) maxLineValue = baseLineValue;\r\n\r\n      if ($.isNumeric(highLimitValue) && maxLineValue < highLimitValue)\r\n        maxLineValue = highLimitValue;\r\n\r\n      $(\"#\" + tooltipDivID).remove();\r\n\r\n      var sortData = function (data, sortDirection) {\r\n        if (sortDirection != \"none\") {\r\n          var ascending = sortDirection == \"ascending\";\r\n          data.sort(function (x, y) {\r\n            let xx = x[sortCol];\r\n            let yy = y[sortCol];\r\n\r\n            if ($.isNumeric(xx) && $.isNumeric(yy))\r\n              return ascending ? xx - yy : yy - xx;\r\n            else return ascending ? xx.localeCompare(yy) : yy.localeCompare(xx);\r\n          });\r\n        }\r\n      };\r\n\r\n      var translateValues = function (s, d) {\r\n        // lookup column index corresponding to the substitution tokens and replace with this bar's value\r\n        let s1 = s;\r\n        const re = /\\{[^}]+\\}/g;\r\n        let g = re.exec(s);\r\n        while (g) {\r\n          //console.log('Translating token '+g);\r\n          for (var i = 0; i < cols.length; i++) {\r\n            if (g == \"{\" + cols[i] + \"}\") {\r\n              s1 = s1.replace(g, d[i]);\r\n              break;\r\n            }\r\n          }\r\n\r\n          // do the same thing with dashboard variables...\r\n          for (var j = 0; j < dashboardVariables.length; j++) {\r\n            let dv = dashboardVariables[j];\r\n            if (g == \"{\" + dv.name + \"}\"){\r\n              //console.log(\"dashboard variable[\" + dv.name + \"]=\" + dv.value);\r\n              s1 = s1.replace(g, dv.value);\r\n              break;\r\n            }\r\n          }      \r\n\r\n          g = re.exec(s);\r\n        }\r\n        //console.log('Translating url '+s+' to ' + s1);\r\n        return s1;\r\n      };\r\n\r\n      var getTooltipContent = function (d) {\r\n        let html = \"\";\r\n        if (tooltipType && Array.isArray(d)) {\r\n          html +=\r\n            \"<table style='font-size:\" +\r\n            tooltipFontSize.replace(\"%\", \"\") / 100 +\r\n            \"em'>\";\r\n          if (labelCol != -1)\r\n            html +=\r\n              \"<thead><tr class='michaeldmoore-multistat-panel-tooltip-title'><th colspan='2' align='center'>\" +\r\n              d[labelCol] +\r\n              \"</th></tr></thead>\";\r\n          if (Array.isArray(d)) {\r\n            html += \"<tbody>\";\r\n            for (var i = 0; i < d.length; i++) {\r\n              if (i != labelCol) {\r\n                var cc = cols[i];\r\n                var dd = d[i];\r\n\r\n                if (cc == DateTimeColName)\r\n                  dd = moment(dd)\r\n                    .add(TZOffsetHours, \"h\")\r\n                    .format(TooltipDateFormat);\r\n                else if (cc == ValueColName && $.isNumeric(dd))\r\n                  dd = Number(dd).toFixed(ValueDecimals);\r\n\r\n                html += \"<tr><td>\" + cc + \"</td><td>\" + dd + \"</td></tr>\";\r\n              }\r\n            }\r\n            html += \"</tbody></table>\";\r\n          }\r\n\r\n          if (Links.length) {\r\n            html += \"<table><tbody>\";\r\n            Links.forEach((l) => {\r\n              html +=\r\n                \"<tr><td align='right'><i class='fa fa-link'></i></td><td><a href='\" +\r\n                translateValues(l.url, d) +\r\n                (l.newtab ? \"' target='_blank'\" : \"'\") +\r\n                \">\" +\r\n                translateValues(l.name, d) +\r\n                \"</a></td></tr>\";\r\n            });\r\n            html += \"</tbody></table>\";\r\n          }\r\n        }\r\n\r\n        return html;\r\n      };\r\n\r\n      var isInTooltip = false;\r\n      var $panel;\r\n      var $panelContent;\r\n      var panelContent;\r\n      var tooltipShow = function (d) {\r\n        if ($(\"#\" + tooltipDivID).length == 0) {\r\n          $panel = $(\".\" + panelID);\r\n          //          $panelContent = this.elem.closest(\".panel-content\");\r\n          $panelContent = $panel.parent().parent().parent().parent();\r\n          panelContent = d3.selectAll($panelContent);\r\n          panelContent\r\n            .append(\"div\")\r\n            .attr(\"id\", tooltipDivID)\r\n            .style(\"opacity\", 0);\r\n        }\r\n\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n\r\n        let tooltipHtml = getTooltipContent(d);\r\n        if (tooltipHtml.length){\r\n          tooltipDiv\r\n          .classed(\r\n            \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n            true\r\n          )\r\n          .html(tooltipHtml)\r\n          .on(\"mouseover\", function () {\r\n            if (!isInTooltip) {\r\n              isInTooltip = true;\r\n              tooltipHide(true);\r\n            }\r\n          })\r\n          .on(\"mouseleave\", function () {\r\n            isInTooltip = false;\r\n            tooltipHide(false);\r\n          });\r\n\r\n        const $tooltipDiv = $(\"#\" + tooltipDivID);\r\n        const tooltipWidth = $tooltipDiv.width();\r\n        const tooltipHeight = $tooltipDiv.height();\r\n        const minTop = 28;\r\n\r\n        const mouseCoordinates = d3.mouse(panelContent.node());\r\n        let Left = mouseCoordinates[0] - tooltipWidth / 2;\r\n        let Top = mouseCoordinates[1] + minTop - tooltipHeight / 2;\r\n\r\n        let panelWidth = $panel.width();\r\n        let panelHeight = $panel.height();\r\n\r\n        if (Left < 0) Left = 0;\r\n        else if (Left > panelWidth - tooltipWidth)\r\n          Left = panelWidth - tooltipWidth;\r\n\r\n        if (Top < 0) Top = 0;\r\n        else if (Top > panelHeight + minTop - tooltipHeight)\r\n          Top = panelHeight + minTop - tooltipHeight;\r\n\r\n        tooltipDiv\r\n          .transition()\r\n          .duration(200)\r\n          .style(\"opacity\", 1.0)\r\n          .style(\"left\", Left + \"px\")\r\n          .style(\"top\", Top + \"px\");\r\n        }\r\n      };\r\n\r\n      var tooltipHide = function (cancel) {\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n\r\n        if (cancel) {\r\n          //console.log(\"cancelling tooltip hide\");\r\n          tooltipDiv.transition().style(\"opacity\", 1.0);\r\n        } else {\r\n          tooltipDiv\r\n            .transition()\r\n            .duration(2000)\r\n            .style(\"opacity\", 0)\r\n            .on(\"end\", function () {\r\n              d3.select(this)\r\n                .html(\"\")\r\n                .classed(\r\n                  \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n                  false\r\n                );\r\n            });\r\n        }\r\n      };\r\n\r\n      var scaleAndClipValue = function (d) {\r\n        var val = d * ScaleFactor;\r\n        if (val > maxLineValue) val = maxLineValue;\r\n        if (val < minLineValue) val = minLineValue;\r\n\r\n        return val;\r\n      };\r\n\r\n      var getBarColor = function (d, valueDef) {\r\n        if (recolorCol != -1) {\r\n          let recolorString = d[recolorCol];\r\n\r\n          if (RecolorRules.length) {\r\n            if (recolorString) {\r\n              let recolorRule = RecolorRules.find((r) => {\r\n                if (r.pattern) {\r\n                  switch (r.matchType) {\r\n                    case \"reg-ex\":\r\n                      let re = RegExp(r.pattern);\r\n                      return re.test(recolorString);\r\n\r\n                    case \"list\":\r\n                      return r.pattern.indexOf(recolorString) != -1;\r\n\r\n                    case \"subset\":\r\n                      return recolorString.indexOf(r.pattern) != -1;\r\n\r\n                    default:\r\n                      return r.pattern === recolorString;\r\n                  }\r\n                }\r\n                return false;\r\n              });\r\n\r\n              if (recolorRule) return recolorRule.color;\r\n            }\r\n          }\r\n\r\n          // no matching rule found, check if recolorString is a valid color\r\n          const s = new Option().style;\r\n          s.color = recolorString;\r\n          if (s.color !== \"\") return recolorString;\r\n        }\r\n\r\n        let value = d[valueDef.Col] * ScaleFactor;\r\n        if (recolorHighLimitBar && value > highLimitValue)\r\n          return HighLimitBarColor;\r\n        if (recolorLowLimitBar && value < lowLimitValue)\r\n          return LowLimitBarColor;\r\n\r\n        // All else fails, let's use the standard colors for this bar...\r\n        return value > baseLineValue\r\n          ? valueDef.HighBarColor\r\n          : valueDef.LowBarColor;\r\n      };\r\n\r\n      if (this.panel.Horizontal) {\r\n        var plotGroupHorizontal = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g1 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueWidth = 0;\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", left + w)\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"end\")\r\n                  .attr(\"dominant-baseline\", \"central\")\r\n                  .each(function (d, i) {\r\n                    var thisWidth = this.getComputedTextLength();\r\n                    maxValueWidth = d3.max([maxValueWidth, thisWidth]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            w -= maxValueWidth;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelWidth = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g1.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                if (SelectedValues.length) {\r\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\r\n                  let maxvalue = minvalue;\r\n                  SelectedValues.forEach((v) => {\r\n                    let value = d[v.Col] * ScaleFactor;\r\n                    if (minvalue > value) minvalue = value;\r\n                    if (maxvalue < value) maxvalue = value;\r\n                  });\r\n\r\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\r\n                    return panel.OutOfRangeLabelColor;\r\n                }\r\n                return panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var y = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var x = left + a / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisWidth = a;\r\n                maxLabelWidth = d3.max([maxLabelWidth, thisWidth]);\r\n              });\r\n\r\n            if ($.isNumeric(labelMargin)) {\r\n              left += labelMargin;\r\n              w -= labelMargin;\r\n            } else {\r\n              left += maxLabelWidth;\r\n              w -= maxLabelWidth;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([minLineValue, maxLineValue])\r\n            .range([left + labelMargin, left + w])\r\n            .nice();\r\n\r\n          function vLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"y1\", hh + highSideMargin)\r\n              .attr(\"x1\", valueScale(value))\r\n              .attr(\"y2\", hh + dh - lowSideMargin)\r\n              .attr(\"x2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            vLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            vLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            vLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            vLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            vLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"width\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(val) - valueScale(baseLineValue)\r\n                    );\r\n                  })\r\n                  .attr(\"height\", height)\r\n                  .attr(\"x\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (height + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            var bw = labelScale.step();\r\n\r\n            if (panel.LineWidth) {\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneY;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              SelectedValues.forEach((value, index) => {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                if (panel.LineWidth) {\r\n                  var points = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    var d = data[i];\r\n                    var y =\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index;\r\n                    var x = valueScale(d[value.Col] * ScaleFactor);\r\n                    points.push({\r\n                      x,\r\n                      y,\r\n                    });\r\n                  }\r\n\r\n                  svg\r\n                    .append(\"path\")\r\n                    .attr(\"d\", lineFunction(points))\r\n                    .attr(\"stroke\", panel.LineColor)\r\n                    .attr(\"stroke-width\", panel.LineWidth)\r\n                    .attr(\"fill\", \"none\");\r\n                }\r\n\r\n                if (panel.DotSize) {\r\n                  g1.append(\"circle\")\r\n                    .attr(\"r\", panel.DotSize / 2.0)\r\n                    .attr(\"fill\", panel.DotColor)\r\n                    .attr(\"cy\", function (d) {\r\n                      return (\r\n                        labelScale(d[labelCol]) +\r\n                        width / 2 +\r\n                        (width + gap) * index\r\n                      );\r\n                    })\r\n                    .attr(\"cx\", function (d) {\r\n                      return valueScale(d[value.Col] * ScaleFactor);\r\n                    });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      // \"bar end\"\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val) + (val > baseLineValue);\r\n                    }\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"start\"\r\n                        : \"end\";\r\n                    // \"bar end\"\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"end\"\r\n                        : \"start\";\r\n                  })\r\n                  .attr(\"dominant-baseline\", \"central\");\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          // Add High Side Value Axis (X)\r\n          if (highSideMargin > 0) {\r\n            var ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(1,\" + (hh + highSideMargin) + \")\")\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisTop(valueScale));\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n\r\n          // Add Low Side Value Axis (X)\r\n          if (lowSideMargin > 0) {\r\n            var ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(0,\" + (hh + dh - lowSideMargin) + \")\"\r\n              )\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisBottom(valueScale));\r\n\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n        };\r\n\r\n        if (this.groupedRows != null) {\r\n          var gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          var dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each row of groups...\r\n          var pointsPerRow = [];\r\n          for (let i = 0; i < this.groupedRows.length / gcols; i++)\r\n            pointsPerRow.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let rr = Math.floor(i / gcols);\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerRow[rr] < u) pointsPerRow[rr] = u;\r\n          }\r\n\r\n          var totalPoints = 0;\r\n          for (let i = 0; i < pointsPerRow.length; i++)\r\n            totalPoints += pointsPerRow[i];\r\n\r\n          var rowOverheadHeight =\r\n            groupNameOffset +\r\n            this.panel.LowSideMargin +\r\n            this.panel.HighSideMargin;\r\n          var rowHeight =\r\n            (h - pointsPerRow.length * rowOverheadHeight) / totalPoints;\r\n\r\n          var numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          var hh = 0;\r\n          for (var rr = 0; rr < numRows; rr++) {\r\n            var nn = pointsPerRow[rr];\r\n            var dh = rowOverheadHeight + nn * rowHeight;\r\n            hh += dh;\r\n            for (var cc = 0; cc < gcols; cc++) {\r\n              var ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupHorizontal(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  cc * dw,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          plotGroupHorizontal(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      } else {\r\n        var plotGroupVertical = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t.attr(\"width\", w)\r\n\t\t\t.attr(\"height\", dh)\r\n\t\t\t.attr(\"x\", left)\r\n\t\t\t.attr(\"y\", hh)\r\n\t\t\t.attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .range([left + lowSideMargin, left + w - highSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .range([left + lowSideMargin, left + w - highSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d, i) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g2 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueHeight = 0;\r\n\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", hh)\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", \"text-before-edge\")\r\n                  .each(function (d, i) {\r\n                    var thisHeight = this.getBBox().height;\r\n                    maxValueHeight = d3.max([maxValueHeight, thisHeight]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            hh += maxValueHeight;\r\n            dh -= maxValueHeight;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelHeight = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g2.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                if (SelectedValues.length) {\r\n                  // This should check ALL the SelectedValues, bot just [0]///////////////////////////////////////////////\r\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\r\n                  let maxvalue = minvalue;\r\n\r\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\r\n                    return panel.OutOfRangeLabelColor;\r\n                }\r\n                return panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var x = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var y = hh + dh - b / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisHeight = b;\r\n                maxLabelHeight = d3.max([maxLabelHeight, thisHeight]);\r\n              });\r\n            if ($.isNumeric(labelMargin)) {\r\n              dh -= labelMargin;\r\n            } else {\r\n              dh -= maxLabelHeight;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([maxLineValue, minLineValue])\r\n            .range([hh, hh + dh])\r\n            .nice();\r\n\r\n          function hLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"x1\", left + lowSideMargin)\r\n              .attr(\"y1\", valueScale(value))\r\n              .attr(\"x2\", left + w - highSideMargin)\r\n              .attr(\"y2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            hLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            hLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            hLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            hLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            hLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"height\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(baseLineValue) - valueScale(val)\r\n                    );\r\n                  })\r\n                  .attr(\"width\", width)\r\n                  .attr(\"y\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (width + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            var bw = labelScale.step();\r\n\r\n            if (panel.LineWidth) {\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneX;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              SelectedValues.forEach((value, index) => {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                if (panel.LineWidth) {\r\n                  var points = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    var d = data[i];\r\n                    var x =\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index;\r\n                    var y = valueScale(d[value.Col] * ScaleFactor);\r\n                    points.push({\r\n                      x,\r\n                      y,\r\n                    });\r\n                  }\r\n\r\n                  svg\r\n                    .append(\"path\")\r\n                    .attr(\"d\", lineFunction(points))\r\n                    .attr(\"stroke\", panel.LineColor)\r\n                    .attr(\"stroke-width\", panel.LineWidth)\r\n                    .attr(\"fill\", \"none\");\r\n                }\r\n\r\n                if (panel.DotSize) {\r\n                  g2.append(\"circle\")\r\n                    .attr(\"r\", panel.DotSize / 2.0)\r\n                    .attr(\"fill\", panel.DotColor)\r\n                    .attr(\"cx\", function (d) {\r\n                      return (\r\n                        labelScale(d[labelCol]) +\r\n                        width / 2 +\r\n                        (width + gap) * index\r\n                      );\r\n                    })\r\n                    .attr(\"cy\", function (d) {\r\n                      return valueScale(d[value.Col] * ScaleFactor);\r\n                    });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val);\r\n                    }\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-after-edge\"\r\n                        : \"text-before-edge\";\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-before-edge\"\r\n                        : \"text-after-edge\";\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          if (lowSideMargin > 0) {\r\n            let ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(\" + (left + lowSideMargin) + \", 0)\")\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisLeft(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n\r\n          if (highSideMargin > 0) {\r\n            let ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(\" + (left + w - highSideMargin) + \", 0)\"\r\n              )\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisRight(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n        };\r\n\r\n        let groupNameOffset = this.panel.ShowGroupLabels\r\n          ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n          : 0;\r\n\r\n        if (this.groupedRows != null) {\r\n          let gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          let dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each column of groups...\r\n          var pointsPerCol = [];\r\n          for (let i = 0; i < gcols; i++) pointsPerCol.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let cc = i % gcols;\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerCol[cc] < u) pointsPerCol[cc] = u;\r\n          }\r\n\r\n          let totalPoints = 0;\r\n          for (let i = 0; i < pointsPerCol.length; i++)\r\n            totalPoints += pointsPerCol[i];\r\n\r\n          var colOverheadWidth =\r\n            this.panel.LowSideMargin + this.panel.HighSideMargin;\r\n          var colWidth =\r\n            (w - pointsPerCol.length * colOverheadWidth) / totalPoints;\r\n\r\n          let numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          let dh = h / numRows;\r\n          let hh = dh;\r\n          for (let rr = 0; rr < numRows; rr++) {\r\n            let ww = 0;\r\n            for (let cc = 0; cc < gcols; cc++) {\r\n              let nn = pointsPerCol[cc];\r\n\r\n              let ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupVertical(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  ww,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n                ww += dw;\r\n              }\r\n            }\r\n            hh += dh;\r\n          }\r\n        } else {\r\n          plotGroupVertical(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      }\r\n\r\n      var pulseHigh = function (svg) {\r\n        var highFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.highflash\"\r\n        );\r\n\r\n        if (\r\n          $.isNumeric(HighLimitBarFlashTimeout) &&\r\n          highFlashRects._groups.length > 0 &&\r\n          highFlashRects._groups[0].length > 0\r\n        ) {\r\n          highFlashRects.transition().on(\"start\", function highRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", HighLimitBarFlashColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", HighLimitBarColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", highRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      var pulseLow = function (svg) {\r\n        var lowFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.lowflash\"\r\n        );\r\n        if (\r\n          $.isNumeric(LowLimitBarFlashTimeout) &&\r\n          lowFlashRects._groups.length > 0 &&\r\n          lowFlashRects._groups[0].length > 0\r\n        ) {\r\n          lowFlashRects.transition().on(\"start\", function lowRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", LowLimitBarFlashColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", LowLimitBarColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", lowRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      pulseHigh(this.svg);\r\n      pulseLow(this.svg);\r\n    }\r\n\r\n    /*\r\n    var drag = d3.drag()\r\n      .on(\"drag\", function () {\r\n        d3.select(this).attr(\"cx\", d3.event.x).attr(\"cy\", d3.event.y);\r\n      });\r\n\r\n    if (!this.panel.Legend) {\r\n      this.svg\r\n        .append(\"rect\")\r\n        .attr(\"x\", 10)\r\n        .attr(\"y\", 20)\r\n        .attr(\"width\", 100)\r\n        .attr(\"height\", 200)\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"stroke\", \"yellow\")\r\n        .call(this.drag);\r\n    }\r\n*/\r\n\r\n    this.ctrl.renderingCompleted();\r\n  }\r\n\r\n  onConfigChanged() {\r\n    this.refresh();\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.ctrl = ctrl;\r\n    this.elem = elem;\r\n\r\n    // for backward compatability (grafana 6.6.0 and earlier)\r\n    var panelContentElem = elem.find(\".panel-content\");\r\n    if (panelContentElem.length) this.elem = panelContentElem;\r\n\r\n    CTRL = ctrl;\r\n  }\r\n}\r\n\r\nvar CTRL;\r\n\r\nMultistatPanelCtrl.templateUrl = \"module.html\";\r\n\r\nexport { MultistatPanelCtrl as PanelCtrl };\r\n"]}