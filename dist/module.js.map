{"version":3,"sources":["../src/module.js"],"names":["MetricsPanelCtrl","$","_","moment","d3","getTemplateSrv","PanelEvents","templateSrv","MultistatPanelCtrl","$scope","$injector","panelDefaults","timeFrom","timeShift","BarPadding","MultiBarPadding","BaseLineColor","BaseLineWidth","BaseLineValue","DateTimeColName","DateFormat","TooltipDateFormat","FlashHighLimitBar","FlashLowLimitBar","HighAxisColor","HighAxisWidth","HighBarColor","RecolorColName","HighLimitBarColor","HighLimitBarFlashColor","HighLimitBarFlashTimeout","HighLimitLineColor","HighLimitValue","HighLmitLineWidth","HighSideMargin","Horizontal","LabelColName","LabelNameFilter","LabelColor","OutOfRangeLabelColor","GroupLabelColor","LabelFontSize","GroupLabelFontSize","GroupGap","LabelMargin","Legend","Links","LowAxisColor","LowAxisWidth","LowBarColor","LowLimitBarColor","LowLimitBarFlashColor","LowLimitBarFlashTimeout","LowLimitLineColor","LowLimitValue","LowLmitLineWidth","LowSideMargin","MaxLineColor","MaxLineWidth","MaxLineValue","MinLineColor","MinLineWidth","MinLineValue","RecolorHighLimitBar","RecolorLowLimitBar","RecolorRules","ShowBaseLine","ShowDate","Aggregate","ShowHighLimitLine","ShowLabels","ShowGroupLabels","ShowLeftAxis","ShowLowLimitLine","ShowMaxLine","ShowMinLine","ShowRightAxis","ShowValues","SortColName","SortDirection","TZOffsetHours","ToolTipType","ToolTipFontSize","ValueColName","Values","ValueDecimals","ValueColor","ValueFontSize","OddRowColor","EvenRowColor","OutlineColor","GroupSortString","GroupCols","GroupNameFilter","ScaleFactor","ValuePosition","LableAngle","ShowBars","ShowLines","LineWidth","LineColor","DotSize","DotColor","CurveType","defaults","panel","length","Name","events","on","dataReceived","onDataReceived","bind","dataError","onDataError","render","onRender","dataSnapshotLoad","onDataSnapshotLoad","editModeInitialized","onInitEditMode","className","id","obj","names","value","name","shift","updateNamedValue","Number","snapshotData","err","seriesList","data","displayStatusMessage","status","statusText","metricNames","sortDirections","aggregations","fontSizes","valuePositions","curveTypes","matchTypes","tooltipTypes","addEditorTab","cols","rows","type","columns","i","text","cols0","concat","index","up","ctrl","splice","dateTimeCol","$title","elem","closest","find","$maxDate","append","children","last","maxDate","dd","add","toUpperCase","fromNow","show","format","hide","msg","html","labelCol","sortCol","groupCol","recolorCol","forEach","colName","GroupColName","Value","Col","SelectedValues","filter","Selected","groupedLabelFunc","regex","RegExp","matchingRows","label","match","push","oo","nest","key","rollup","d","entries","x","Object","values","assign","sum","Array","from","mean","valueCol","max","min","groupNameOffset","replace","groupedRows","regexGroupRows","matchingGroups","groupName","groupSortString","sort","a","b","aPos","search","bPos","localeCompare","$container","svg","select","attr","$legend","legendValues","deselectedClassName","css","click","window","event","ctrlKey","v","CTRL","$apply","h","height","w","width","buildDateHtml","labelMargin","isNumeric","lowSideMargin","highSideMargin","selectAll","interrupt","barPadding","multiBarPadding","baseLineValue","minLineValue","maxLineValue","highLimitValue","recolorHighLimitBar","lowLimitValue","recolorLowLimitBar","flashHighLimitBar","flashLowLimitBar","tooltipType","tooltipFontSize","panelID","tooltipDivID","minValue","col","val","maxValue","remove","sortData","sortDirection","ascending","y","xx","yy","translateValues","s","s1","re","g","exec","getTooltipContent","isArray","cc","toFixed","l","url","newtab","isInTooltip","$panel","$panelContent","panelContent","tooltipShow","parent","style","tooltipDiv","classed","tooltipHide","$tooltipDiv","tooltipWidth","tooltipHeight","minTop","mouseCoordinates","mouse","node","Left","Top","panelWidth","panelHeight","transition","duration","cancel","scaleAndClipValue","getBarColor","valueDef","recolorString","recolorRule","r","pattern","matchType","test","indexOf","color","Option","plotGroupHorizontal","numRows","left","hh","dh","labels","map","Math","random","toString","substr","labelScale","scaleBand","domain","rangeRound","paddingInner","paddingOuter","stripedata","range","stripeScale","oddeven","enter","step","g1","maxValueWidth","gap","bandwidth","each","thisWidth","getComputedTextLength","maxLabelWidth","labelAngle","minvalue","maxvalue","bbox","getBBox","sin","PI","c","cos","abs","valueScale","scaleLinear","nice","vLine","strokeWidth","HighLimitLineWidth","LowLimitLineWidth","bw","curveFunc","curveLinear","curveMonotoneY","curveCardinal","curveCatmullRom","lineFunction","line","curve","points","ggHighSide","call","axisTop","ggLowSide","axisBottom","gcols","dw","pointsPerRow","rr","floor","u","totalPoints","rowOverheadHeight","rowHeight","ceil","nn","ii","plotGroupVertical","g2","maxValueHeight","thisHeight","maxLabelHeight","hLine","curveMonotoneX","axisLeft","tickSizeInner","tickSizeOuter","ticks","axisRight","pointsPerCol","colOverheadWidth","colWidth","ww","pulseHigh","highFlashRects","_groups","highRepeat","active","pulseLow","lowFlashRects","lowRepeat","renderingCompleted","refresh","scope","attrs","panelContentElem","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGSA,sB,kBAAAA,gB;;AACFC,O;;AAEAC,O;;AACAC,Y;;AAEKC,Q;;AACHC,oB,mBAAAA,c;;AACAC,iB,gBAAAA,W;;;;;;;;;;;;;;;;;;;;;AAIHC,iB,GAAcF,gB;;2BAEdG,kB;;;AACJ;AACA,oCAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,8IACvBD,MADuB,EACfC,SADe;;AAG7B,cAAIC,gBAAgB;AAClBC,sBAAU,IADQ;AAElBC,uBAAW,IAFO;AAGlBC,wBAAY,EAHM;AAIlBC,6BAAiB,EAJC;AAKlBC,2BAAe,SALG;AAMlBC,2BAAe,CANG;AAOlBC,2BAAe,IAPG;AAQlBC,6BAAiB,MARC;AASlBC,wBAAY,qBATM;AAUlBC,+BAAmB,qBAVD;AAWlBC,+BAAmB,KAXD;AAYlBC,8BAAkB,KAZA;AAalBC,2BAAe,SAbG;AAclBC,2BAAe,CAdG;AAelBC,0BAAc,kBAfI;AAgBlBC,4BAAgB,IAhBE;AAiBlBC,+BAAmB,SAjBD;AAkBlBC,oCAAwB,SAlBN;AAmBlBC,sCAA0B,IAnBR;AAoBlBC,gCAAoB,SApBF;AAqBlBC,4BAAgB,IArBE;AAsBlBC,+BAAmB,CAtBD;AAuBlBC,4BAAgB,EAvBE;AAwBlBC,wBAAY,KAxBM;AAyBlBC,0BAAc,EAzBI;AA0BlBC,6BAAiB,EA1BC;AA2BlBC,wBAAY,SA3BM;AA4BlBC,kCAAsB,SA5BJ;AA6BlBC,6BAAiB,SA7BC;AA8BlBC,2BAAe,MA9BG;AA+BlBC,gCAAoB,MA/BF;AAgClBC,sBAAU,CAhCQ;AAiClBC,yBAAa,IAjCK;AAkClBC,oBAAQ,KAlCU;AAmClBC,mBAAO,EAnCW;AAoClBC,0BAAc,SApCI;AAqClBC,0BAAc,CArCI;AAsClBC,yBAAa,MAtCK;AAuClBC,8BAAkB,SAvCA;AAwClBC,mCAAuB,SAxCL;AAyClBC,qCAAyB,GAzCP;AA0ClBC,+BAAmB,SA1CD;AA2ClBC,2BAAe,IA3CG;AA4ClBC,8BAAkB,CA5CA;AA6ClBC,2BAAe,EA7CG;AA8ClBC,0BAAc,kBA9CI;AA+ClBC,0BAAc,CA/CI;AAgDlBC,0BAAc,IAhDI;AAiDlBC,0BAAc,SAjDI;AAkDlBC,0BAAc,CAlDI;AAmDlBC,0BAAc,IAnDI;AAoDlBC,iCAAqB,KApDH;AAqDlBC,gCAAoB,KArDF;AAsDlBC,0BAAc,EAtDI;AAuDlBC,0BAAc,KAvDI;AAwDlBC,sBAAU,KAxDQ;AAyDlBC,uBAAW,MAzDO;AA0DlBC,+BAAmB,KA1DD;AA2DlBC,wBAAY,IA3DM;AA4DlBC,6BAAiB,IA5DC;AA6DlBC,0BAAc,IA7DI;AA8DlBC,8BAAkB,KA9DA;AA+DlBC,yBAAa,KA/DK;AAgElBC,yBAAa,KAhEK;AAiElBC,2BAAe,IAjEG;AAkElBC,wBAAY,IAlEM;AAmElBC,yBAAa,OAnEK;AAoElBC,2BAAe,WApEG;AAqElBC,2BAAe,CArEG;AAsElBC,yBAAa,EAtEK;AAuElBC,6BAAiB,MAvEC;AAwElBC,0BAAc,EAxEI;AAyElBC,oBAAQ,EAzEU;AA0ElBC,2BAAe,CA1EG;AA2ElBC,wBAAY,SA3EM;AA4ElBC,2BAAe,MA5EG;AA6ElBC,yBAAa,wBA7EK;AA8ElBC,0BAAc,wBA9EI;AA+ElBC,0BAAc,wBA/EI;AAgFlBC,6BAAiB,EAhFC;AAiFlBC,uBAAW,CAjFO;AAkFlBC,6BAAiB,EAlFC;AAmFlBC,yBAAa,CAnFK;AAoFlBC,2BAAe,KApFG;AAqFlBC,wBAAY,CArFM;AAsFlBC,sBAAU,IAtFQ;AAuFlBC,uBAAW,KAvFO;AAwFlBC,uBAAW,CAxFO;AAyFlBC,uBAAW,MAzFO;AA0FlBC,qBAAS,EA1FS;AA2FlBC,sBAAU,OA3FQ;AA4FlBC,uBAAW;AA5FO,WAApB;;AA+FArG,YAAEsG,QAAF,CAAW,MAAKC,KAAhB,EAAuB9F,aAAvB;;AAEA;AACA,cAAI,MAAK8F,KAAL,CAAWrB,MAAX,CAAkBsB,MAAlB,KAA6B,CAAjC,EAAoC;AAClC,kBAAKD,KAAL,CAAWrB,MAAX,GAAoB,CAClB;AACEuB,oBAAM,MAAKF,KAAL,CAAWtB,YADnB;AAEElC,2BAAa,MAAKwD,KAAL,CAAWxD,WAF1B;AAGEvB,4BAAc,MAAK+E,KAAL,CAAW/E;AAH3B,aADkB,CAApB;AAOA,mBAAO,MAAK+E,KAAL,CAAWtB,YAAlB;AACA,mBAAO,MAAKsB,KAAL,CAAWxD,WAAlB;AACA,mBAAO,MAAKwD,KAAL,CAAW/E,YAAlB;AACD;;AAED;;;;;;;;;;;AAWA,gBAAKkF,MAAL,CAAYC,EAAZ,CACEvG,YAAYwG,YADd,EAEE,MAAKC,cAAL,CAAoBC,IAApB,OAFF,EAGEvG,MAHF;;AAMA,gBAAKmG,MAAL,CAAYC,EAAZ,CAAevG,YAAY2G,SAA3B,EAAsC,MAAKC,WAAL,CAAiBF,IAAjB,OAAtC,EAAmEvG,MAAnE;;AAEA,gBAAKmG,MAAL,CAAYC,EAAZ,CAAevG,YAAY6G,MAA3B,EAAmC,MAAKC,QAAL,CAAcJ,IAAd,OAAnC;;AAEA,gBAAKJ,MAAL,CAAYC,EAAZ,CACEvG,YAAY+G,gBADd,EAEE,MAAKC,kBAAL,CAAwBN,IAAxB,OAFF;AAIA,gBAAKJ,MAAL,CAAYC,EAAZ,CACEvG,YAAYiH,mBADd,EAEE,MAAKC,cAAL,CAAoBR,IAApB,OAFF;AAIA,gBAAKJ,MAAL,CAAYC,EAAZ,CACEvG,YAAY+G,gBADd,EAEE,MAAKC,kBAAL,CAAwBN,IAAxB,OAFF;AAIA,gBAAKS,SAAL,GAAiB,mCAAmC,MAAKhB,KAAL,CAAWiB,EAA/D;AAnJ6B;AAoJ9B;;;;2CAEgBC,G,EAAKC,K,EAAOC,K,EAAO;AAClC,gBAAIC,OAAOF,MAAMG,KAAN,EAAX;AACA,gBAAIJ,IAAIG,IAAJ,CAAJ,EAAe;AACb,kBAAIF,MAAMlB,MAAV,EAAkB,KAAKsB,gBAAL,CAAsBL,IAAIG,IAAJ,CAAtB,EAAiCF,KAAjC,EAAwCC,KAAxC,EAAlB,KACKF,IAAIG,IAAJ,IAAYG,OAAOJ,KAAP,CAAZ;AACN;AACF;;;6CAEkBK,Y,EAAc;AAC/B,iBAAKnB,cAAL,CAAoBmB,YAApB;AACD;;;sCAEWC,G,EAAK;AACf,iBAAKC,UAAL,GAAkB,EAAlB;AACA,iBAAKC,IAAL,GAAY,EAAZ;AACA,iBAAKC,oBAAL,CACE,2BAA2BH,IAAII,MAA/B,GAAwC,IAAxC,GAA+CJ,IAAIK,UADrD;AAGD;;;2CAEgB;AACf,iBAAKC,WAAL,GAAmB,CACjB,KADiB,EAEjB,KAFiB,EAGjB,KAHiB,EAIjB,SAJiB,EAKjB,OALiB,EAMjB,MANiB,EAOjB,OAPiB,EAQjB,OARiB,EASjB,MATiB,EAUjB,OAViB,CAAnB;AAYA,iBAAKC,cAAL,GAAsB,CAAC,MAAD,EAAS,WAAT,EAAsB,YAAtB,CAAtB;AACA,iBAAKC,YAAL,GAAoB,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,MAAzB,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,KAA/C,CAApB;AACA,iBAAKC,SAAL,GAAiB,CACf,KADe,EAEf,KAFe,EAGf,KAHe,EAIf,KAJe,EAKf,KALe,EAMf,MANe,EAOf,MAPe,EAQf,MARe,EASf,MATe,EAUf,MAVe,EAWf,MAXe,EAYf,MAZe,EAaf,MAbe,EAcf,MAde,EAef,MAfe,CAAjB;AAiBA,iBAAKC,cAAL,GAAsB,CAAC,UAAD,EAAa,SAAb,EAAwB,KAAxB,CAAtB;AACA,iBAAKC,UAAL,GAAkB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,aAAnC,CAAlB;AACA,iBAAKC,UAAL,GAAkB,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,EAA4B,QAA5B,CAAlB;AACA,iBAAKC,YAAL,GAAoB,CAAC,OAAD,EAAU,MAAV,CAApB;AACA,iBAAKC,YAAL,CACE,SADF,EAEE,2DAFF,EAGE,CAHF;AAKA,iBAAKA,YAAL,CACE,QADF,EAEE,0DAFF,EAGE,CAHF;AAKA,iBAAKA,YAAL,CACE,UADF,EAEE,4DAFF,EAGE,CAHF;AAKA,iBAAKA,YAAL,CACE,SADF,EAEE,2DAFF,EAGE,CAHF;AAKA,iBAAKA,YAAL,CACE,kBADF,EAEE,kEAFF,EAGE,CAHF;AAKA,iBAAKA,YAAL,CACE,WADF,EAEE,4DAFF,EAGE,CAHF;AAKD;;;yCAEcZ,I,EAAM;AACnB,iBAAKa,IAAL,GAAY,EAAZ;AACA;AACA,gBAAIb,KAAK3B,MAAL,IAAe,CAAnB,EAAsB;AACpB,mBAAK4B,oBAAL,CAA0B,iBAA1B;AACA,mBAAKD,IAAL,GAAYA,IAAZ;AACA,mBAAKc,IAAL,GAAY,IAAZ;AACA,mBAAKhC,MAAL;AACD,aALD,MAKO,IAAIkB,KAAK,CAAL,EAAQe,IAAR,IAAgB,OAAhB,IAA2Bf,KAAK,CAAL,EAAQgB,OAAvC,EAAgD;AACrD,mBAAKhB,IAAL,GAAYA,KAAK,CAAL,CAAZ;;AAEA,mBAAK,IAAIiB,IAAI,CAAb,EAAgBA,IAAI,KAAKjB,IAAL,CAAUgB,OAAV,CAAkB3C,MAAtC,EAA8C4C,GAA9C;AACE,qBAAKJ,IAAL,CAAUI,CAAV,IAAe,KAAKjB,IAAL,CAAUgB,OAAV,CAAkBC,CAAlB,EAAqBC,IAApC;AADF,eAEA,KAAKC,KAAL,GAAa,CAAC,EAAD,EAAKC,MAAL,CAAY,KAAKP,IAAjB,CAAb;;AAEA,mBAAK/B,MAAL;AACD,aARM,MAQA;AACL,mBAAKmB,oBAAL,CAA0B,wCAA1B;AACA,mBAAKD,IAAL,GAAYA,IAAZ;AACA,mBAAKc,IAAL,GAAY,IAAZ;AACA,mBAAKhC,MAAL;AACD;AACF;;;0CAEeuC,K,EAAOC,E,EAAI;AACzB,gBAAMvE,SAAS,KAAKwE,IAAL,CAAUnD,KAAV,CAAgBrB,MAA/B;AACA,gBAAIuE,EAAJ,EAAQ;AACN,kBAAID,KAAJ,EAAWtE,OAAOsE,KAAP,IAAgBtE,OAAOyE,MAAP,CAAcH,QAAQ,CAAtB,EAAyB,CAAzB,EAA4BtE,OAAOsE,KAAP,CAA5B,EAA2C,CAA3C,CAAhB;AACZ,aAFD,MAEO;AACL,kBAAIA,QAAQ,CAAR,GAAYtE,OAAOsB,MAAvB,EACEtB,OAAOsE,KAAP,IAAgBtE,OAAOyE,MAAP,CAAcH,QAAQ,CAAtB,EAAyB,CAAzB,EAA4BtE,OAAOsE,KAAP,CAA5B,EAA2C,CAA3C,CAAhB;AACH;;AAED,iBAAKvC,MAAL;AACD;;;gDAEqBuC,K,EAAOC,E,EAAI;AAC/B,gBAAM1F,eAAe,KAAK2F,IAAL,CAAUnD,KAAV,CAAgBxC,YAArC;AACA,gBAAI0F,EAAJ,EAAQ;AACN,kBAAID,KAAJ,EACEzF,aAAayF,KAAb,IAAsBzF,aAAa4F,MAAb,CACpBH,QAAQ,CADY,EAEpB,CAFoB,EAGpBzF,aAAayF,KAAb,CAHoB,EAIpB,CAJoB,CAAtB;AAKH,aAPD,MAOO;AACL,kBAAIA,QAAQ,CAAR,GAAYzF,aAAayC,MAA7B,EACEzC,aAAayF,KAAb,IAAsBzF,aAAa4F,MAAb,CACpBH,QAAQ,CADY,EAEpB,CAFoB,EAGpBzF,aAAayF,KAAb,CAHoB,EAIpB,CAJoB,CAAtB;AAKH;;AAED,iBAAKvC,MAAL;AACD;;;yCAEcuC,K,EAAOC,E,EAAI;AACxB,gBAAM7G,QAAQ,KAAK8G,IAAL,CAAUnD,KAAV,CAAgB3D,KAA9B;AACA,gBAAI6G,EAAJ,EAAQ;AACN,kBAAID,KAAJ,EAAW5G,MAAM4G,KAAN,IAAe5G,MAAM+G,MAAN,CAAaH,QAAQ,CAArB,EAAwB,CAAxB,EAA2B5G,MAAM4G,KAAN,CAA3B,EAAyC,CAAzC,CAAf;AACZ,aAFD,MAEO;AACL,kBAAIA,QAAQ,CAAR,GAAY5G,MAAM4D,MAAtB,EACE5D,MAAM4G,KAAN,IAAe5G,MAAM+G,MAAN,CAAaH,QAAQ,CAArB,EAAwB,CAAxB,EAA2B5G,MAAM4G,KAAN,CAA3B,EAAyC,CAAzC,CAAf;AACH;;AAED,iBAAKvC,MAAL;AACD;;;wCAEa2C,W,EAAa;AACzB,gBAAIC,SAAS,KAAKC,IAAL,CAAUC,OAAV,CAAkB,kBAAlB,EAAsCC,IAAtC,CAA2C,cAA3C,CAAb;AACA,gBAAIC,WAAWJ,OAAOG,IAAP,CAAY,4CAAZ,CAAf;;AAEA,gBAAIC,SAASzD,MAAT,IAAmB,CAAvB,EACEyD,WAAWJ,OACRK,MADQ,CACD,uDADC,EAERC,QAFQ,GAGRC,IAHQ,EAAX;;AAKF,gBAAIR,eAAe,CAAC,CAAhB,IAAqB,KAAKrD,KAAL,CAAWtC,QAApC,EAA8C;AAC5C,kBAAIoG,UAAU,KAAKpB,IAAL,CAAU,CAAV,EAAaW,WAAb,CAAd;;AAEA,mBAAK,IAAIR,IAAI,CAAb,EAAgBA,IAAI,KAAKH,IAAL,CAAUzC,MAA9B,EAAsC4C,GAAtC,EAA2C;AACzC,oBAAIiB,UAAU,KAAKpB,IAAL,CAAUG,CAAV,EAAaQ,WAAb,CAAd,EACES,UAAU,KAAKpB,IAAL,CAAUG,CAAV,EAAaQ,WAAb,CAAV;AACH;;AAED,kBAAIU,KAAKrK,OAAOoK,OAAP,EAAgBE,GAAhB,CAAoB,KAAKhE,KAAL,CAAWzB,aAA/B,EAA8C,GAA9C,CAAT;;AAEA,kBAAI,KAAKyB,KAAL,CAAWrF,UAAX,CAAsBsJ,WAAtB,MAAuC,SAA3C,EACEP,SAASZ,IAAT,CAAciB,GAAGG,OAAH,EAAd,EAA4BC,IAA5B,GADF,KAEKT,SAASZ,IAAT,CAAciB,GAAGK,MAAH,CAAU,KAAKpE,KAAL,CAAWrF,UAArB,CAAd,EAAgDwJ,IAAhD;AACN,aAbD,MAaOT,SAASW,IAAT;AACR;;;+CAEoBC,G,EAAK;AACxB,iBAAKf,IAAL,CAAUgB,IAAV,CACE,8DACAD,GADA,GAEA,QAHF;AAKD;;;qCAEU;AAAA;;AACT,gBAAI,KAAK1C,IAAL,IAAa,IAAb,IAAqB,KAAKA,IAAL,CAAUc,IAA/B,IAAuC,KAAKd,IAAL,CAAUc,IAAV,CAAezC,MAA1D,EAAkE;AAChE,kBAAIwC,OAAO,KAAKA,IAAhB;AACA,kBAAIY,cAAc,CAAC,CAAnB;AACA,kBAAImB,WAAW,CAAC,CAAhB;AACA,kBAAIC,UAAU,CAAd;AACA,kBAAIC,WAAW,CAAC,CAAhB;AACA,kBAAIC,aAAa,CAAC,CAAlB;;AAEAlC,mBAAKmC,OAAL,CAAa,UAACC,OAAD,EAAUhC,CAAV,EAAgB;AAC3B,oBAAIgC,WAAW,OAAK7E,KAAL,CAAWtF,eAA1B,EAA2C2I,cAAcR,CAAd;AAC3C,oBAAIgC,WAAW,OAAK7E,KAAL,CAAWrE,YAA1B,EAAwC6I,WAAW3B,CAAX;AACxC,oBAAIgC,WAAW,OAAK7E,KAAL,CAAW3B,WAA1B,EAAuCoG,UAAU5B,CAAV;AACvC,oBAAIgC,WAAW,OAAK7E,KAAL,CAAW8E,YAA1B,EAAwCJ,WAAW7B,CAAX;AACxC,oBAAIgC,WAAW,OAAK7E,KAAL,CAAW9E,cAA1B,EAA0CyJ,aAAa9B,CAAb;;AAE1C,uBAAK7C,KAAL,CAAWrB,MAAX,CAAkBiG,OAAlB,CAA0B,UAACG,KAAD,EAAW;AACnC,sBAAIF,WAAWE,MAAM7E,IAArB,EAA2B;AACzB6E,0BAAMC,GAAN,GAAYnC,CAAZ;AACD;AACF,iBAJD;AAKD,eAZD;;AAcA,kBAAIoC,iBAAiB,KAAKjF,KAAL,CAAWrB,MAAX,CAAkBuG,MAAlB,CACnB,UAAC9D,KAAD;AAAA,uBAAWA,MAAM4D,GAAN,IAAa,CAAb,IAAkB5D,MAAM+D,QAAnC;AAAA,eADmB,CAArB;;AAIA;;AAEA,kBAAMC,mBAAmB,SAAnBA,gBAAmB,CAAUlE,GAAV,EAAe;AACtC,oBAAIwD,YAAY,CAAC,CAAjB,EAAoB,OAAOxD,IAAIwD,QAAJ,IAAgB,GAAhB,GAAsBxD,IAAIsD,QAAJ,CAA7B,CAApB,KACK,OAAOtD,IAAIsD,QAAJ,CAAP;AACN,eAHD;;AAKA,kBAAI,KAAKxE,KAAL,CAAWpE,eAAX,CAA2BqE,MAA3B,GAAoC,CAApC,IAAyCuE,YAAY,CAAC,CAA1D,EAA6D;AAC3D,oBAAIa,QAAQ,IAAIC,MAAJ,CAAW,KAAKtF,KAAL,CAAWpE,eAAtB,EAAuC,EAAvC,CAAZ;AACA,qBAAK2J,YAAL,GAAoB,EAApB;AACA,qBAAK,IAAI1C,IAAI,CAAb,EAAgBA,IAAI,KAAKjB,IAAL,CAAUc,IAAV,CAAezC,MAAnC,EAA2C4C,GAA3C,EAAgD;AAC9C,sBAAIkB,KAAK,KAAKnC,IAAL,CAAUc,IAAV,CAAeG,CAAf,CAAT;AACA,sBAAI2C,QAAQzB,GAAGS,QAAH,CAAZ;AACA,sBAAIgB,MAAMC,KAAN,CAAYJ,KAAZ,KAAsB,IAA1B,EAAgC,KAAKE,YAAL,CAAkBG,IAAlB,CAAuB3B,EAAvB;AACjC;;AAED,oBAAI,KAAKwB,YAAL,CAAkBtF,MAAlB,IAA4B,CAAhC,EAAmC;AACjC,uBAAK4B,oBAAL,CACE,6BACA,KAAK7B,KAAL,CAAWpE,eADX,GAEA,mBAFA,GAGA,KAAKgG,IAAL,CAAUc,IAAV,CAAezC,MAHf,GAIA,0BALF;AAOA;AACD;AACF,eAnBD,MAmBO,KAAKsF,YAAL,GAAoB,KAAK3D,IAAL,CAAUc,IAA9B;;AAEP,kBACE,KAAK1C,KAAL,CAAWrC,SAAX,IAAwB,KAAxB,IACA6G,YAAY,CAAC,CADb,IAEAS,eAAehF,MAAf,GAAwB,CAH1B,EAIE;AACA,oBAAI0F,KAAK,EAAT;AACA,qBAAKjD,IAAL,GAAY,EAAZ;AACA,wBAAQ,KAAK1C,KAAL,CAAWrC,SAAnB;AACE,uBAAK,OAAL;AACE,yBAAK+E,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,6BAAOA,EAAE,CAAF,CAAP;AACD,qBALS,EAMTC,OANS,CAMD,KAAKT,YANJ,EAOTX,OAPS,CAOD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBATS,CAAZ;AAUA,yBAAKsB,IAAL,GAAYiD,EAAZ;AACA;;AAEF,uBAAK,MAAL;AACE,yBAAKjD,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,6BAAOA,EAAEA,EAAE9F,MAAF,GAAW,CAAb,CAAP;AACD,qBALS,EAMT+F,OANS,CAMD,KAAKT,YANJ,EAOTX,OAPS,CAOD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBATS,CAAZ;AAUA,yBAAKsB,IAAL,GAAYiD,EAAZ;AACA;;AAEF,uBAAK,KAAL;AACE,yBAAKjD,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,0BAAIhC,KAAKmC,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBL,EAAEA,EAAE9F,MAAF,GAAW,CAAb,CAAlB,CAAd,CAAT;AACAgF,qCAAeL,OAAf,CAAuB,UAACxD,KAAD,EAAW;AAChC2C,2BAAG3C,MAAM4D,GAAT,IAAgBrL,GAAG0M,GAAH,CAAON,CAAP,EAAU,UAAUA,CAAV,EAAa;AACrC,iCAAOA,EAAE3E,MAAM4D,GAAR,CAAP;AACD,yBAFe,CAAhB;AAGD,uBAJD;AAKA,6BAAOjB,EAAP;AACD,qBAXS,EAYTiC,OAZS,CAYD,KAAKT,YAZJ,EAaTX,OAbS,CAaD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBAfS,CAAZ;AAgBA,yBAAKsB,IAAL,GAAY4D,MAAMC,IAAN,CAAWZ,EAAX,CAAZ;AACA;;AAEF,uBAAK,MAAL;AACE,yBAAKjD,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,0BAAIhC,KAAKmC,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBL,EAAEA,EAAE9F,MAAF,GAAW,CAAb,CAAlB,CAAd,CAAT;AACAgF,qCAAeL,OAAf,CAAuB,UAACxD,KAAD,EAAW;AAChC2C,2BAAG3C,MAAM4D,GAAT,IAAgBrL,GAAG6M,IAAH,CAAQT,CAAR,EAAW,UAAUA,CAAV,EAAa;AACtC,iCAAOA,EAAE3E,MAAM4D,GAAR,CAAP;AACD,yBAFe,CAAhB;AAGD,uBAJD;AAKA,6BAAOjB,EAAP;AACD,qBAXS,EAYTiC,OAZS,CAYD,KAAKT,YAZJ,EAaTX,OAbS,CAaD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBAfS,CAAZ;AAgBA,yBAAKsB,IAAL,GAAY4D,MAAMC,IAAN,CAAWZ,EAAX,CAAZ;AACA;;AAEF,uBAAK,MAAL;AACE,yBAAKjD,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,0BAAIhC,KAAKmC,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBL,EAAEA,EAAE9F,MAAF,GAAW,CAAb,CAAlB,CAAd,CAAT;AACA8D,yBAAG0C,QAAH,IAAe9M,GAAG6M,IAAH,CAAQT,CAAR,EAAW,UAAUA,CAAV,EAAa;AACrC,+BAAOA,EAAEU,QAAF,CAAP;AACD,uBAFc,CAAf;AAGA,6BAAO1C,EAAP;AACD,qBATS,EAUTiC,OAVS,CAUD,KAAKT,YAVJ,EAWTX,OAXS,CAWD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBAbS,CAAZ;AAcA,yBAAKsB,IAAL,GAAY4D,MAAMC,IAAN,CAAWZ,EAAX,CAAZ;AACA;;AAEF,uBAAK,KAAL;AACE,yBAAKjD,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,0BAAIhC,KAAKmC,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBL,EAAEA,EAAE9F,MAAF,GAAW,CAAb,CAAlB,CAAd,CAAT;AACAgF,qCAAeL,OAAf,CAAuB,UAACxD,KAAD,EAAW;AAChC2C,2BAAG3C,MAAM4D,GAAT,IAAgBrL,GAAG+M,GAAH,CAAOX,CAAP,EAAU,UAAUA,CAAV,EAAa;AACrC,iCAAOA,EAAE3E,MAAM4D,GAAR,CAAP;AACD,yBAFe,CAAhB;AAGD,uBAJD;AAKA,6BAAOjB,EAAP;AACD,qBAXS,EAYTiC,OAZS,CAYD,KAAKT,YAZJ,EAaTX,OAbS,CAaD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBAfS,CAAZ;AAgBA,yBAAKsB,IAAL,GAAY4D,MAAMC,IAAN,CAAWZ,EAAX,CAAZ;AACA;;AAEF,uBAAK,KAAL;AACE,yBAAKjD,IAAL,GAAY/I,GACTiM,IADS,GAETC,GAFS,CAELT,gBAFK,EAGTU,MAHS,CAGF,UAAUC,CAAV,EAAa;AACnB,0BAAIhC,KAAKmC,OAAOC,MAAP,CAAcD,OAAOE,MAAP,CAAc,EAAd,EAAkBL,EAAEA,EAAE9F,MAAF,GAAW,CAAb,CAAlB,CAAd,CAAT;AACAgF,qCAAeL,OAAf,CAAuB,UAACxD,KAAD,EAAW;AAChC2C,2BAAG3C,MAAM4D,GAAT,IAAgBrL,GAAGgN,GAAH,CAAOZ,CAAP,EAAU,UAAUA,CAAV,EAAa;AACrC,iCAAOA,EAAE3E,MAAM4D,GAAR,CAAP;AACD,yBAFe,CAAhB;AAGD,uBAJD;AAKA,6BAAOjB,EAAP;AACD,qBAXS,EAYTiC,OAZS,CAYD,KAAKT,YAZJ,EAaTX,OAbS,CAaD,UAAUqB,CAAV,EAAa;AACpBN,yBAAGD,IAAH,CAAQO,EAAE7E,KAAV;AACD,qBAfS,CAAZ;AAgBA,yBAAKsB,IAAL,GAAY4D,MAAMC,IAAN,CAAWZ,EAAX,CAAZ;AACA;AA7HJ;AA+HD,eAtID,MAsIO;AACL,qBAAKjD,IAAL,GAAY,KAAK6C,YAAjB;AACD;;AAED;;AAEA,kBAAIqB,kBAAkB,KAAK5G,KAAL,CAAWlC,eAAX,GAClB0D,OAAO,KAAKxB,KAAL,CAAW/D,kBAAX,CAA8B4K,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAP,IAAyD,IADvC,GAElB,CAFJ;;AAIA,kBAAInC,YAAY,CAAhB,EAAmB;AACjB,qBAAKoC,WAAL,GAAmBnN,GAChBiM,IADgB,GAEhBC,GAFgB,CAEZ,UAAUE,CAAV,EAAa;AAChB,yBAAOA,EAAErB,QAAF,CAAP;AACD,iBAJgB,EAKhBsB,OALgB,CAKR,KAAKtD,IALG,CAAnB;;AAOA,oBAAI,KAAK1C,KAAL,CAAWZ,eAAX,CAA2Ba,MAA3B,GAAoC,CAAxC,EAA2C;AACzC,sBAAI8G,iBAAiB,IAAIzB,MAAJ,CAAW,KAAKtF,KAAL,CAAWZ,eAAtB,EAAuC,EAAvC,CAArB;AACA,sBAAI4H,iBAAiB,EAArB;AACA,uBAAK,IAAInE,KAAI,CAAb,EAAgBA,KAAI,KAAKiE,WAAL,CAAiB7G,MAArC,EAA6C4C,IAA7C,EAAkD;AAChD,wBAAIoE,YAAY,KAAKH,WAAL,CAAiBjE,EAAjB,EAAoBgD,GAApC;AACA,wBAAIoB,UAAUxB,KAAV,CAAgBsB,cAAhB,KAAmC,IAAvC,EACEC,eAAetB,IAAf,CAAoB,KAAKoB,WAAL,CAAiBjE,EAAjB,CAApB;AACH;;AAED,sBAAImE,eAAe/G,MAAf,GAAwB,CAA5B,EAA+B,KAAK6G,WAAL,GAAmBE,cAAnB,CAA/B,KACK;AACH,yBAAKnF,oBAAL,CACE,qCACA,KAAK7B,KAAL,CAAWZ,eADX,GAEA,mBAFA,GAGA,KAAK0H,WAAL,CAAiB7G,MAHjB,GAIA,4BALF;AAOA;AACD;AACF;;AAED,oBAAIiH,kBAAkB,KAAKlH,KAAL,CAAWd,eAAjC;;AAEA,qBAAK4H,WAAL,CAAiBK,IAAjB,CAAsB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpC,sBAAIC,OAAOJ,gBAAgBK,MAAhB,CAAuBH,EAAEvB,GAAzB,CAAX;AACA,sBAAI2B,OAAON,gBAAgBK,MAAhB,CAAuBF,EAAExB,GAAzB,CAAX;;AAEA,sBAAIyB,QAAQE,IAAZ,EAAkB,OAAOJ,EAAEvB,GAAF,CAAM4B,aAAN,CAAoBJ,EAAExB,GAAtB,CAAP,CAAlB,KACK,IAAIyB,QAAQ,CAAC,CAAb,EAAgB,OAAO,CAAP,CAAhB,KACA,IAAIE,QAAQ,CAAC,CAAb,EAAgB,OAAO,CAAC,CAAR,CAAhB,KACA,OAAOF,OAAOE,IAAd;AACN,iBARD;AASD,eAzCD,MAyCO;AACL,qBAAKV,WAAL,GAAmB,IAAnB;AACD;;AAED,mBAAKvD,IAAL,CAAUgB,IAAV,CACE,iBACA,KAAKvD,SADL,GAEA,2EAFA,GAGA,QAJF;;AAOA,kBAAI0G,aAAa,KAAKnE,IAAL,CAAUE,IAAV,CAAe,KAAf,CAAjB;;AAEA,mBAAKkE,GAAL,GAAWhO,GACRiO,MADQ,CACD,MAAM,KAAK5G,SADV,EAER2C,MAFQ,CAED,KAFC,EAGRkE,IAHQ,CAGH,QAHG,EAGO,MAHP,CAAX;;AAKA,kBAAI,KAAK7H,KAAL,CAAW5D,MAAf,EAAuB;AACrB,oBAAI0L,UAAUJ,WACX/D,MADW,CAEV,0EAFU,EAIXF,IAJW,CAIN,IAJM,CAAd;;AAMA,oBAAMsE,eAAe,KAAK/H,KAAL,CAAWrB,MAAX,CAAkBuG,MAAlB,CACnB,UAAC9D,KAAD;AAAA,yBAAWA,MAAM4D,GAAN,IAAa,CAAxB;AAAA,iBADmB,CAArB;AAGA+C,6BAAanD,OAAb,CAAqB,UAACxD,KAAD,EAAQyB,CAAR,EAAc;AACjC;AACA;AACA;AACA,sBAAImF,sBAAsB5G,MAAM+D,QAAN,GACtB,EADsB,GAEtB,0DAFJ;AAGA2C,0BACGnE,MADH,CACU,QAAQqE,mBAAR,GAA8B,GAA9B,GAAoC5G,MAAMlB,IAA1C,GAAiD,OAD3D,EAEG0D,QAFH,GAGGC,IAHH,GAIGoE,GAJH,CAIO,kBAJP,EAI2B7G,MAAMnG,YAJjC,EAKGgN,GALH,CAKO,OALP,EAKgB,OAAKjI,KAAL,CAAWnB,UAL3B,EAMGqJ,KANH,CAMS,YAAY;AACjB,wBAAIC,OAAOC,KAAP,CAAaC,OAAjB,EAA0B;AACxB;AACAjH,4BAAM+D,QAAN,GAAiB,CAAC/D,MAAM+D,QAAxB;AACD,qBAHD,MAGO;AACL,0BAAI,CAAC/D,MAAM+D,QAAP,IAAmBF,eAAehF,MAAf,IAAyB,CAAhD,EAAmD;AACjD;AACA8H,qCAAanD,OAAb,CAAqB,UAAC0D,CAAD;AAAA,iCAAQA,EAAEnD,QAAF,GAAa,KAArB;AAAA,yBAArB;AACA;AACA/D,8BAAM+D,QAAN,GAAiB,IAAjB;AACD,uBALD,MAKO;AACL4C,qCAAanD,OAAb,CAAqB,UAAC0D,CAAD;AAAA,iCAAQA,EAAEnD,QAAF,GAAa,IAArB;AAAA,yBAArB;AACD;AACF;AACD;AACAoD,yBAAKvO,MAAL,CAAYwO,MAAZ,CAAmB,YAAM;AACvBD,2BAAK7H,MAAL;AACD,qBAFD;AAGD,mBAxBH;AAyBD,iBAhCD;AAiCD;;AAED,kBAAI+H,IAAIf,WAAWjE,IAAX,CAAgB,KAAhB,EAAuBiF,MAAvB,EAAR;AACA,kBAAIC,IAAIjB,WAAWkB,KAAX,KAAqB,EAA7B;;AAEA,mBAAKC,aAAL,CAAmBxF,WAAnB;;AAEA,kBAAIyF,cACFtP,EAAEuP,SAAF,CAAY,KAAK/I,KAAL,CAAW7D,WAAvB,KAAuC,KAAK6D,KAAL,CAAW7D,WAAX,IAA0B,CAAjE,GACI,KAAK6D,KAAL,CAAW7D,WADf,GAEI,IAHN;AAIA,kBAAI6M,gBACF,KAAKhJ,KAAL,CAAWjD,aAAX,IAA4B,CAA5B,GAAgC,KAAKiD,KAAL,CAAWjD,aAA3C,GAA2D,CAD7D;AAEA,kBAAIkM,iBACF,KAAKjJ,KAAL,CAAWvE,cAAX,IAA6B,CAA7B,GAAiC,KAAKuE,KAAL,CAAWvE,cAA5C,GAA6D,CAD/D;;AAGA,mBAAKkM,GAAL,CACGuB,SADH,CACa,kDADb,EAEGC,SAFH;;AAIA,mBAAKxB,GAAL,CACGuB,SADH,CACa,iDADb,EAEGC,SAFH;;AAIA,kBAAIlI,KAAK,KAAKjB,KAAL,CAAWiB,EAApB;AACA,kBAAImI,aAAa,KAAKpJ,KAAL,CAAW3F,UAA5B;AACA,kBAAIgP,kBAAkB,KAAKrJ,KAAL,CAAW1F,eAAjC;AACA,kBAAIgP,gBAAgB,KAAKtJ,KAAL,CAAWvF,aAA/B;AACA,kBAAI8O,eAAe,KAAKvJ,KAAL,CAAW3C,YAA9B;AACA,kBAAImM,eAAe,KAAKxJ,KAAL,CAAW9C,YAA9B;AACA,kBAAIuM,iBAAiB,KAAKzJ,KAAL,CAAWzE,cAAhC;AACA,kBAAIJ,oBAAoB,KAAK6E,KAAL,CAAW7E,iBAAnC;AACA,kBAAIC,yBAAyB,KAAK4E,KAAL,CAAW5E,sBAAxC;AACA,kBAAIC,2BAA2B,KAAK2E,KAAL,CAAW3E,wBAA1C;AACA,kBAAIqO,sBAAsB,KAAK1J,KAAL,CAAW1C,mBAArC;AACA,kBAAIjB,QAAQ,KAAK2D,KAAL,CAAW3D,KAAvB;AACA,kBAAIsN,gBAAgB,KAAK3J,KAAL,CAAWnD,aAA/B;AACA,kBAAIJ,mBAAmB,KAAKuD,KAAL,CAAWvD,gBAAlC;AACA,kBAAIC,wBAAwB,KAAKsD,KAAL,CAAWtD,qBAAvC;AACA,kBAAIC,0BAA0B,KAAKqD,KAAL,CAAWrD,uBAAzC;AACA,kBAAIa,eAAe,KAAKwC,KAAL,CAAWxC,YAA9B;AACA,kBAAIoM,qBAAqB,KAAK5J,KAAL,CAAWzC,kBAApC;AACA,kBAAIsM,oBAAoB,KAAK7J,KAAL,CAAWnF,iBAAnC;AACA,kBAAIiP,mBAAmB,KAAK9J,KAAL,CAAWlF,gBAAlC;AACA,kBAAIiP,cAAc,KAAK/J,KAAL,CAAWxB,WAA7B;AACA,kBAAIwL,kBAAkB,KAAKhK,KAAL,CAAWvB,eAAjC;AACA,kBAAI/D,kBAAkB,KAAKsF,KAAL,CAAWtF,eAAjC;AACA,kBAAIE,oBAAoB,KAAKoF,KAAL,CAAWpF,iBAAnC;AACA,kBAAI8D,eAAe,KAAKsB,KAAL,CAAWtB,YAA9B;AACA,kBAAIE,gBAAgB,KAAKoB,KAAL,CAAWpB,aAA/B;AACA,kBAAIG,cAAc,KAAKiB,KAAL,CAAWjB,WAA7B;AACA,kBAAIC,eAAe,KAAKgB,KAAL,CAAWhB,YAA9B;AACA,kBAAIC,eAAe,KAAKe,KAAL,CAAWf,YAA9B;AACA,kBAAIV,gBAAgB,KAAKyB,KAAL,CAAWzB,aAA/B;AACA,kBAAIY,YAAY,KAAKa,KAAL,CAAWb,SAA3B;AACA,kBAAIjD,WAAW,KAAK8D,KAAL,CAAW9D,QAA1B;AACA,kBAAImD,cAAcmC,OAAO,KAAKxB,KAAL,CAAWX,WAAlB,CAAlB;AACA,kBAAIC,gBAAgB,KAAKU,KAAL,CAAWV,aAA/B;;AAEA,kBAAI2K,UAAU,mCAAmChJ,EAAjD;AACA,kBAAIiJ,eAAe,2CAA2CjJ,EAA9D;;AAEA,kBAAIkJ,WACFlF,eAAehF,MAAf,IACAtG,GAAGgN,GAAH,CAAO,KAAKjE,IAAZ,EAAkB,UAAUqD,CAAV,EAAa;AAC7B,oBAAIY,MAAMnF,OAAOuE,EAAEd,eAAe,CAAf,EAAkBD,GAApB,CAAP,CAAV;AACA,qBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAIoC,eAAehF,MAAnC,EAA2C4C,GAA3C,EAAgD;AAC9C,sBAAIuH,MAAMnF,eAAepC,CAAf,EAAkBmC,GAA5B;AACA,sBAAIqF,MAAM7I,OAAOuE,EAAEqE,GAAF,CAAP,CAAV;AACA,sBAAIzD,MAAM0D,GAAV,EAAe1D,MAAM0D,GAAN;AAChB;AACD,uBAAO1D,MAAMtH,WAAb;AACD,eARD,CAFF;AAWA,kBAAI7F,EAAEuP,SAAF,CAAYQ,YAAZ,KAA6B,KAAjC,EAAwCA,eAAeY,QAAf;;AAExC,kBAAIG,WACFrF,eAAehF,MAAf,IACAtG,GAAG+M,GAAH,CAAO,KAAKhE,IAAZ,EAAkB,UAAUqD,CAAV,EAAa;AAC7B,oBAAIW,MAAMlF,OAAOuE,EAAEd,eAAe,CAAf,EAAkBD,GAApB,CAAP,CAAV;AACA,qBAAK,IAAInC,IAAI,CAAb,EAAgBA,IAAIoC,eAAehF,MAAnC,EAA2C4C,GAA3C,EAAgD;AAC9C,sBAAIuH,MAAMnF,eAAepC,CAAf,EAAkBmC,GAA5B;AACA,sBAAIqF,MAAM7I,OAAOuE,EAAEqE,GAAF,CAAP,CAAV;AACA,sBAAI1D,MAAM2D,GAAV,EAAe3D,MAAM2D,GAAN;AAChB;AACD,uBAAO3D,MAAMrH,WAAb;AACD,eARD,CAFF;AAWA,kBAAI7F,EAAEuP,SAAF,CAAYS,YAAZ,KAA6B,KAAjC,EAAwCA,eAAec,QAAf;;AAExC,kBAAI9Q,EAAEuP,SAAF,CAAYO,aAAZ,KAA8B,KAAlC,EAAyCA,gBAAgB,CAAhB;;AAEzC,kBAAIC,eAAeD,aAAnB,EAAkCC,eAAeD,aAAf;;AAElC,kBAAI9P,EAAEuP,SAAF,CAAYY,aAAZ,KAA8BJ,eAAeI,aAAjD,EACEJ,eAAeI,aAAf;;AAEF,kBAAIH,eAAeF,aAAnB,EAAkCE,eAAeF,aAAf;;AAElC,kBAAI9P,EAAEuP,SAAF,CAAYU,cAAZ,KAA+BD,eAAeC,cAAlD,EACED,eAAeC,cAAf;;AAEFjQ,gBAAE,MAAM0Q,YAAR,EAAsBK,MAAtB;;AAEA,kBAAIC,WAAW,SAAXA,QAAW,CAAU5I,IAAV,EAAgB6I,aAAhB,EAA+B;AAC5C,oBAAIA,iBAAiB,MAArB,EAA6B;AAC3B,sBAAIC,YAAYD,iBAAiB,WAAjC;AACA7I,uBAAKuF,IAAL,CAAU,UAAUlB,CAAV,EAAa0E,CAAb,EAAgB;AACxB,wBAAIC,KAAK3E,EAAExB,OAAF,CAAT;AACA,wBAAIoG,KAAKF,EAAElG,OAAF,CAAT;;AAEA,wBAAIjL,EAAEuP,SAAF,CAAY6B,EAAZ,KAAmBpR,EAAEuP,SAAF,CAAY8B,EAAZ,CAAvB,EACE,OAAOH,YAAYE,KAAKC,EAAjB,GAAsBA,KAAKD,EAAlC,CADF,KAEK,OAAOF,YAAYE,GAAGnD,aAAH,CAAiBoD,EAAjB,CAAZ,GAAmCA,GAAGpD,aAAH,CAAiBmD,EAAjB,CAA1C;AACN,mBAPD;AAQD;AACF,eAZD;;AAcA,kBAAIE,kBAAkB,SAAlBA,eAAkB,CAAUC,CAAV,EAAahF,CAAb,EAAgB;AACpC;AACA,oBAAIiF,KAAKD,CAAT;AACA,oBAAME,KAAK,YAAX;AACA,oBAAIC,IAAID,GAAGE,IAAH,CAAQJ,CAAR,CAAR;AACA,uBAAOG,CAAP,EAAU;AACR,uBAAK,IAAIrI,IAAI,CAAb,EAAgBA,IAAIJ,KAAKxC,MAAzB,EAAiC4C,GAAjC,EAAsC;AACpC,wBAAIqI,KAAK,MAAMzI,KAAKI,CAAL,CAAN,GAAgB,GAAzB,EAA8B;AAC5BmI,2BAAKA,GAAGnE,OAAH,CAAWqE,CAAX,EAAcnF,EAAElD,CAAF,CAAd,CAAL;AACA;AACD;AACF;AACDqI,sBAAID,GAAGE,IAAH,CAAQJ,CAAR,CAAJ;AACD;AACD,uBAAOC,EAAP;AACD,eAfD;;AAiBA,kBAAII,oBAAoB,SAApBA,iBAAoB,CAAUrF,CAAV,EAAa;AACnC,oBAAIxB,OAAO,EAAX;AACA,oBAAIwF,WAAJ,EAAiB;AACfxF,0BACE,6BACAyF,gBAAgBnD,OAAhB,CAAwB,GAAxB,EAA6B,EAA7B,IAAmC,GADnC,GAEA,MAHF;AAIA,sBAAIrC,YAAY,CAAC,CAAjB,EACED,QACE,mGACAwB,EAAEvB,QAAF,CADA,GAEA,oBAHF;AAIF,sBAAI8B,MAAM+E,OAAN,CAActF,CAAd,CAAJ,EAAsB;AACpBxB,4BAAQ,SAAR;AACA,yBAAK,IAAI1B,IAAI,CAAb,EAAgBA,IAAIkD,EAAE9F,MAAtB,EAA8B4C,GAA9B,EAAmC;AACjC,0BAAIA,KAAK2B,QAAT,EAAmB;AACjB,4BAAI8G,KAAK7I,KAAKI,CAAL,CAAT;AACA,4BAAIkB,KAAKgC,EAAElD,CAAF,CAAT;;AAEA,4BAAIyI,MAAM5Q,eAAV,EACEqJ,KAAKrK,OAAOqK,EAAP,EACFC,GADE,CACEzF,aADF,EACiB,GADjB,EAEF6F,MAFE,CAEKxJ,iBAFL,CAAL,CADF,KAIK,IAAI0Q,MAAM5M,YAAN,IAAsBlF,EAAEuP,SAAF,CAAYhF,EAAZ,CAA1B,EACHA,KAAKvC,OAAOuC,EAAP,EAAWwH,OAAX,CAAmB3M,aAAnB,CAAL;;AAEF2F,gCAAQ,aAAa+G,EAAb,GAAkB,WAAlB,GAAgCvH,EAAhC,GAAqC,YAA7C;AACD;AACF;AACDQ,4BAAQ,kBAAR;AACD;AACF;;AAED,oBAAIlI,MAAM4D,MAAV,EAAkB;AAChBsE,0BAAQ,gBAAR;AACAlI,wBAAMuI,OAAN,CAAc,UAAC4G,CAAD,EAAO;AACnBjH,4BACE,uEACAuG,gBAAgBU,EAAEC,GAAlB,EAAuB1F,CAAvB,CADA,IAECyF,EAAEE,MAAF,GAAW,mBAAX,GAAiC,GAFlC,IAGA,GAHA,GAIAZ,gBAAgBU,EAAEnK,IAAlB,EAAwB0E,CAAxB,CAJA,GAKA,gBANF;AAOD,mBARD;AASAxB,0BAAQ,kBAAR;AACD;AACD,uBAAOA,IAAP;AACD,eA/CD;;AAiDA,kBAAIoH,cAAc,KAAlB;AACA,kBAAIC,MAAJ;AACA,kBAAIC,aAAJ;AACA,kBAAIC,YAAJ;AACA,kBAAIC,cAAc,SAAdA,WAAc,CAAUhG,CAAV,EAAa;AAC7B,oBAAIvM,EAAE,MAAM0Q,YAAR,EAAsBjK,MAAtB,IAAgC,CAApC,EAAuC;AACrC2L,2BAASpS,EAAE,MAAMyQ,OAAR,CAAT;AACA;AACA4B,kCAAgBD,OAAOI,MAAP,GAAgBA,MAAhB,GAAyBA,MAAzB,GAAkCA,MAAlC,EAAhB;AACAF,iCAAenS,GAAGuP,SAAH,CAAa2C,aAAb,CAAf;AACAC,+BACGnI,MADH,CACU,KADV,EAEGkE,IAFH,CAEQ,IAFR,EAEcqC,YAFd,EAGG+B,KAHH,CAGS,SAHT,EAGoB,CAHpB;AAID;;AAED,oBAAMC,aAAavS,GAAGuP,SAAH,CAAa,MAAMgB,YAAnB,CAAnB;AACAgC,2BACGC,OADH,CAEI,mCAAmCpC,WAAnC,GAAiD,UAFrD,EAGI,IAHJ,EAKGxF,IALH,CAKQ6G,kBAAkBrF,CAAlB,CALR,EAMG3F,EANH,CAMM,WANN,EAMmB,YAAY;AAC3B,sBAAI,CAACuL,WAAL,EAAkB;AAChBA,kCAAc,IAAd;AACAS,gCAAY,IAAZ;AACD;AACF,iBAXH,EAYGhM,EAZH,CAYM,YAZN,EAYoB,YAAY;AAC5BuL,gCAAc,KAAd;AACAS,8BAAY,KAAZ;AACD,iBAfH;;AAiBA,oBAAMC,cAAc7S,EAAE,MAAM0Q,YAAR,CAApB;AACA,oBAAMoC,eAAeD,YAAYzD,KAAZ,EAArB;AACA,oBAAM2D,gBAAgBF,YAAY3D,MAAZ,EAAtB;AACA,oBAAM8D,SAAS,EAAf;;AAEA,oBAAMC,mBAAmB9S,GAAG+S,KAAH,CAASZ,aAAaa,IAAb,EAAT,CAAzB;AACA,oBAAIC,OAAOH,iBAAiB,CAAjB,IAAsBH,eAAe,CAAhD;AACA,oBAAIO,MAAMJ,iBAAiB,CAAjB,IAAsBD,MAAtB,GAA+BD,gBAAgB,CAAzD;;AAEA,oBAAIO,aAAalB,OAAOhD,KAAP,EAAjB;AACA,oBAAImE,cAAcnB,OAAOlD,MAAP,EAAlB;;AAEA,oBAAIkE,OAAO,CAAX,EAAcA,OAAO,CAAP,CAAd,KACK,IAAIA,OAAOE,aAAaR,YAAxB,EACHM,OAAOE,aAAaR,YAApB;;AAEF,oBAAIO,MAAM,CAAV,EAAaA,MAAM,CAAN,CAAb,KACK,IAAIA,MAAME,cAAcP,MAAd,GAAuBD,aAAjC,EACHM,MAAME,cAAcP,MAAd,GAAuBD,aAA7B;;AAEFL,2BACGc,UADH,GAEGC,QAFH,CAEY,GAFZ,EAGGhB,KAHH,CAGS,SAHT,EAGoB,GAHpB,EAIGA,KAJH,CAIS,MAJT,EAIiBW,OAAO,IAJxB,EAKGX,KALH,CAKS,KALT,EAKgBY,MAAM,IALtB;AAMD,eAxDD;;AA0DA,kBAAIT,cAAc,SAAdA,WAAc,CAAUc,MAAV,EAAkB;AAClC,oBAAMhB,aAAavS,GAAGuP,SAAH,CAAa,MAAMgB,YAAnB,CAAnB;;AAEA,oBAAIgD,MAAJ,EAAY;AACV;AACAhB,6BAAWc,UAAX,GAAwBf,KAAxB,CAA8B,SAA9B,EAAyC,GAAzC;AACD,iBAHD,MAGO;AACLC,6BACGc,UADH,GAEGC,QAFH,CAEY,IAFZ,EAGGhB,KAHH,CAGS,SAHT,EAGoB,CAHpB,EAIG7L,EAJH,CAIM,KAJN,EAIa,YAAY;AACrBzG,uBAAGiO,MAAH,CAAU,IAAV,EACGrD,IADH,CACQ,EADR,EAEG4H,OAFH,CAGI,mCAAmCpC,WAAnC,GAAiD,UAHrD,EAII,KAJJ;AAMD,mBAXH;AAYD;AACF,eApBD;;AAsBA,kBAAIoD,oBAAoB,SAApBA,iBAAoB,CAAUpH,CAAV,EAAa;AACnC,oBAAIsE,MAAMtE,IAAI1G,WAAd;AACA,oBAAIgL,MAAMb,YAAV,EAAwBa,MAAMb,YAAN;AACxB,oBAAIa,MAAMd,YAAV,EAAwBc,MAAMd,YAAN;;AAExB,uBAAOc,GAAP;AACD,eAND;;AAQA,kBAAI+C,cAAc,SAAdA,WAAc,CAAUrH,CAAV,EAAasH,QAAb,EAAuB;AACvC,oBAAI1I,cAAc,CAAC,CAAnB,EAAsB;AACpB,sBAAI2I,gBAAgBvH,EAAEpB,UAAF,CAApB;;AAEA,sBAAInH,aAAayC,MAAjB,EAAyB;AACvB,wBAAIqN,aAAJ,EAAmB;AACjB,0BAAIC,cAAc/P,aAAaiG,IAAb,CAAkB,UAAC+J,CAAD,EAAO;AACzC,4BAAIA,EAAEC,OAAN,EAAe;AACb,kCAAQD,EAAEE,SAAV;AACE,iCAAK,QAAL;AACE,kCAAIzC,KAAK3F,OAAOkI,EAAEC,OAAT,CAAT;AACA,qCAAOxC,GAAG0C,IAAH,CAAQL,aAAR,CAAP;;AAEF,iCAAK,MAAL;AACE,qCAAOE,EAAEC,OAAF,CAAUG,OAAV,CAAkBN,aAAlB,KAAoC,CAAC,CAA5C;;AAEF,iCAAK,QAAL;AACE,qCAAOA,cAAcM,OAAd,CAAsBJ,EAAEC,OAAxB,KAAoC,CAAC,CAA5C;;AAEF;AACE,qCAAOD,EAAEC,OAAF,KAAcH,aAArB;AAZJ;AAcD;AACD,+BAAO,KAAP;AACD,uBAlBiB,CAAlB;;AAoBA,0BAAIC,WAAJ,EAAiB,OAAOA,YAAYM,KAAnB;AAClB;AACF;;AAED;AACA,sBAAM9C,IAAI,IAAI+C,MAAJ,GAAa7B,KAAvB;AACAlB,oBAAE8C,KAAF,GAAUP,aAAV;AACA,sBAAIvC,EAAE8C,KAAF,KAAY,EAAhB,EAAoB,OAAOP,aAAP;AACrB;;AAED,oBAAIlM,QAAQ2E,EAAEsH,SAASrI,GAAX,IAAkB3F,WAA9B;AACA,oBAAIqK,uBAAuBtI,QAAQqI,cAAnC,EACE,OAAOtO,iBAAP;AACF,oBAAIyO,sBAAsBxI,QAAQuI,aAAlC,EACE,OAAOlN,gBAAP;;AAEF;AACA,uBAAO2E,QAAQkI,aAAR,GACH+D,SAASpS,YADN,GAEHoS,SAAS7Q,WAFb;AAGD,eA9CD;;AAgDA,kBAAI,KAAKwD,KAAL,CAAWtE,UAAf,EAA2B;AACzB,oBAAIqS,sBAAsB,SAAtBA,mBAAsB,CACxB/N,KADwB,EAExB2H,GAFwB,EAGxB/F,IAHwB,EAIxBoM,OAJwB,EAKxB/G,SALwB,EAMxBL,eANwB,EAOxBqH,IAPwB,EAQxBtF,CARwB,EASxBuF,EATwB,EAUxBC,EAVwB,EAWxB;AACA;AACA;;;;;;;AAOA3D,2BAAS5I,IAAT,EAAe5B,MAAM1B,aAArB;;AAEA;AACA,sBAAI2I,aAAa,EAAb,IAAmBjH,MAAMlC,eAA7B,EAA8C;AAC5C6J,wBACGhE,MADH,CACU,MADV,EAEGb,IAFH,CAEQmE,SAFR,EAGGY,IAHH,CAGQ,GAHR,EAGaoG,OAAO,CAACnF,cAAcH,CAAf,IAAoB,CAHxC,EAIGd,IAJH,CAIQ,GAJR,EAIaqG,KAAKtH,kBAAkB,CAJpC,EAKGiB,IALH,CAKQ,aALR,EAKuB,YALvB,EAMGA,IANH,CAMQ,WANR,EAMqB7H,MAAM/D,kBAN3B,EAOG4L,IAPH,CAOQ,MAPR,EAOgB7H,MAAMjE,eAPtB,EAQG8L,IARH,CAQQ,YARR,EAQsB,MARtB,EASGA,IATH,CASQ,aATR,EASuB,QATvB,EAUGA,IAVH,CAUQ,mBAVR,EAU6B,SAV7B;AAWD;;AAEDqG,wBAAMtH,eAAN;AACAuH,wBAAMvH,eAAN;;AAEA;AACA;;;;;;;AAOA,sBAAIwH,SAASxM,KAAKyM,GAAL,CAAS,UAAUtI,CAAV,EAAa;AACjC,2BAAOA,EAAEvB,QAAF,CAAP;AACD,mBAFY,CAAb;AAGA,yBAAO4J,OAAOnO,MAAP,GAAgB+N,OAAvB;AACEI,6BAASA,OAAOpL,MAAP,CACP,MAAMsL,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CADC,CAAT;AADF,mBAKA,IAAIC,aAAa/U,GACdgV,SADc,GAEdC,MAFc,CAEPR,MAFO,EAGdS,UAHc,CAGH,CAACX,KAAKjF,cAAN,EAAsBiF,KAAKC,EAAL,GAAUnF,aAAhC,CAHG,EAId8F,YAJc,CAID1F,aAAa,GAJZ,EAKd2F,YALc,CAKD3F,aAAa,GALZ,CAAjB;;AAOA,sBAAI4F,aAAapN,KAAKoB,MAAL,CAAYrJ,GAAGsV,KAAH,CAASrN,KAAK3B,MAAd,EAAsB+N,OAAtB,CAAZ,CAAjB;;AAEA,sBAAIkB,cAAcvV,GACfgV,SADe,GAEfC,MAFe,CAERI,UAFQ,EAGfH,UAHe,CAGJ,CAACX,KAAKjF,cAAN,EAAsBiF,KAAKC,EAAL,GAAUnF,aAAhC,CAHI,CAAlB;;AAKA;AACA,sBAAImG,UAAU,KAAd;AACAxH,sBACGhE,MADH,CACU,GADV,EAEGuF,SAFH,CAEa,MAFb,EAGGtH,IAHH,CAGQoN,UAHR,EAIGI,KAJH,GAKGzL,MALH,CAKU,MALV,EAMGkE,IANH,CAMQ,OANR,EAMiB,mCANjB,EAOGA,IAPH,CAOQ,OAPR,EAOiBc,CAPjB,EAQGd,IARH,CAQQ,QARR,EAQkBqH,YAAYG,IAAZ,EARlB,EASGxH,IATH,CASQ,GATR,EASaoG,IATb,EAUGpG,IAVH,CAUQ,GAVR,EAUa,UAAU9B,CAAV,EAAa;AACtB,2BAAOmJ,YAAYnJ,CAAZ,CAAP;AACD,mBAZH,EAaG8B,IAbH,CAaQ,MAbR,EAagB,UAAU9B,CAAV,EAAa;AACzBoJ,8BAAU,CAACA,OAAX;AACA,2BAAOA,UAAUpQ,WAAV,GAAwBC,YAA/B;AACD,mBAhBH;;AAkBA,sBAAIsQ,KAAK3H,IACNhE,MADM,CACC,GADD,EAENuF,SAFM,CAEI,MAFJ,EAGNtH,IAHM,CAGDA,IAHC,EAINwN,KAJM,GAKNzL,MALM,CAKC,GALD,CAAT;;AAOA,sBAAI3D,MAAM5B,UAAN,IAAoB4B,MAAMV,aAAN,IAAuB,KAA/C,EAAsD;AACpD,wBAAIiQ,gBAAgB,CAApB;AACAtK,mCAAeL,OAAf,CAAuB,UAACyI,QAAD,EAAWpK,KAAX,EAAqB;AAC1C,0BAAIwD,WAAW4G,SAASrI,GAAxB;AACA,0BAAIyB,YAAY,CAAhB,EAAmB;AACjB,4BAAI+I,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAIyI,SACF,CAACgG,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIAqP,2BAAG3L,MAAH,CAAU,MAAV,EACGb,IADH,CACQ,UAAUiD,CAAV,EAAa;AACjB,iCAAO,CAACvE,OAAOuE,EAAEU,QAAF,CAAP,IAAsBpH,WAAvB,EAAoCkM,OAApC,CACL3M,aADK,CAAP;AAGD,yBALH,EAMGiJ,IANH,CAMQ,GANR,EAMaoG,OAAOtF,CANpB,EAOGd,IAPH,CAOQ,GAPR,EAOa,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,iCACE6L,WAAW3I,EAAEvB,QAAF,CAAX,IACAkE,SAAS,CADT,GAEA,CAACA,SAAS8G,GAAV,IAAiBvM,KAHnB;AAKD,yBAbH,EAcG4E,IAdH,CAcQ,aAdR,EAcuB,YAdvB,EAeGA,IAfH,CAeQ,WAfR,EAeqB7H,MAAMlB,aAf3B,EAgBG+I,IAhBH,CAgBQ,MAhBR,EAgBgB7H,MAAMnB,UAhBtB,EAiBGgJ,IAjBH,CAiBQ,aAjBR,EAiBuB,KAjBvB,EAkBGA,IAlBH,CAkBQ,mBAlBR,EAkB6B,SAlB7B,EAmBG6H,IAnBH,CAmBQ,UAAU3J,CAAV,EAAalD,CAAb,EAAgB;AACpB,8BAAI8M,YAAY,KAAKC,qBAAL,EAAhB;AACAL,0CAAgB5V,GAAG+M,GAAH,CAAO,CAAC6I,aAAD,EAAgBI,SAAhB,CAAP,CAAhB;AACD,yBAtBH;AAuBD;AACF,qBArCD;;AAuCAhH,yBAAK4G,aAAL;AACD;;AAED,sBAAIvP,MAAMnC,UAAV,EAAsB;AACpB,wBAAIgS,gBAAgB,CAApB;AACA,wBAAIC,aAAatO,OAAOxB,MAAMT,UAAb,CAAjB;AACA+P,uBAAG3L,MAAH,CAAU,MAAV,EACGb,IADH,CACQ,UAAUiD,CAAV,EAAa;AACjB,6BAAOA,EAAEvB,QAAF,CAAP;AACD,qBAHH,EAIGqD,IAJH,CAIQ,aAJR,EAIuB,YAJvB,EAKGA,IALH,CAKQ,WALR,EAKqB7H,MAAMhE,aAL3B,EAMG6L,IANH,CAMQ,MANR,EAMgB,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AAC5B,0BAAIoC,eAAehF,MAAnB,EAA2B;AACzB,4BAAI8P,WAAWhK,EAAEd,eAAe,CAAf,EAAkBD,GAApB,IAA2B3F,WAA1C;AACA,4BAAI2Q,WAAWD,QAAf;AACA9K,uCAAeL,OAAf,CAAuB,UAAC0D,CAAD,EAAO;AAC5B,8BAAIlH,QAAQ2E,EAAEuC,EAAEtD,GAAJ,IAAW3F,WAAvB;AACA,8BAAI0Q,WAAW3O,KAAf,EAAsB2O,WAAW3O,KAAX;AACtB,8BAAI4O,WAAW5O,KAAf,EAAsB4O,WAAW5O,KAAX;AACvB,yBAJD;;AAMA,4BAAI4O,WAAWxG,YAAX,IAA2BuG,WAAWxG,YAA1C,EACE,OAAOvJ,MAAMlE,oBAAb;AACH;AACD,6BAAOkE,MAAMnE,UAAb;AACD,qBApBH,EAqBGgM,IArBH,CAqBQ,aArBR,EAqBuB,QArBvB,EAsBGA,IAtBH,CAsBQ,mBAtBR,EAsB6B,SAtB7B,EAuBGA,IAvBH,CAuBQ,WAvBR,EAuBqB,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACjC,0BAAIoN,OAAO,KAAKC,OAAL,EAAX;AACA,0BAAInF,IAAIuD,KAAK6B,GAAL,CAAUL,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAIC,IAAI/B,KAAKgC,GAAL,CAAUR,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAI/I,IAAIiH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAamC,CAAtB,IAA2BuD,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAc2H,CAAvB,CAAnC;AACA,0BAAIjJ,IAAIkH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAayH,CAAtB,IAA2B/B,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAcqC,CAAvB,CAAnC;;AAEA,0BAAIJ,IAAI+D,WAAW3I,EAAEvB,QAAF,CAAX,IAA0BkK,WAAWe,SAAX,KAAyB,CAA3D;AACA,0BAAIxJ,IAAIgI,OAAO7G,IAAI,CAAnB;AACA,6BACE,eAAenB,CAAf,GAAmB,GAAnB,GAAyB0E,CAAzB,GAA6B,WAA7B,GAA2CmF,UAA3C,GAAwD,GAD1D;AAGD,qBAnCH,EAoCGJ,IApCH,CAoCQ,UAAU3J,CAAV,EAAalD,CAAb,EAAgB;AACpB,0BAAIoN,OAAO,KAAKC,OAAL,EAAX;AACA,0BAAInF,IAAIuD,KAAK6B,GAAL,CAAUL,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAIC,IAAI/B,KAAKgC,GAAL,CAAUR,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAI/I,IAAIiH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAamC,CAAtB,IAA2BuD,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAc2H,CAAvB,CAAnC;AACA,0BAAIjJ,IAAIkH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAayH,CAAtB,IAA2B/B,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAcqC,CAAvB,CAAnC;;AAEA,0BAAI4E,YAAYvI,CAAhB;AACAyI,sCAAgBlW,GAAG+M,GAAH,CAAO,CAACmJ,aAAD,EAAgBF,SAAhB,CAAP,CAAhB;AACD,qBA7CH;;AA+CA,wBAAInW,EAAEuP,SAAF,CAAYD,WAAZ,CAAJ,EAA8B;AAC5BmF,8BAAQnF,WAAR;AACAH,2BAAKG,WAAL;AACD,qBAHD,MAGO;AACLmF,8BAAQ4B,aAAR;AACAlH,2BAAKkH,aAAL;AACD;AACF;;AAED,sBAAIW,aAAa7W,GACd8W,WADc,GAEd7B,MAFc,CAEP,CAACrF,YAAD,EAAeC,YAAf,CAFO,EAGdyF,KAHc,CAGR,CAAChB,OAAOnF,WAAR,EAAqBmF,OAAOtF,CAA5B,CAHQ,EAId+H,IAJc,EAAjB;;AAMA,2BAASC,KAAT,CAAehJ,GAAf,EAAoBvG,KAApB,EAA2ByM,KAA3B,EAAkC+C,WAAlC,EAA+C;AAC7CjJ,wBACGhE,MADH,CACU,MADV,EAEGsI,KAFH,CAES,QAFT,EAEmB4B,KAFnB,EAGGhG,IAHH,CAGQ,cAHR,EAGwB+I,eAAe,IAAf,GAAsB,CAAtB,GAA0BA,WAHlD,EAIG/I,IAJH,CAIQ,IAJR,EAIcqG,KAAKjF,cAJnB,EAKGpB,IALH,CAKQ,IALR,EAKc2I,WAAWpP,KAAX,CALd,EAMGyG,IANH,CAMQ,IANR,EAMcqG,KAAKC,EAAL,GAAUnF,aANxB,EAOGnB,IAPH,CAOQ,IAPR,EAOc2I,WAAWpP,KAAX,CAPd;AAQD;;AAED,sBAAIpB,MAAMvC,YAAV,EACEkT,MAAMhJ,GAAN,EAAW2B,aAAX,EAA0BtJ,MAAMzF,aAAhC,EAA+CyF,MAAMxF,aAArD;;AAEF,sBAAIwF,MAAM/B,WAAV,EACE0S,MAAMhJ,GAAN,EAAW6B,YAAX,EAAyBxJ,MAAMhD,YAA/B,EAA6CgD,MAAM/C,YAAnD;;AAEF,sBAAI+C,MAAM9B,WAAV,EACEyS,MAAMhJ,GAAN,EAAW4B,YAAX,EAAyBvJ,MAAM7C,YAA/B,EAA6C6C,MAAM5C,YAAnD;;AAEF,sBAAI4C,MAAMpC,iBAAV,EACE+S,MACEhJ,GADF,EAEE8B,cAFF,EAGEzJ,MAAM1E,kBAHR,EAIE0E,MAAM6Q,kBAJR;;AAOF,sBAAI7Q,MAAMhC,gBAAV,EACE2S,MACEhJ,GADF,EAEEgC,aAFF,EAGE3J,MAAMpD,iBAHR,EAIEoD,MAAM8Q,iBAJR;;AAOF,sBAAI9Q,MAAMR,QAAV,EAAoB;AAClByF,mCAAeL,OAAf,CAAuB,UAACyI,QAAD,EAAWpK,KAAX,EAAqB;AAC1C,0BAAIwD,WAAW4G,SAASrI,GAAxB;AACA,0BAAIyB,YAAY,CAAhB,EAAmB;AACjB,4BAAI+I,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAIyI,SACF,CAACgG,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIAqP,2BAAG3L,MAAH,CAAU,MAAV,EACGkE,IADH,CACQ,OADR,EACiB,mCADjB,EAEGA,IAFH,CAEQ,OAFR,EAEiB,UAAU9B,CAAV,EAAa;AAC1B,8BAAIsE,MAAM8C,kBAAkBpH,EAAEU,QAAF,CAAlB,CAAV;AACA,iCAAO6H,KAAKiC,GAAL,CACLC,WAAWnG,GAAX,IAAkBmG,WAAWlH,aAAX,CADb,CAAP;AAGD,yBAPH,EAQGzB,IARH,CAQQ,QARR,EAQkBa,MARlB,EASGb,IATH,CASQ,GATR,EASa,UAAU9B,CAAV,EAAa;AACtB,8BAAIsE,MAAM8C,kBAAkBpH,EAAEU,QAAF,CAAlB,CAAV;AACA,iCAAO9M,GAAGgN,GAAH,CAAO,CAAC6J,WAAWnG,GAAX,CAAD,EAAkBmG,WAAWlH,aAAX,CAAlB,CAAP,CAAP;AACD,yBAZH,EAaGzB,IAbH,CAaQ,GAbR,EAaa,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,iCAAO6L,WAAW3I,EAAEvB,QAAF,CAAX,IAA0B,CAACkE,SAAS8G,GAAV,IAAiBvM,KAAlD;AACD,yBAfH,EAgBG4E,IAhBH,CAgBQ,MAhBR,EAgBgB,UAAU9B,CAAV,EAAa;AACzB,iCAAOqH,YAAYrH,CAAZ,EAAesH,QAAf,CAAP;AACD,yBAlBH,EAmBGlB,OAnBH,CAmBW,WAnBX,EAmBwB,UAAUpG,CAAV,EAAa;AACjC,iCACE2D,uBACAG,iBADA,IAEA9D,EAAEU,QAAF,IAAcpH,WAAd,GAA4BoK,cAH9B;AAKD,yBAzBH,EA0BG0C,OA1BH,CA0BW,UA1BX,EA0BuB,UAAUpG,CAAV,EAAa;AAChC,iCACE6D,sBACAE,gBADA,IAEA/D,EAAEU,QAAF,IAAcpH,WAAd,GAA4BsK,aAH9B;AAKD,yBAhCH;AAiCD;AACF,qBA/CD;AAgDD;;AAED,sBAAI3J,MAAMP,SAAV,EAAqB;AACnB,wBAAIsR,KAAKrC,WAAWW,IAAX,EAAT;;AAEA,wBAAIrP,MAAMN,SAAV,EAAqB;AACnB,0BAAIsR,YAAYrX,GAAGsX,WAAnB;AACA,8BAAQjR,MAAMF,SAAd;AACE,6BAAK,QAAL;AACEkR,sCAAYrX,GAAGsX,WAAf;AACA;AACF,6BAAK,UAAL;AACED,sCAAYrX,GAAGuX,cAAf;AACA;AACF,6BAAK,UAAL;AACEF,sCAAYrX,GAAGwX,aAAf;AACA;AACF,6BAAK,aAAL;AACEH,sCAAYrX,GAAGyX,eAAf;AACA;AAZJ;;AAeA,0BAAIC,eAAe1X,GAChB2X,IADgB,GAEhBC,KAFgB,CAEVP,SAFU,EAGhB/K,CAHgB,CAGd,UAAUF,CAAV,EAAa;AACd,+BAAOA,EAAEE,CAAT;AACD,uBALgB,EAMhB0E,CANgB,CAMd,UAAU5E,CAAV,EAAa;AACd,+BAAOA,EAAE4E,CAAT;AACD,uBARgB,CAAnB;;AAUA1F,qCAAeL,OAAf,CAAuB,UAACxD,KAAD,EAAQ6B,KAAR,EAAkB;AACvC,4BAAIuM,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAI2I,QACF,CAAC8F,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIA,4BAAID,MAAMN,SAAV,EAAqB;AACnB,8BAAI8R,SAAS,EAAb;AACA,+BAAK,IAAI3O,IAAI,CAAb,EAAgBA,IAAIjB,KAAK3B,MAAzB,EAAiC4C,GAAjC,EAAsC;AACpC,gCAAIkD,IAAInE,KAAKiB,CAAL,CAAR;AACA,gCAAI8H,IACF+D,WAAW3I,EAAEvB,QAAF,CAAX,IACAoE,QAAQ,CADR,GAEA,CAACA,QAAQ4G,GAAT,IAAgBvM,KAHlB;AAIA,gCAAIgD,IAAIuK,WAAWzK,EAAE3E,MAAM4D,GAAR,IAAe3F,WAA1B,CAAR;AACAmS,mCAAO9L,IAAP,CAAY;AACVO,kCADU;AAEV0E;AAFU,6BAAZ;AAID;;AAEDhD,8BACGhE,MADH,CACU,MADV,EAEGkE,IAFH,CAEQ,GAFR,EAEawJ,aAAaG,MAAb,CAFb,EAGG3J,IAHH,CAGQ,QAHR,EAGkB7H,MAAML,SAHxB,EAIGkI,IAJH,CAIQ,cAJR,EAIwB7H,MAAMN,SAJ9B,EAKGmI,IALH,CAKQ,MALR,EAKgB,MALhB;AAMD;;AAED,4BAAI7H,MAAMJ,OAAV,EAAmB;AACjB0P,6BAAG3L,MAAH,CAAU,QAAV,EACGkE,IADH,CACQ,GADR,EACa7H,MAAMJ,OAAN,GAAgB,GAD7B,EAEGiI,IAFH,CAEQ,MAFR,EAEgB7H,MAAMH,QAFtB,EAGGgI,IAHH,CAGQ,IAHR,EAGc,UAAU9B,CAAV,EAAa;AACvB,mCACE2I,WAAW3I,EAAEvB,QAAF,CAAX,IACAoE,QAAQ,CADR,GAEA,CAACA,QAAQ4G,GAAT,IAAgBvM,KAHlB;AAKD,2BATH,EAUG4E,IAVH,CAUQ,IAVR,EAUc,UAAU9B,CAAV,EAAa;AACvB,mCAAOyK,WAAWzK,EAAE3E,MAAM4D,GAAR,IAAe3F,WAA1B,CAAP;AACD,2BAZH;AAaD;AACF,uBAjDD;AAkDD;AACF;;AAED,sBAAIW,MAAM5B,UAAN,IAAoB4B,MAAMV,aAAN,IAAuB,KAA/C,EAAsD;AACpD2F,mCAAeL,OAAf,CAAuB,UAACyI,QAAD,EAAWpK,KAAX,EAAqB;AAC1C,0BAAIwD,WAAW4G,SAASrI,GAAxB;AACA,0BAAIyB,YAAY,CAAhB,EAAmB;AACjB,4BAAI+I,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAIyI,SACF,CAACgG,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIAqP,2BAAG3L,MAAH,CAAU,MAAV,EACGb,IADH,CACQ,UAAUiD,CAAV,EAAa;AACjB,iCAAO,CAACvE,OAAOuE,EAAEU,QAAF,CAAP,IAAsBpH,WAAvB,EAAoCkM,OAApC,CACL3M,aADK,CAAP;AAGD,yBALH,EAMGiJ,IANH,CAMQ,GANR,EAMa,UAAU9B,CAAV,EAAa;AACtB,8BAAI/F,MAAMV,aAAN,IAAuB,UAA3B,EACE,OAAOkR,WAAWlH,aAAX,CAAP,CADF,KAEK;AACH;AACA,gCAAIe,MAAM8C,kBAAkBpH,EAAEU,QAAF,CAAlB,CAAV;AACA,mCAAO+J,WAAWnG,GAAX,KAAmBA,MAAMf,aAAzB,CAAP;AACD;AACF,yBAdH,EAeGzB,IAfH,CAeQ,GAfR,EAea,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,iCACE6L,WAAW3I,EAAEvB,QAAF,CAAX,IACAkE,SAAS,CADT,GAEA,CAACA,SAAS8G,GAAV,IAAiBvM,KAHnB;AAKD,yBArBH,EAsBG4E,IAtBH,CAsBQ,aAtBR,EAsBuB,YAtBvB,EAuBGA,IAvBH,CAuBQ,WAvBR,EAuBqB7H,MAAMlB,aAvB3B,EAwBG+I,IAxBH,CAwBQ,MAxBR,EAwBgB7H,MAAMnB,UAxBtB,EAyBGgJ,IAzBH,CAyBQ,aAzBR,EAyBuB,UAAU9B,CAAV,EAAa;AAChC,8BAAI/F,MAAMV,aAAN,IAAuB,UAA3B,EACE,OAAOyG,EAAEU,QAAF,IAAcpH,WAAd,GAA4BiK,aAA5B,GACH,OADG,GAEH,KAFJ;AAGF;AAJA,+BAME,OAAOvD,EAAEU,QAAF,IAAcpH,WAAd,GAA4BiK,aAA5B,GACH,KADG,GAEH,OAFJ;AAGH,yBAnCH,EAoCGzB,IApCH,CAoCQ,mBApCR,EAoC6B,SApC7B;AAqCD;AACF,qBAnDD;AAoDD;;AAEDF,sBACGhE,MADH,CACU,GADV,EAEGuF,SAFH,CAEa,MAFb,EAGGtH,IAHH,CAGQoN,UAHR,EAIGI,KAJH,GAKGzL,MALH,CAKU,MALV,EAMGkE,IANH,CAMQ,OANR,EAMiBc,CANjB,EAOGd,IAPH,CAOQ,QAPR,EAOkBqH,YAAYG,IAAZ,EAPlB,EAQGxH,IARH,CAQQ,GARR,EAQaoG,IARb,EASGpG,IATH,CASQ,GATR,EASa,UAAU9B,CAAV,EAAa;AACtB,2BAAOmJ,YAAYnJ,CAAZ,CAAP;AACD,mBAXH,EAYG8B,IAZH,CAYQ,MAZR,EAYgB,eAZhB,EAaGA,IAbH,CAaQ,QAbR,EAakB5I,YAblB,EAcGmB,EAdH,CAcM,WAdN,EAcmB,UAAU2F,CAAV,EAAa;AAC5B,wBAAKgE,eAAezD,MAAM+E,OAAN,CAActF,CAAd,CAAhB,IAAqC1J,MAAM4D,MAA/C,EACE8L,YAAYhG,CAAZ;AACH,mBAjBH,EAkBG3F,EAlBH,CAkBM,YAlBN,EAkBoB,YAAY;AAC5B,wBAAI,CAACuL,WAAL,EAAkB;AAChBS,kCAAY,KAAZ;AACD;AACF,mBAtBH;;AAwBA;AACA,sBAAInD,iBAAiB,CAArB,EAAwB;AACtB,wBAAIwI,aAAa9J,IACdhE,MADc,CACP,GADO,EAEdkE,IAFc,CAET,WAFS,EAEI,kBAAkBqG,KAAKjF,cAAvB,IAAyC,GAF7C,EAGdpB,IAHc,CAGT,OAHS,EAGA,yCAHA,EAId6J,IAJc,CAIT/X,GAAGgY,OAAH,CAAWnB,UAAX,CAJS,CAAjB;;AAMAiB,+BACGvI,SADH,CACa,YADb,EAEGrB,IAFH,CAEQ,MAFR,EAEgB7H,MAAMjF,aAFtB;;AAIA0W,+BACGvI,SADH,CACa,YADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAMjF,aAFxB,EAGG8M,IAHH,CAGQ,cAHR,EAGwB7H,MAAMhF,aAH9B;;AAKAyW,+BACGvI,SADH,CACa,aADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAMjF,aAFxB,EAGG8M,IAHH,CAGQ,cAHR,EAGwB7H,MAAMhF,aAH9B;AAID;;AAED;AACA,sBAAIgO,gBAAgB,CAApB,EAAuB;AACrB,wBAAI4I,YAAYjK,IACbhE,MADa,CACN,GADM,EAEbkE,IAFa,CAGZ,WAHY,EAIZ,kBAAkBqG,KAAKC,EAAL,GAAUnF,aAA5B,IAA6C,GAJjC,EAMbnB,IANa,CAMR,OANQ,EAMC,yCAND,EAOb6J,IAPa,CAOR/X,GAAGkY,UAAH,CAAcrB,UAAd,CAPQ,CAAhB;;AASAoB,8BAAU1I,SAAV,CAAoB,YAApB,EAAkCrB,IAAlC,CAAuC,MAAvC,EAA+C7H,MAAM1D,YAArD;;AAEAsV,8BACG1I,SADH,CACa,YADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAM1D,YAFxB,EAGGuL,IAHH,CAGQ,cAHR,EAGwB7H,MAAMzD,YAH9B;;AAKAqV,8BACG1I,SADH,CACa,aADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAM1D,YAFxB,EAGGuL,IAHH,CAGQ,cAHR,EAGwB7H,MAAMzD,YAH9B;AAID;AACF,iBArfD;;AAufA,oBAAI,KAAKuK,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,sBAAIgL,QACF3S,aAAa,CAAb,IAAkBA,YAAY,KAAK2H,WAAL,CAAiB7G,MAA/C,GACI,KAAK6G,WAAL,CAAiB7G,MADrB,GAEId,SAHN;AAIA,sBAAI4S,KAAK,CAACpJ,IAAIzM,QAAL,IAAiB4V,KAA1B;;AAEA;AACA,sBAAIE,eAAe,EAAnB;AACA,uBAAK,IAAInP,MAAI,CAAb,EAAgBA,MAAI,KAAKiE,WAAL,CAAiB7G,MAAjB,GAA0B6R,KAA9C,EAAqDjP,KAArD;AACEmP,iCAAatM,IAAb,CAAkB,CAAlB;AADF,mBAEA,KAAK,IAAI7C,MAAI,CAAb,EAAgBA,MAAI,KAAKiE,WAAL,CAAiB7G,MAArC,EAA6C4C,KAA7C,EAAkD;AAChD,wBAAIoP,MAAK3D,KAAK4D,KAAL,CAAWrP,MAAIiP,KAAf,CAAT;AACA,wBAAIK,IAAI,KAAKrL,WAAL,CAAiBjE,GAAjB,EAAoBsD,MAApB,CAA2BlG,MAAnC;AACA,wBAAI+R,aAAaC,GAAb,IAAmBE,CAAvB,EAA0BH,aAAaC,GAAb,IAAmBE,CAAnB;AAC3B;;AAED,sBAAIC,cAAc,CAAlB;AACA,uBAAK,IAAIvP,MAAI,CAAb,EAAgBA,MAAImP,aAAa/R,MAAjC,EAAyC4C,KAAzC;AACEuP,mCAAeJ,aAAanP,GAAb,CAAf;AADF,mBAGA,IAAIwP,oBACFzL,kBACA,KAAK5G,KAAL,CAAWjD,aADX,GAEA,KAAKiD,KAAL,CAAWvE,cAHb;AAIA,sBAAI6W,YACF,CAAC7J,IAAIuJ,aAAa/R,MAAb,GAAsBoS,iBAA3B,IAAgDD,WADlD;;AAGA,sBAAIpE,UAAUM,KAAKiE,IAAL,CAAU,KAAKzL,WAAL,CAAiB7G,MAAjB,GAA0B6R,KAApC,CAAd;AACA,sBAAI5D,KAAK,CAAT;AACA,uBAAK,IAAI+D,KAAK,CAAd,EAAiBA,KAAKjE,OAAtB,EAA+BiE,IAA/B,EAAqC;AACnC,wBAAIO,KAAKR,aAAaC,EAAb,CAAT;AACA,wBAAI9D,KAAKkE,oBAAoBG,KAAKF,SAAlC;AACApE,0BAAMC,EAAN;AACA,yBAAK,IAAI7C,KAAK,CAAd,EAAiBA,KAAKwG,KAAtB,EAA6BxG,IAA7B,EAAmC;AACjC,0BAAImH,KAAKnH,KAAK2G,KAAKH,KAAnB;AACA,0BAAIW,KAAK,KAAK3L,WAAL,CAAiB7G,MAA1B,EAAkC;AAChC8N,4CACE,KAAK/N,KADP,EAEE,KAAK2H,GAFP,EAGE,KAAKb,WAAL,CAAiB2L,EAAjB,EAAqBtM,MAHvB,EAIEqM,EAJF,EAKE,KAAK1L,WAAL,CAAiB2L,EAAjB,EAAqB5M,GALvB,EAMEe,eANF,EAOE0E,KAAKyG,EAPP,EAQEA,KAAK7V,QARP,EASEgS,KAAKC,EATP,EAUEA,EAVF;AAYD;AACF;AACF;AACF,iBApDD,MAoDO;AACLJ,sCACE,KAAK/N,KADP,EAEE,KAAK2H,GAFP,EAGE,KAAKjF,IAHP,EAIE,KAAKA,IAAL,CAAUzC,MAJZ,EAKE,EALF,EAME,CANF,EAOE,CAPF,EAQE0I,CARF,EASE,CATF,EAUEF,CAVF;AAYD;AACF,eA1jBD,MA0jBO;AACL,oBAAIiK,oBAAoB,SAApBA,iBAAoB,CACtB1S,KADsB,EAEtB2H,GAFsB,EAGtB/F,IAHsB,EAItBoM,OAJsB,EAKtB/G,SALsB,EAMtBL,eANsB,EAOtBqH,IAPsB,EAQtBtF,CARsB,EAStBuF,EATsB,EAUtBC,EAVsB,EAWtB;AACA;AACA;;;;;;;AAOA3D,2BAAS5I,IAAT,EAAe5B,MAAM1B,aAArB;;AAEA;AACA,sBAAI2I,aAAa,EAAb,IAAmBjH,MAAMlC,eAA7B,EAA8C;AAC5C6J,wBACGhE,MADH,CACU,MADV,EAEGb,IAFH,CAEQmE,SAFR,EAGGY,IAHH,CAGQ,GAHR,EAGaoG,OAAO,CAACnF,cAAcH,CAAf,IAAoB,CAHxC,EAIGd,IAJH,CAIQ,GAJR,EAIaqG,KAAKtH,kBAAkB,CAJpC,EAKGiB,IALH,CAKQ,aALR,EAKuB,YALvB,EAMGA,IANH,CAMQ,WANR,EAMqB7H,MAAM/D,kBAN3B,EAOG4L,IAPH,CAOQ,MAPR,EAOgB7H,MAAMjE,eAPtB,EAQG8L,IARH,CAQQ,YARR,EAQsB,MARtB,EASGA,IATH,CASQ,aATR,EASuB,QATvB,EAUGA,IAVH,CAUQ,mBAVR,EAU6B,SAV7B;AAWD;;AAEDqG,wBAAMtH,eAAN;AACAuH,wBAAMvH,eAAN;;AAEA;AACA;;;;;;;AAOA,sBAAIwH,SAASxM,KAAKyM,GAAL,CAAS,UAAUtI,CAAV,EAAa;AACjC,2BAAOA,EAAEvB,QAAF,CAAP;AACD,mBAFY,CAAb;AAGA,yBAAO4J,OAAOnO,MAAP,GAAgB+N,OAAvB;AACEI,6BAASA,OAAOpL,MAAP,CACP,MAAMsL,KAAKC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CADC,CAAT;AADF,mBAKA,IAAIC,aAAa/U,GACdgV,SADc,GAEdC,MAFc,CAEPR,MAFO,EAGda,KAHc,CAGR,CAAChB,OAAOjF,aAAR,EAAuBiF,OAAOtF,CAAP,GAAWM,cAAlC,CAHQ,EAId6F,YAJc,CAID1F,aAAa,GAJZ,EAKd2F,YALc,CAKD3F,aAAa,GALZ,CAAjB;;AAOA,sBAAI4F,aAAapN,KAAKoB,MAAL,CAAYrJ,GAAGsV,KAAH,CAASrN,KAAK3B,MAAd,EAAsB+N,OAAtB,CAAZ,CAAjB;;AAEA,sBAAIkB,cAAcvV,GACfgV,SADe,GAEfC,MAFe,CAERI,UAFQ,EAGfC,KAHe,CAGT,CAAChB,OAAOjF,aAAR,EAAuBiF,OAAOtF,CAAP,GAAWM,cAAlC,CAHS,CAAlB;;AAKA;AACA,sBAAIkG,UAAU,KAAd;AACAxH,sBACGhE,MADH,CACU,GADV,EAEGuF,SAFH,CAEa,MAFb,EAGGtH,IAHH,CAGQoN,UAHR,EAIGI,KAJH,GAKGzL,MALH,CAKU,MALV,EAMGkE,IANH,CAMQ,OANR,EAMiB,mCANjB,EAOGA,IAPH,CAOQ,OAPR,EAOiBqH,YAAYG,IAAZ,EAPjB,EAQGxH,IARH,CAQQ,QARR,EAQkBsG,EARlB,EASGtG,IATH,CASQ,GATR,EASa,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,2BAAOqM,YAAYnJ,CAAZ,CAAP;AACD,mBAXH,EAYG8B,IAZH,CAYQ,GAZR,EAYaqG,EAZb,EAaGrG,IAbH,CAaQ,MAbR,EAagB,UAAU9B,CAAV,EAAa;AACzBoJ,8BAAU,CAACA,OAAX;AACA,2BAAOA,UAAUpQ,WAAV,GAAwBC,YAA/B;AACD,mBAhBH;;AAkBA,sBAAI2T,KAAKhL,IACNhE,MADM,CACC,GADD,EAENuF,SAFM,CAEI,MAFJ,EAGNtH,IAHM,CAGDA,IAHC,EAINwN,KAJM,GAKNzL,MALM,CAKC,GALD,CAAT;;AAOA,sBAAI3D,MAAM5B,UAAN,IAAoB4B,MAAMV,aAAN,IAAuB,KAA/C,EAAsD;AACpD,wBAAIsT,iBAAiB,CAArB;;AAEA3N,mCAAeL,OAAf,CAAuB,UAACyI,QAAD,EAAWpK,KAAX,EAAqB;AAC1C,0BAAIwD,WAAW4G,SAASrI,GAAxB;AACA,0BAAIyB,YAAY,CAAhB,EAAmB;AACjB,4BAAI+I,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAI2I,QACF,CAAC8F,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIA0S,2BAAGhP,MAAH,CAAU,MAAV,EACGb,IADH,CACQ,UAAUiD,CAAV,EAAa;AACjB,iCAAO,CAACvE,OAAOuE,EAAEU,QAAF,CAAP,IAAsBpH,WAAvB,EAAoCkM,OAApC,CACL3M,aADK,CAAP;AAGD,yBALH,EAMGiJ,IANH,CAMQ,GANR,EAMa,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,iCACE6L,WAAW3I,EAAEvB,QAAF,CAAX,IACAoE,QAAQ,CADR,GAEA,CAACA,QAAQ4G,GAAT,IAAgBvM,KAHlB;AAKD,yBAZH,EAaG4E,IAbH,CAaQ,GAbR,EAaaqG,EAbb,EAcGrG,IAdH,CAcQ,aAdR,EAcuB,YAdvB,EAeGA,IAfH,CAeQ,WAfR,EAeqB7H,MAAMlB,aAf3B,EAgBG+I,IAhBH,CAgBQ,MAhBR,EAgBgB7H,MAAMnB,UAhBtB,EAiBGgJ,IAjBH,CAiBQ,aAjBR,EAiBuB,QAjBvB,EAkBGA,IAlBH,CAkBQ,mBAlBR,EAkB6B,kBAlB7B,EAmBG6H,IAnBH,CAmBQ,UAAU3J,CAAV,EAAalD,CAAb,EAAgB;AACpB,8BAAIgQ,aAAa,KAAK3C,OAAL,GAAexH,MAAhC;AACAkK,2CAAiBjZ,GAAG+M,GAAH,CAAO,CAACkM,cAAD,EAAiBC,UAAjB,CAAP,CAAjB;AACD,yBAtBH;AAuBD;AACF,qBArCD;;AAuCA3E,0BAAM0E,cAAN;AACAzE,0BAAMyE,cAAN;AACD;;AAED,sBAAI5S,MAAMnC,UAAV,EAAsB;AACpB,wBAAIiV,iBAAiB,CAArB;AACA,wBAAIhD,aAAatO,OAAOxB,MAAMT,UAAb,CAAjB;AACAoT,uBAAGhP,MAAH,CAAU,MAAV,EACGb,IADH,CACQ,UAAUiD,CAAV,EAAa;AACjB,6BAAOA,EAAEvB,QAAF,CAAP;AACD,qBAHH,EAIGqD,IAJH,CAIQ,aAJR,EAIuB,YAJvB,EAKGA,IALH,CAKQ,WALR,EAKqB7H,MAAMhE,aAL3B,EAMG6L,IANH,CAMQ,MANR,EAMgB,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AAC5B,0BAAIoC,eAAehF,MAAnB,EAA2B;AACzB;AACA,4BAAI8P,WAAWhK,EAAEd,eAAe,CAAf,EAAkBD,GAApB,IAA2B3F,WAA1C;AACA,4BAAI2Q,WAAWD,QAAf;;AAEA,4BAAIC,WAAWxG,YAAX,IAA2BuG,WAAWxG,YAA1C,EACE,OAAOvJ,MAAMlE,oBAAb;AACH;AACD,6BAAOkE,MAAMnE,UAAb;AACD,qBAhBH,EAiBGgM,IAjBH,CAiBQ,aAjBR,EAiBuB,QAjBvB,EAkBGA,IAlBH,CAkBQ,mBAlBR,EAkB6B,SAlB7B,EAmBGA,IAnBH,CAmBQ,WAnBR,EAmBqB,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACjC,0BAAIoN,OAAO,KAAKC,OAAL,EAAX;AACA,0BAAInF,IAAIuD,KAAK6B,GAAL,CAAUL,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAIC,IAAI/B,KAAKgC,GAAL,CAAUR,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAI/I,IAAIiH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAamC,CAAtB,IAA2BuD,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAc2H,CAAvB,CAAnC;AACA,0BAAIjJ,IAAIkH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAayH,CAAtB,IAA2B/B,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAcqC,CAAvB,CAAnC;;AAEA,0BAAI9E,IAAIyI,WAAW3I,EAAEvB,QAAF,CAAX,IAA0BkK,WAAWe,SAAX,KAAyB,CAA3D;AACA,0BAAI9E,IAAIuD,KAAKC,EAAL,GAAU9G,IAAI,CAAtB;AACA,6BACE,eAAepB,CAAf,GAAmB,GAAnB,GAAyB0E,CAAzB,GAA6B,WAA7B,GAA2CmF,UAA3C,GAAwD,GAD1D;AAGD,qBA/BH,EAgCGJ,IAhCH,CAgCQ,UAAU3J,CAAV,EAAalD,CAAb,EAAgB;AACpB,0BAAIoN,OAAO,KAAKC,OAAL,EAAX;AACA,0BAAInF,IAAIuD,KAAK6B,GAAL,CAAUL,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAIC,IAAI/B,KAAKgC,GAAL,CAAUR,aAAaxB,KAAK8B,EAAnB,GAAyB,GAAlC,CAAR;AACA,0BAAI/I,IAAIiH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAamC,CAAtB,IAA2BuD,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAc2H,CAAvB,CAAnC;AACA,0BAAIjJ,IAAIkH,KAAKiC,GAAL,CAASN,KAAKrH,KAAL,GAAayH,CAAtB,IAA2B/B,KAAKiC,GAAL,CAASN,KAAKvH,MAAL,GAAcqC,CAAvB,CAAnC;;AAEA,0BAAI8H,aAAaxL,CAAjB;AACAyL,uCAAiBnZ,GAAG+M,GAAH,CAAO,CAACoM,cAAD,EAAiBD,UAAjB,CAAP,CAAjB;AACD,qBAzCH;AA0CA,wBAAIrZ,EAAEuP,SAAF,CAAYD,WAAZ,CAAJ,EAA8B;AAC5BqF,4BAAMrF,WAAN;AACD,qBAFD,MAEO;AACLqF,4BAAM2E,cAAN;AACD;AACF;;AAED,sBAAItC,aAAa7W,GACd8W,WADc,GAEd7B,MAFc,CAEP,CAACpF,YAAD,EAAeD,YAAf,CAFO,EAGd0F,KAHc,CAGR,CAACf,EAAD,EAAKA,KAAKC,EAAV,CAHQ,EAIduC,IAJc,EAAjB;;AAMA,2BAASqC,KAAT,CAAepL,GAAf,EAAoBvG,KAApB,EAA2ByM,KAA3B,EAAkC+C,WAAlC,EAA+C;AAC7CjJ,wBACGhE,MADH,CACU,MADV,EAEGsI,KAFH,CAES,QAFT,EAEmB4B,KAFnB,EAGGhG,IAHH,CAGQ,cAHR,EAGwB+I,eAAe,IAAf,GAAsB,CAAtB,GAA0BA,WAHlD,EAIG/I,IAJH,CAIQ,IAJR,EAIcoG,OAAOjF,aAJrB,EAKGnB,IALH,CAKQ,IALR,EAKc2I,WAAWpP,KAAX,CALd,EAMGyG,IANH,CAMQ,IANR,EAMcoG,OAAOtF,CAAP,GAAWM,cANzB,EAOGpB,IAPH,CAOQ,IAPR,EAOc2I,WAAWpP,KAAX,CAPd;AAQD;;AAED,sBAAIpB,MAAMvC,YAAV,EACEsV,MAAMpL,GAAN,EAAW2B,aAAX,EAA0BtJ,MAAMzF,aAAhC,EAA+CyF,MAAMxF,aAArD;;AAEF,sBAAIwF,MAAM/B,WAAV,EACE8U,MAAMpL,GAAN,EAAW6B,YAAX,EAAyBxJ,MAAMhD,YAA/B,EAA6CgD,MAAM/C,YAAnD;;AAEF,sBAAI+C,MAAM9B,WAAV,EACE6U,MAAMpL,GAAN,EAAW4B,YAAX,EAAyBvJ,MAAM7C,YAA/B,EAA6C6C,MAAM5C,YAAnD;;AAEF,sBAAI4C,MAAMpC,iBAAV,EACEmV,MACEpL,GADF,EAEE8B,cAFF,EAGEzJ,MAAM1E,kBAHR,EAIE0E,MAAM6Q,kBAJR;;AAOF,sBAAI7Q,MAAMhC,gBAAV,EACE+U,MACEpL,GADF,EAEEgC,aAFF,EAGE3J,MAAMpD,iBAHR,EAIEoD,MAAM8Q,iBAJR;;AAOF,sBAAI9Q,MAAMR,QAAV,EAAoB;AAClByF,mCAAeL,OAAf,CAAuB,UAACyI,QAAD,EAAWpK,KAAX,EAAqB;AAC1C,0BAAIwD,WAAW4G,SAASrI,GAAxB;AACA,0BAAIyB,YAAY,CAAhB,EAAmB;AACjB,4BAAI+I,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAI2I,QACF,CAAC8F,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIA0S,2BAAGhP,MAAH,CAAU,MAAV,EACGkE,IADH,CACQ,OADR,EACiB,mCADjB,EAEGA,IAFH,CAEQ,QAFR,EAEkB,UAAU9B,CAAV,EAAa;AAC3B,8BAAIsE,MAAM8C,kBAAkBpH,EAAEU,QAAF,CAAlB,CAAV;AACA,iCAAO6H,KAAKiC,GAAL,CACLC,WAAWlH,aAAX,IAA4BkH,WAAWnG,GAAX,CADvB,CAAP;AAGD,yBAPH,EAQGxC,IARH,CAQQ,OARR,EAQiBe,KARjB,EASGf,IATH,CASQ,GATR,EASa,UAAU9B,CAAV,EAAa;AACtB,8BAAIsE,MAAM8C,kBAAkBpH,EAAEU,QAAF,CAAlB,CAAV;AACA,iCAAO9M,GAAGgN,GAAH,CAAO,CAAC6J,WAAWnG,GAAX,CAAD,EAAkBmG,WAAWlH,aAAX,CAAlB,CAAP,CAAP;AACD,yBAZH,EAaGzB,IAbH,CAaQ,GAbR,EAaa,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,iCAAO6L,WAAW3I,EAAEvB,QAAF,CAAX,IAA0B,CAACoE,QAAQ4G,GAAT,IAAgBvM,KAAjD;AACD,yBAfH,EAgBG4E,IAhBH,CAgBQ,MAhBR,EAgBgB,UAAU9B,CAAV,EAAa;AACzB,iCAAOqH,YAAYrH,CAAZ,EAAesH,QAAf,CAAP;AACD,yBAlBH,EAmBGlB,OAnBH,CAmBW,WAnBX,EAmBwB,UAAUpG,CAAV,EAAa;AACjC,iCACE2D,uBACAG,iBADA,IAEA9D,EAAEU,QAAF,IAAcpH,WAAd,GAA4BoK,cAH9B;AAKD,yBAzBH,EA0BG0C,OA1BH,CA0BW,UA1BX,EA0BuB,UAAUpG,CAAV,EAAa;AAChC,iCACE6D,sBACAE,gBADA,IAEA/D,EAAEU,QAAF,IAAcpH,WAAd,GAA4BsK,aAH9B;AAKD,yBAhCH;AAiCD;AACF,qBA/CD;AAgDD;;AAED,sBAAI3J,MAAMP,SAAV,EAAqB;AACnB,wBAAIsR,KAAKrC,WAAWW,IAAX,EAAT;;AAEA,wBAAIrP,MAAMN,SAAV,EAAqB;AACnB,0BAAIsR,YAAYrX,GAAGsX,WAAnB;AACA,8BAAQjR,MAAMF,SAAd;AACE,6BAAK,QAAL;AACEkR,sCAAYrX,GAAGsX,WAAf;AACA;AACF,6BAAK,UAAL;AACED,sCAAYrX,GAAGqZ,cAAf;AACA;AACF,6BAAK,UAAL;AACEhC,sCAAYrX,GAAGwX,aAAf;AACA;AACF,6BAAK,aAAL;AACEH,sCAAYrX,GAAGyX,eAAf;AACA;AAZJ;;AAeA,0BAAIC,eAAe1X,GAChB2X,IADgB,GAEhBC,KAFgB,CAEVP,SAFU,EAGhB/K,CAHgB,CAGd,UAAUF,CAAV,EAAa;AACd,+BAAOA,EAAEE,CAAT;AACD,uBALgB,EAMhB0E,CANgB,CAMd,UAAU5E,CAAV,EAAa;AACd,+BAAOA,EAAE4E,CAAT;AACD,uBARgB,CAAnB;;AAUA1F,qCAAeL,OAAf,CAAuB,UAACxD,KAAD,EAAQ6B,KAAR,EAAkB;AACvC,4BAAIuM,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAI2I,QACF,CAAC8F,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIA,4BAAID,MAAMN,SAAV,EAAqB;AACnB,8BAAI8R,SAAS,EAAb;AACA,+BAAK,IAAI3O,IAAI,CAAb,EAAgBA,IAAIjB,KAAK3B,MAAzB,EAAiC4C,GAAjC,EAAsC;AACpC,gCAAIkD,IAAInE,KAAKiB,CAAL,CAAR;AACA,gCAAIoD,IACFyI,WAAW3I,EAAEvB,QAAF,CAAX,IACAoE,QAAQ,CADR,GAEA,CAACA,QAAQ4G,GAAT,IAAgBvM,KAHlB;AAIA,gCAAI0H,IAAI6F,WAAWzK,EAAE3E,MAAM4D,GAAR,IAAe3F,WAA1B,CAAR;AACAmS,mCAAO9L,IAAP,CAAY;AACVO,kCADU;AAEV0E;AAFU,6BAAZ;AAID;;AAEDhD,8BACGhE,MADH,CACU,MADV,EAEGkE,IAFH,CAEQ,GAFR,EAEawJ,aAAaG,MAAb,CAFb,EAGG3J,IAHH,CAGQ,QAHR,EAGkB7H,MAAML,SAHxB,EAIGkI,IAJH,CAIQ,cAJR,EAIwB7H,MAAMN,SAJ9B,EAKGmI,IALH,CAKQ,MALR,EAKgB,MALhB;AAMD;;AAED,4BAAI7H,MAAMJ,OAAV,EAAmB;AACjB+S,6BAAGhP,MAAH,CAAU,QAAV,EACGkE,IADH,CACQ,GADR,EACa7H,MAAMJ,OAAN,GAAgB,GAD7B,EAEGiI,IAFH,CAEQ,MAFR,EAEgB7H,MAAMH,QAFtB,EAGGgI,IAHH,CAGQ,IAHR,EAGc,UAAU9B,CAAV,EAAa;AACvB,mCACE2I,WAAW3I,EAAEvB,QAAF,CAAX,IACAoE,QAAQ,CADR,GAEA,CAACA,QAAQ4G,GAAT,IAAgBvM,KAHlB;AAKD,2BATH,EAUG4E,IAVH,CAUQ,IAVR,EAUc,UAAU9B,CAAV,EAAa;AACvB,mCAAOyK,WAAWzK,EAAE3E,MAAM4D,GAAR,IAAe3F,WAA1B,CAAP;AACD,2BAZH;AAaD;AACF,uBAjDD;AAkDD;AACF;;AAED,sBAAIW,MAAM5B,UAAN,IAAoB4B,MAAMV,aAAN,IAAuB,KAA/C,EAAsD;AACpD2F,mCAAeL,OAAf,CAAuB,UAACyI,QAAD,EAAWpK,KAAX,EAAqB;AAC1C,0BAAIwD,WAAW4G,SAASrI,GAAxB;AACA,0BAAIyB,YAAY,CAAhB,EAAmB;AACjB,4BAAI+I,MACFvK,eAAehF,MAAf,GAAwB,CAAxB,GACKyO,WAAWe,SAAX,KAAyBpG,eAA1B,IACDpE,eAAehF,MAAf,GAAwB,CADvB,IAEF,GAHF,GAII,CALN;AAMA,4BAAI2I,QACF,CAAC8F,WAAWe,SAAX,KAAyBD,OAAOvK,eAAehF,MAAf,GAAwB,CAA/B,CAA1B,IACAgF,eAAehF,MAFjB;;AAIA0S,2BAAGhP,MAAH,CAAU,MAAV,EACGb,IADH,CACQ,UAAUiD,CAAV,EAAa;AACjB,iCAAO,CAACvE,OAAOuE,EAAEU,QAAF,CAAP,IAAsBpH,WAAvB,EAAoCkM,OAApC,CACL3M,aADK,CAAP;AAGD,yBALH,EAMGiJ,IANH,CAMQ,GANR,EAMa,UAAU9B,CAAV,EAAalD,CAAb,EAAgB;AACzB,iCACE6L,WAAW3I,EAAEvB,QAAF,CAAX,IACAoE,QAAQ,CADR,GAEA,CAACA,QAAQ4G,GAAT,IAAgBvM,KAHlB;AAKD,yBAZH,EAaG4E,IAbH,CAaQ,GAbR,EAaa,UAAU9B,CAAV,EAAa;AACtB,8BAAIzG,iBAAiB,UAArB,EACE,OAAOkR,WAAWlH,aAAX,CAAP,CADF,KAEK;AACH,gCAAIe,MAAM8C,kBAAkBpH,EAAEU,QAAF,CAAlB,CAAV;AACA,mCAAO+J,WAAWnG,GAAX,CAAP;AACD;AACF,yBApBH,EAqBGxC,IArBH,CAqBQ,aArBR,EAqBuB,YArBvB,EAsBGA,IAtBH,CAsBQ,WAtBR,EAsBqB7H,MAAMlB,aAtB3B,EAuBG+I,IAvBH,CAuBQ,MAvBR,EAuBgB7H,MAAMnB,UAvBtB,EAwBGgJ,IAxBH,CAwBQ,aAxBR,EAwBuB,QAxBvB,EAyBGA,IAzBH,CAyBQ,mBAzBR,EAyB6B,UAAU9B,CAAV,EAAa;AACtC,8BAAIzG,iBAAiB,UAArB,EACE,OAAOyG,EAAEU,QAAF,IAAcpH,WAAd,GAA4BiK,aAA5B,GACH,iBADG,GAEH,kBAFJ,CADF,KAKE,OAAOvD,EAAEU,QAAF,IAAcpH,WAAd,GAA4BiK,aAA5B,GACH,kBADG,GAEH,iBAFJ;AAGH,yBAlCH;AAmCD;AACF,qBAjDD;AAkDD;;AAED3B,sBACGhE,MADH,CACU,GADV,EAEGuF,SAFH,CAEa,MAFb,EAGGtH,IAHH,CAGQoN,UAHR,EAIGI,KAJH,GAKGzL,MALH,CAKU,MALV,EAMGkE,IANH,CAMQ,OANR,EAMiBqH,YAAYG,IAAZ,EANjB,EAOGxH,IAPH,CAOQ,QAPR,EAOkBsG,EAPlB,EAQGtG,IARH,CAQQ,GARR,EAQa,UAAU9B,CAAV,EAAa;AACtB,2BAAOmJ,YAAYnJ,CAAZ,CAAP;AACD,mBAVH,EAWG8B,IAXH,CAWQ,GAXR,EAWaqG,EAXb,EAYGrG,IAZH,CAYQ,MAZR,EAYgB,eAZhB,EAaGA,IAbH,CAaQ,QAbR,EAakB5I,YAblB,EAcGmB,EAdH,CAcM,WAdN,EAcmB,UAAU2F,CAAV,EAAa;AAC5B,wBAAKgE,eAAezD,MAAM+E,OAAN,CAActF,CAAd,CAAhB,IAAqC1J,MAAM4D,MAA/C,EACE8L,YAAYhG,CAAZ;AACH,mBAjBH,EAkBG3F,EAlBH,CAkBM,YAlBN,EAkBoB,YAAY;AAC5B,wBAAI,CAACuL,WAAL,EAAkB;AAChBS,kCAAY,KAAZ;AACD;AACF,mBAtBH;;AAwBA,sBAAIpD,gBAAgB,CAApB,EAAuB;AACrB,wBAAI4I,YAAYjK,IACbhE,MADa,CACN,GADM,EAEbkE,IAFa,CAER,WAFQ,EAEK,gBAAgBoG,OAAOjF,aAAvB,IAAwC,MAF7C,EAGbmD,OAHa,CAGL,yCAHK,EAGsC,IAHtC,EAIbuF,IAJa,CAKZ/X,GACGsZ,QADH,CACYzC,UADZ,EAEG0C,aAFH,CAEiB,CAFjB,EAGGC,aAHH,CAGiB,EAHjB,EAIGC,KAJH,CAIS,CAJT,CALY,CAAhB;AAWAxB,8BAAU1I,SAAV,CAAoB,YAApB,EAAkCrB,IAAlC,CAAuC,MAAvC,EAA+C7H,MAAM1D,YAArD;AACAsV,8BACG1I,SADH,CACa,YADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAM1D,YAFxB,EAGGuL,IAHH,CAGQ,cAHR,EAGwB7H,MAAMzD,YAH9B;AAIAqV,8BACG1I,SADH,CACa,aADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAM1D,YAFxB,EAGGuL,IAHH,CAGQ,cAHR,EAGwB7H,MAAMzD,YAH9B;AAID;;AAED,sBAAI0M,iBAAiB,CAArB,EAAwB;AACtB,wBAAIwI,aAAa9J,IACdhE,MADc,CACP,GADO,EAEdkE,IAFc,CAGb,WAHa,EAIb,gBAAgBoG,OAAOtF,CAAP,GAAWM,cAA3B,IAA6C,MAJhC,EAMdkD,OANc,CAMN,yCANM,EAMqC,IANrC,EAOduF,IAPc,CAQb/X,GACG0Z,SADH,CACa7C,UADb,EAEG0C,aAFH,CAEiB,CAFjB,EAGGC,aAHH,CAGiB,EAHjB,EAIGC,KAJH,CAIS,CAJT,CARa,CAAjB;AAcA3B,+BACGvI,SADH,CACa,YADb,EAEGrB,IAFH,CAEQ,MAFR,EAEgB7H,MAAMjF,aAFtB;AAGA0W,+BACGvI,SADH,CACa,YADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAMjF,aAFxB,EAGG8M,IAHH,CAGQ,cAHR,EAGwB7H,MAAMhF,aAH9B;AAIAyW,+BACGvI,SADH,CACa,aADb,EAEGrB,IAFH,CAEQ,QAFR,EAEkB7H,MAAMjF,aAFxB,EAGG8M,IAHH,CAGQ,cAHR,EAGwB7H,MAAMhF,aAH9B;AAID;AACF,iBAlfD;;AAofA,oBAAI4L,mBAAkB,KAAK5G,KAAL,CAAWlC,eAAX,GAClB0D,OAAO,KAAKxB,KAAL,CAAW/D,kBAAX,CAA8B4K,OAA9B,CAAsC,GAAtC,EAA2C,EAA3C,CAAP,IAAyD,IADvC,GAElB,CAFJ;;AAIA,oBAAI,KAAKC,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,sBAAIgL,SACF3S,aAAa,CAAb,IAAkBA,YAAY,KAAK2H,WAAL,CAAiB7G,MAA/C,GACI,KAAK6G,WAAL,CAAiB7G,MADrB,GAEId,SAHN;AAIA,sBAAI4S,MAAK,CAACpJ,IAAIzM,QAAL,IAAiB4V,MAA1B;;AAEA;AACA,sBAAIwB,eAAe,EAAnB;AACA,uBAAK,IAAIzQ,MAAI,CAAb,EAAgBA,MAAIiP,MAApB,EAA2BjP,KAA3B;AAAgCyQ,iCAAa5N,IAAb,CAAkB,CAAlB;AAAhC,mBACA,KAAK,IAAI7C,MAAI,CAAb,EAAgBA,MAAI,KAAKiE,WAAL,CAAiB7G,MAArC,EAA6C4C,KAA7C,EAAkD;AAChD,wBAAIyI,MAAKzI,MAAIiP,MAAb;AACA,wBAAIK,KAAI,KAAKrL,WAAL,CAAiBjE,GAAjB,EAAoBsD,MAApB,CAA2BlG,MAAnC;AACA,wBAAIqT,aAAahI,GAAb,IAAmB6G,EAAvB,EAA0BmB,aAAahI,GAAb,IAAmB6G,EAAnB;AAC3B;;AAED,sBAAIC,eAAc,CAAlB;AACA,uBAAK,IAAIvP,MAAI,CAAb,EAAgBA,MAAIyQ,aAAarT,MAAjC,EAAyC4C,KAAzC;AACEuP,oCAAekB,aAAazQ,GAAb,CAAf;AADF,mBAGA,IAAI0Q,mBACF,KAAKvT,KAAL,CAAWjD,aAAX,GAA2B,KAAKiD,KAAL,CAAWvE,cADxC;AAEA,sBAAI+X,WACF,CAAC7K,IAAI2K,aAAarT,MAAb,GAAsBsT,gBAA3B,IAA+CnB,YADjD;;AAGA,sBAAIpE,WAAUM,KAAKiE,IAAL,CAAU,KAAKzL,WAAL,CAAiB7G,MAAjB,GAA0B6R,MAApC,CAAd;AACA,sBAAI3D,MAAK1F,IAAIuF,QAAb;AACA,sBAAIE,MAAKC,GAAT;AACA,uBAAK,IAAI8D,OAAK,CAAd,EAAiBA,OAAKjE,QAAtB,EAA+BiE,MAA/B,EAAqC;AACnC,wBAAIwB,KAAK,CAAT;AACA,yBAAK,IAAInI,OAAK,CAAd,EAAiBA,OAAKwG,MAAtB,EAA6BxG,MAA7B,EAAmC;AACjC,0BAAIkH,MAAKc,aAAahI,IAAb,CAAT;;AAEA,0BAAImH,MAAKnH,OAAK2G,OAAKH,MAAnB;AACA,0BAAIW,MAAK,KAAK3L,WAAL,CAAiB7G,MAA1B,EAAkC;AAChCyS,0CACE,KAAK1S,KADP,EAEE,KAAK2H,GAFP,EAGE,KAAKb,WAAL,CAAiB2L,GAAjB,EAAqBtM,MAHvB,EAIEqM,GAJF,EAKE,KAAK1L,WAAL,CAAiB2L,GAAjB,EAAqB5M,GALvB,EAMEe,gBANF,EAOE6M,EAPF,EAQE1B,MAAK7V,QARP,EASEgS,MAAKC,GATP,EAUEA,GAVF;AAYAsF,8BAAM1B,GAAN;AACD;AACF;AACD7D,2BAAMC,GAAN;AACD;AACF,iBApDD,MAoDO;AACLuE,oCACE,KAAK1S,KADP,EAEE,KAAK2H,GAFP,EAGE,KAAKjF,IAHP,EAIE,KAAKA,IAAL,CAAUzC,MAJZ,EAKE,EALF,EAME,CANF,EAOE,CAPF,EAQE0I,CARF,EASE,CATF,EAUEF,CAVF;AAYD;AACF;;AAED,kBAAIiL,YAAY,SAAZA,SAAY,CAAU/L,GAAV,EAAe;AAC7B,oBAAIgM,iBAAiBhM,IAAIuB,SAAJ,CACnB,kDADmB,CAArB;;AAIA,oBACE1P,EAAEuP,SAAF,CAAY1N,wBAAZ,KACAsY,eAAeC,OAAf,CAAuB3T,MAAvB,GAAgC,CADhC,IAEA0T,eAAeC,OAAf,CAAuB,CAAvB,EAA0B3T,MAA1B,GAAmC,CAHrC,EAIE;AACA0T,iCAAe3G,UAAf,GAA4B5M,EAA5B,CAA+B,OAA/B,EAAwC,SAASyT,UAAT,GAAsB;AAC5Dla,uBAAGma,MAAH,CAAU,IAAV,EACG7H,KADH,CACS,MADT,EACiB7Q,sBADjB,EAEG6R,QAFH,CAEY5R,wBAFZ,EAGG2R,UAHH,GAIGf,KAJH,CAIS,MAJT,EAIiB9Q,iBAJjB,EAKG8R,QALH,CAKY5R,wBALZ,EAMG2R,UANH,GAOG5M,EAPH,CAOM,OAPN,EAOeyT,UAPf;AAQD,mBATD;AAUD;AACF,eArBD;;AAuBA,kBAAIE,WAAW,SAAXA,QAAW,CAAUpM,GAAV,EAAe;AAC5B,oBAAIqM,gBAAgBrM,IAAIuB,SAAJ,CAClB,iDADkB,CAApB;AAGA,oBACE1P,EAAEuP,SAAF,CAAYpM,uBAAZ,KACAqX,cAAcJ,OAAd,CAAsB3T,MAAtB,GAA+B,CAD/B,IAEA+T,cAAcJ,OAAd,CAAsB,CAAtB,EAAyB3T,MAAzB,GAAkC,CAHpC,EAIE;AACA+T,gCAAchH,UAAd,GAA2B5M,EAA3B,CAA8B,OAA9B,EAAuC,SAAS6T,SAAT,GAAqB;AAC1Dta,uBAAGma,MAAH,CAAU,IAAV,EACG7H,KADH,CACS,MADT,EACiBvP,qBADjB,EAEGuQ,QAFH,CAEYtQ,uBAFZ,EAGGqQ,UAHH,GAIGf,KAJH,CAIS,MAJT,EAIiBxP,gBAJjB,EAKGwQ,QALH,CAKYtQ,uBALZ,EAMGqQ,UANH,GAOG5M,EAPH,CAOM,OAPN,EAOe6T,SAPf;AAQD,mBATD;AAUD;AACF,eApBD;;AAsBAP,wBAAU,KAAK/L,GAAf;AACAoM,uBAAS,KAAKpM,GAAd;AACD;;AAED;;;;;;;;;;;;;;;;;;AAmBA,iBAAKxE,IAAL,CAAU+Q,kBAAV;AACD;;;4CAEiB;AAChB,iBAAKC,OAAL;AACD;;;+BAEIC,K,EAAO7Q,I,EAAM8Q,K,EAAOlR,I,EAAM;AAC7B,iBAAKA,IAAL,GAAYA,IAAZ;AACA,iBAAKI,IAAL,GAAYA,IAAZ;;AAEA;AACA,gBAAI+Q,mBAAmB/Q,KAAKE,IAAL,CAAU,gBAAV,CAAvB;AACA,gBAAI6Q,iBAAiBrU,MAArB,EAA6B,KAAKsD,IAAL,GAAY+Q,gBAAZ;;AAE7B/L,mBAAOpF,IAAP;AACD;;;;QAjpE8B5J,gB;;AAspEjCQ,yBAAmBwa,WAAnB,GAAiC,aAAjC;;2BAESxa,kB","file":"module.js","sourcesContent":["/*jshint esversion: 6 */\r\n/*jshint -W087 */\r\n/*jshint -W014 */\r\nimport { MetricsPanelCtrl } from \"app/plugins/sdk\";\r\nimport $ from \"jquery\";\r\nimport \"jquery.flot\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport \"./css/multistat-panel.css!\";\r\nimport * as d3 from \"d3\";\r\nimport { getTemplateSrv } from '@grafana/runtime';\r\nimport { PanelEvents } from \"@grafana/data\";\r\n//import \"@types/tinycolor2\";\r\n//import { xxx } from \"tinycolor2\";\r\n\r\nconst templateSrv = getTemplateSrv();\r\n\r\nclass MultistatPanelCtrl extends MetricsPanelCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    var panelDefaults = {\r\n      timeFrom: null,\r\n      timeShift: null,\r\n      BarPadding: 10,\r\n      MultiBarPadding: 10,\r\n      BaseLineColor: \"#ff0000\",\r\n      BaseLineWidth: 1,\r\n      BaseLineValue: null,\r\n      DateTimeColName: \"date\",\r\n      DateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      TooltipDateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      FlashHighLimitBar: false,\r\n      FlashLowLimitBar: false,\r\n      HighAxisColor: \"#ffffff\",\r\n      HighAxisWidth: 1,\r\n      HighBarColor: \"rgb(120, 128, 0)\",\r\n      RecolorColName: null,\r\n      HighLimitBarColor: \"#ff0000\",\r\n      HighLimitBarFlashColor: \"#ffa500\",\r\n      HighLimitBarFlashTimeout: 1000,\r\n      HighLimitLineColor: \"#ff0000\",\r\n      HighLimitValue: null,\r\n      HighLmitLineWidth: 1,\r\n      HighSideMargin: 22,\r\n      Horizontal: false,\r\n      LabelColName: \"\",\r\n      LabelNameFilter: \"\",\r\n      LabelColor: \"#ffffff\",\r\n      OutOfRangeLabelColor: \"#ffffff\",\r\n      GroupLabelColor: \"#ffffff\",\r\n      LabelFontSize: \"100%\",\r\n      GroupLabelFontSize: \"200%\",\r\n      GroupGap: 5,\r\n      LabelMargin: null,\r\n      Legend: false,\r\n      Links: [],\r\n      LowAxisColor: \"#ffffff\",\r\n      LowAxisWidth: 1,\r\n      LowBarColor: \"teal\",\r\n      LowLimitBarColor: \"#ff0000\",\r\n      LowLimitBarFlashColor: \"#ffa500\",\r\n      LowLimitBarFlashTimeout: 200,\r\n      LowLimitLineColor: \"#ff0000\",\r\n      LowLimitValue: null,\r\n      LowLmitLineWidth: 1,\r\n      LowSideMargin: 22,\r\n      MaxLineColor: \"rgb(74, 232, 12)\",\r\n      MaxLineWidth: 1,\r\n      MaxLineValue: null,\r\n      MinLineColor: \"#ff0000\",\r\n      MinLineWidth: 1,\r\n      MinLineValue: null,\r\n      RecolorHighLimitBar: false,\r\n      RecolorLowLimitBar: false,\r\n      RecolorRules: [],\r\n      ShowBaseLine: false,\r\n      ShowDate: false,\r\n      Aggregate: \"last\",\r\n      ShowHighLimitLine: false,\r\n      ShowLabels: true,\r\n      ShowGroupLabels: true,\r\n      ShowLeftAxis: true,\r\n      ShowLowLimitLine: false,\r\n      ShowMaxLine: false,\r\n      ShowMinLine: false,\r\n      ShowRightAxis: true,\r\n      ShowValues: true,\r\n      SortColName: \"value\",\r\n      SortDirection: \"ascending\",\r\n      TZOffsetHours: 0,\r\n      ToolTipType: \"\",\r\n      ToolTipFontSize: \"100%\",\r\n      ValueColName: \"\",\r\n      Values: [],\r\n      ValueDecimals: 2,\r\n      ValueColor: \"#ffffff\",\r\n      ValueFontSize: \"100%\",\r\n      OddRowColor: \"rgba(33, 33, 34, 0.92)\",\r\n      EvenRowColor: \"rgba(61, 61, 64, 0.78)\",\r\n      OutlineColor: \"rgba(245, 255, 0, 0.1)\",\r\n      GroupSortString: \"\",\r\n      GroupCols: 0,\r\n      GroupNameFilter: \"\",\r\n      ScaleFactor: 1,\r\n      ValuePosition: \"top\",\r\n      LableAngle: 0,\r\n      ShowBars: true,\r\n      ShowLines: false,\r\n      LineWidth: 5,\r\n      LineColor: \"blue\",\r\n      DotSize: 10,\r\n      DotColor: \"white\",\r\n      CurveType: \"Monotone\",\r\n    };\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    // Migrate old configurations from single value column to array of value columns\r\n    if (this.panel.Values.length === 0) {\r\n      this.panel.Values = [\r\n        {\r\n          Name: this.panel.ValueColName,\r\n          LowBarColor: this.panel.LowBarColor,\r\n          HighBarColor: this.panel.HighBarColor,\r\n        },\r\n      ];\r\n      delete this.panel.ValueColName;\r\n      delete this.panel.LowBarColor;\r\n      delete this.panel.HighBarColor;\r\n    }\r\n\r\n    /*\r\n    console.log('Listing variables');\r\n    templateSrv.getVariables().forEach((v) => {      \r\n      console.log(JSON.stringify(v, null, 2));\r\n      if (v.current){\r\n        console.log(\"dashboard variable[\" + v.name + \"]=\" + v.current.value);\r\n        this.updateNamedValue(this.panel, v.name.split(\"_\"), v.current.value);\r\n      }\r\n    });\r\n    */\r\n\r\n    this.events.on(\r\n      PanelEvents.dataReceived,\r\n      this.onDataReceived.bind(this),\r\n      $scope\r\n    );\r\n\r\n    this.events.on(PanelEvents.dataError, this.onDataError.bind(this), $scope);\r\n\r\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\r\n\r\n    this.events.on(\r\n      PanelEvents.dataSnapshotLoad,\r\n      this.onDataSnapshotLoad.bind(this)\r\n    );\r\n    this.events.on(\r\n      PanelEvents.editModeInitialized,\r\n      this.onInitEditMode.bind(this)\r\n    );\r\n    this.events.on(\r\n      PanelEvents.dataSnapshotLoad,\r\n      this.onDataSnapshotLoad.bind(this)\r\n    );\r\n    this.className = \"michaeldmoore-multistat-panel-\" + this.panel.id;\r\n  }\r\n\r\n  updateNamedValue(obj, names, value) {\r\n    let name = names.shift();\r\n    if (obj[name]) {\r\n      if (names.length) this.updateNamedValue(obj[name], names, value);\r\n      else obj[name] = Number(value);\r\n    }\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  onDataError(err) {\r\n    this.seriesList = [];\r\n    this.data = [];\r\n    this.displayStatusMessage(\r\n      \"Query failure, Status=\" + err.status + \", \" + err.statusText\r\n    );\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.metricNames = [\r\n      \"min\",\r\n      \"max\",\r\n      \"avg\",\r\n      \"current\",\r\n      \"total\",\r\n      \"name\",\r\n      \"first\",\r\n      \"delta\",\r\n      \"diff\",\r\n      \"range\",\r\n    ];\r\n    this.sortDirections = [\"none\", \"ascending\", \"descending\"];\r\n    this.aggregations = [\"all\", \"last\", \"first\", \"mean\", \"max\", \"min\", \"sum\"];\r\n    this.fontSizes = [\r\n      \"20%\",\r\n      \"30%\",\r\n      \"50%\",\r\n      \"70%\",\r\n      \"80%\",\r\n      \"100%\",\r\n      \"110%\",\r\n      \"120%\",\r\n      \"150%\",\r\n      \"170%\",\r\n      \"200%\",\r\n      \"250%\",\r\n      \"300%\",\r\n      \"350%\",\r\n      \"400%\",\r\n    ];\r\n    this.valuePositions = [\"bar base\", \"bar end\", \"top\"];\r\n    this.curveTypes = [\"Linear\", \"Monotone\", \"Cardinal\", \"Catmull-Rom\"];\r\n    this.matchTypes = [\"exact\", \"subset\", \"list\", \"reg-ex\"];\r\n    this.tooltipTypes = [\"light\", \"dark\"];\r\n    this.addEditorTab(\r\n      \"Columns\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/columns.html\",\r\n      2\r\n    );\r\n    this.addEditorTab(\r\n      \"Layout\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/layout.html\",\r\n      3\r\n    );\r\n    this.addEditorTab(\r\n      \"Grouping\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/grouping.html\",\r\n      4\r\n    );\r\n    this.addEditorTab(\r\n      \"Options\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/options.html\",\r\n      5\r\n    );\r\n    this.addEditorTab(\r\n      \"Lines-and-Limits\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/linesandlimits.html\",\r\n      6\r\n    );\r\n    this.addEditorTab(\r\n      \"Bar links\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/barlinks.html\",\r\n      7\r\n    );\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    this.cols = [];\r\n    // console.log('onDataReceived(' + JSON.stringify(data) + ')');\r\n    if (data.length == 0) {\r\n      this.displayStatusMessage(\"No data to show\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    } else if (data[0].type == \"table\" || data[0].columns) {\r\n      this.data = data[0];\r\n\r\n      for (let i = 0; i < this.data.columns.length; i++)\r\n        this.cols[i] = this.data.columns[i].text;\r\n      this.cols0 = [\"\"].concat(this.cols);\r\n\r\n      this.render();\r\n    } else {\r\n      this.displayStatusMessage(\"Multistat only supports Table datasets\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  onReorderValues(index, up) {\r\n    const Values = this.ctrl.panel.Values;\r\n    if (up) {\r\n      if (index) Values[index] = Values.splice(index - 1, 1, Values[index])[0];\r\n    } else {\r\n      if (index + 1 < Values.length)\r\n        Values[index] = Values.splice(index + 1, 1, Values[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderRecolorRules(index, up) {\r\n    const RecolorRules = this.ctrl.panel.RecolorRules;\r\n    if (up) {\r\n      if (index)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index - 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    } else {\r\n      if (index + 1 < RecolorRules.length)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index + 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderLinks(index, up) {\r\n    const Links = this.ctrl.panel.Links;\r\n    if (up) {\r\n      if (index) Links[index] = Links.splice(index - 1, 1, Links[index])[0];\r\n    } else {\r\n      if (index + 1 < Links.length)\r\n        Links[index] = Links.splice(index + 1, 1, Links[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  buildDateHtml(dateTimeCol) {\r\n    var $title = this.elem.closest(\".panel-container\").find(\".panel-title\");\r\n    var $maxDate = $title.find(\"span.michaeldmoore-multistat-panel-maxDate\");\r\n\r\n    if ($maxDate.length == 0)\r\n      $maxDate = $title\r\n        .append('<span class=\"michaeldmoore-multistat-panel-maxDate\"/>')\r\n        .children()\r\n        .last();\r\n\r\n    if (dateTimeCol != -1 && this.panel.ShowDate) {\r\n      var maxDate = this.rows[0][dateTimeCol];\r\n\r\n      for (let i = 1; i < this.rows.length; i++) {\r\n        if (maxDate < this.rows[i][dateTimeCol])\r\n          maxDate = this.rows[i][dateTimeCol];\r\n      }\r\n\r\n      var dd = moment(maxDate).add(this.panel.TZOffsetHours, \"h\");\r\n\r\n      if (this.panel.DateFormat.toUpperCase() == \"ELAPSED\")\r\n        $maxDate.text(dd.fromNow()).show();\r\n      else $maxDate.text(dd.format(this.panel.DateFormat)).show();\r\n    } else $maxDate.hide();\r\n  }\r\n\r\n  displayStatusMessage(msg) {\r\n    this.elem.html(\r\n      \"<div class='michaeldmoore-multistat-panel-statusmessage'>\" +\r\n      msg +\r\n      \"</div>\"\r\n    );\r\n  }\r\n\r\n  onRender() {\r\n    if (this.data != null && this.data.rows && this.data.rows.length) {\r\n      var cols = this.cols;\r\n      var dateTimeCol = -1;\r\n      var labelCol = -1;\r\n      var sortCol = 0;\r\n      var groupCol = -1;\r\n      var recolorCol = -1;\r\n\r\n      cols.forEach((colName, i) => {\r\n        if (colName == this.panel.DateTimeColName) dateTimeCol = i;\r\n        if (colName == this.panel.LabelColName) labelCol = i;\r\n        if (colName == this.panel.SortColName) sortCol = i;\r\n        if (colName == this.panel.GroupColName) groupCol = i;\r\n        if (colName == this.panel.RecolorColName) recolorCol = i;\r\n\r\n        this.panel.Values.forEach((Value) => {\r\n          if (colName == Value.Name) {\r\n            Value.Col = i;\r\n          }\r\n        });\r\n      });\r\n\r\n      var SelectedValues = this.panel.Values.filter(\r\n        (value) => value.Col >= 0 && value.Selected\r\n      );\r\n\r\n      //console.log('onRender: this.data.rows\\n'+JSON.stringify(this.data.rows));\r\n\r\n      const groupedLabelFunc = function (obj) {\r\n        if (groupCol != -1) return obj[groupCol] + \":\" + obj[labelCol];\r\n        else return obj[labelCol];\r\n      };\r\n\r\n      if (this.panel.LabelNameFilter.length > 0 && labelCol != -1) {\r\n        var regex = new RegExp(this.panel.LabelNameFilter, \"\");\r\n        this.matchingRows = [];\r\n        for (let i = 0; i < this.data.rows.length; i++) {\r\n          var dd = this.data.rows[i];\r\n          var label = dd[labelCol];\r\n          if (label.match(regex) != null) this.matchingRows.push(dd);\r\n        }\r\n\r\n        if (this.matchingRows.length == 0) {\r\n          this.displayStatusMessage(\r\n            \"No data.  Regex filter '\" +\r\n            this.panel.LabelNameFilter +\r\n            \"' eliminated all \" +\r\n            this.data.rows.length +\r\n            \" rows from current query\"\r\n          );\r\n          return;\r\n        }\r\n      } else this.matchingRows = this.data.rows;\r\n\r\n      if (\r\n        this.panel.Aggregate != \"all\" &&\r\n        labelCol != -1 &&\r\n        SelectedValues.length > 0\r\n      ) {\r\n        var oo = [];\r\n        this.rows = [];\r\n        switch (this.panel.Aggregate) {\r\n          case \"first\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[0];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"last\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[d.length - 1];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"sum\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.sum(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"mean\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.mean(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"mean\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                dd[valueCol] = d3.mean(d, function (d) {\r\n                  return d[valueCol];\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"max\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.max(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"min\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.min(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n        }\r\n      } else {\r\n        this.rows = this.matchingRows;\r\n      }\r\n\r\n      //console.log('after aggregation('+this.panel.Aggregate+') this.rows:\\n'+JSON.stringify(this.rows));\r\n\r\n      var groupNameOffset = this.panel.ShowGroupLabels\r\n        ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n        : 0;\r\n\r\n      if (groupCol >= 0) {\r\n        this.groupedRows = d3\r\n          .nest()\r\n          .key(function (d) {\r\n            return d[groupCol];\r\n          })\r\n          .entries(this.rows);\r\n\r\n        if (this.panel.GroupNameFilter.length > 0) {\r\n          var regexGroupRows = new RegExp(this.panel.GroupNameFilter, \"\");\r\n          let matchingGroups = [];\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let groupName = this.groupedRows[i].key;\r\n            if (groupName.match(regexGroupRows) != null)\r\n              matchingGroups.push(this.groupedRows[i]);\r\n          }\r\n\r\n          if (matchingGroups.length > 0) this.groupedRows = matchingGroups;\r\n          else {\r\n            this.displayStatusMessage(\r\n              \"No groups.  Group Regex filter '\" +\r\n              this.panel.GroupNameFilter +\r\n              \"' eliminated all \" +\r\n              this.groupedRows.length +\r\n              \" groups from current query\"\r\n            );\r\n            return;\r\n          }\r\n        }\r\n\r\n        let groupSortString = this.panel.GroupSortString;\r\n\r\n        this.groupedRows.sort(function (a, b) {\r\n          var aPos = groupSortString.search(a.key);\r\n          var bPos = groupSortString.search(b.key);\r\n\r\n          if (aPos == bPos) return a.key.localeCompare(b.key);\r\n          else if (aPos == -1) return 1;\r\n          else if (bPos == -1) return -1;\r\n          else return aPos - bPos;\r\n        });\r\n      } else {\r\n        this.groupedRows = null;\r\n      }\r\n\r\n      this.elem.html(\r\n        \"<div class='\" +\r\n        this.className +\r\n        \"' style='display: flex; flex-direction: column; height:100%; width:100%'>\" +\r\n        \"</div>\"\r\n      );\r\n\r\n      var $container = this.elem.find(\"div\");\r\n\r\n      this.svg = d3\r\n        .select(\".\" + this.className)\r\n        .append(\"svg\")\r\n        .attr(\"height\", \"100%\");\r\n\r\n      if (this.panel.Legend) {\r\n        var $legend = $container\r\n          .append(\r\n            \"<div><p></p><ul class='michaeldmoore-multistat-panel-legend'></ul></div>\"\r\n          )\r\n          .find(\"ul\");\r\n\r\n        const legendValues = this.panel.Values.filter(\r\n          (value) => value.Col >= 0\r\n        );\r\n        legendValues.forEach((value, i) => {\r\n          ///////////////////////////////////////////////////////////////////////////////\r\n          // Be careful with this - the toggling/selection logic is quite complicated. //\r\n          ///////////////////////////////////////////////////////////////////////////////\r\n          let deselectedClassName = value.Selected\r\n            ? \"\"\r\n            : \" class='michaeldmoore-multistat-panel-legend-deselected'\";\r\n          $legend\r\n            .append(\"<li\" + deselectedClassName + \">\" + value.Name + \"</li>\")\r\n            .children()\r\n            .last()\r\n            .css(\"background-color\", value.HighBarColor)\r\n            .css(\"color\", this.panel.ValueColor)\r\n            .click(function () {\r\n              if (window.event.ctrlKey) {\r\n                // toggle this item only\r\n                value.Selected = !value.Selected;\r\n              } else {\r\n                if (!value.Selected || SelectedValues.length != 1) {\r\n                  // deselect everything\r\n                  legendValues.forEach((v) => (v.Selected = false));\r\n                  // and re-select this one;\r\n                  value.Selected = true;\r\n                } else {\r\n                  legendValues.forEach((v) => (v.Selected = true));\r\n                }\r\n              }\r\n              // force a re-render\r\n              CTRL.$scope.$apply(() => {\r\n                CTRL.render();\r\n              });\r\n            });\r\n        });\r\n      }\r\n\r\n      var h = $container.find(\"svg\").height();\r\n      var w = $container.width() - 15;\r\n\r\n      this.buildDateHtml(dateTimeCol);\r\n\r\n      var labelMargin =\r\n        $.isNumeric(this.panel.LabelMargin) && this.panel.LabelMargin >= 0\r\n          ? this.panel.LabelMargin\r\n          : null;\r\n      var lowSideMargin =\r\n        this.panel.LowSideMargin >= 0 ? this.panel.LowSideMargin : 0;\r\n      var highSideMargin =\r\n        this.panel.HighSideMargin >= 0 ? this.panel.HighSideMargin : 0;\r\n\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.highflash\")\r\n        .interrupt();\r\n\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.lowflash\")\r\n        .interrupt();\r\n\r\n      var id = this.panel.id;\r\n      var barPadding = this.panel.BarPadding;\r\n      var multiBarPadding = this.panel.MultiBarPadding;\r\n      var baseLineValue = this.panel.BaseLineValue;\r\n      var minLineValue = this.panel.MinLineValue;\r\n      var maxLineValue = this.panel.MaxLineValue;\r\n      var highLimitValue = this.panel.HighLimitValue;\r\n      var HighLimitBarColor = this.panel.HighLimitBarColor;\r\n      var HighLimitBarFlashColor = this.panel.HighLimitBarFlashColor;\r\n      var HighLimitBarFlashTimeout = this.panel.HighLimitBarFlashTimeout;\r\n      var recolorHighLimitBar = this.panel.RecolorHighLimitBar;\r\n      var Links = this.panel.Links;\r\n      var lowLimitValue = this.panel.LowLimitValue;\r\n      var LowLimitBarColor = this.panel.LowLimitBarColor;\r\n      var LowLimitBarFlashColor = this.panel.LowLimitBarFlashColor;\r\n      var LowLimitBarFlashTimeout = this.panel.LowLimitBarFlashTimeout;\r\n      var RecolorRules = this.panel.RecolorRules;\r\n      var recolorLowLimitBar = this.panel.RecolorLowLimitBar;\r\n      var flashHighLimitBar = this.panel.FlashHighLimitBar;\r\n      var flashLowLimitBar = this.panel.FlashLowLimitBar;\r\n      var tooltipType = this.panel.ToolTipType;\r\n      var tooltipFontSize = this.panel.ToolTipFontSize;\r\n      var DateTimeColName = this.panel.DateTimeColName;\r\n      var TooltipDateFormat = this.panel.TooltipDateFormat;\r\n      var ValueColName = this.panel.ValueColName;\r\n      var ValueDecimals = this.panel.ValueDecimals;\r\n      var OddRowColor = this.panel.OddRowColor;\r\n      var EvenRowColor = this.panel.EvenRowColor;\r\n      var OutlineColor = this.panel.OutlineColor;\r\n      var TZOffsetHours = this.panel.TZOffsetHours;\r\n      var GroupCols = this.panel.GroupCols;\r\n      var GroupGap = this.panel.GroupGap;\r\n      var ScaleFactor = Number(this.panel.ScaleFactor);\r\n      var ValuePosition = this.panel.ValuePosition;\r\n\r\n      var panelID = \"michaeldmoore-multistat-panel-\" + id;\r\n      var tooltipDivID = \"michaeldmoore-multistat-panel-tooltip-\" + id;\r\n\r\n      var minValue =\r\n        SelectedValues.length &&\r\n        d3.min(this.rows, function (d) {\r\n          let min = Number(d[SelectedValues[0].Col]);\r\n          for (var i = 1; i < SelectedValues.length; i++) {\r\n            let col = SelectedValues[i].Col;\r\n            let val = Number(d[col]);\r\n            if (min > val) min = val;\r\n          }\r\n          return min * ScaleFactor;\r\n        });\r\n      if ($.isNumeric(minLineValue) == false) minLineValue = minValue;\r\n\r\n      var maxValue =\r\n        SelectedValues.length &&\r\n        d3.max(this.rows, function (d) {\r\n          let max = Number(d[SelectedValues[0].Col]);\r\n          for (var i = 1; i < SelectedValues.length; i++) {\r\n            let col = SelectedValues[i].Col;\r\n            let val = Number(d[col]);\r\n            if (max < val) max = val;\r\n          }\r\n          return max * ScaleFactor;\r\n        });\r\n      if ($.isNumeric(maxLineValue) == false) maxLineValue = maxValue;\r\n\r\n      if ($.isNumeric(baseLineValue) == false) baseLineValue = 0;\r\n\r\n      if (minLineValue > baseLineValue) minLineValue = baseLineValue;\r\n\r\n      if ($.isNumeric(lowLimitValue) && minLineValue > lowLimitValue)\r\n        minLineValue = lowLimitValue;\r\n\r\n      if (maxLineValue < baseLineValue) maxLineValue = baseLineValue;\r\n\r\n      if ($.isNumeric(highLimitValue) && maxLineValue < highLimitValue)\r\n        maxLineValue = highLimitValue;\r\n\r\n      $(\"#\" + tooltipDivID).remove();\r\n\r\n      var sortData = function (data, sortDirection) {\r\n        if (sortDirection != \"none\") {\r\n          var ascending = sortDirection == \"ascending\";\r\n          data.sort(function (x, y) {\r\n            let xx = x[sortCol];\r\n            let yy = y[sortCol];\r\n\r\n            if ($.isNumeric(xx) && $.isNumeric(yy))\r\n              return ascending ? xx - yy : yy - xx;\r\n            else return ascending ? xx.localeCompare(yy) : yy.localeCompare(xx);\r\n          });\r\n        }\r\n      };\r\n\r\n      var translateValues = function (s, d) {\r\n        // lookup column index corresponding to the substitution tokens and replace with this bar's value\r\n        let s1 = s;\r\n        const re = /\\{[^}]+\\}/g;\r\n        let g = re.exec(s);\r\n        while (g) {\r\n          for (var i = 0; i < cols.length; i++) {\r\n            if (g == \"{\" + cols[i] + \"}\") {\r\n              s1 = s1.replace(g, d[i]);\r\n              break;\r\n            }\r\n          }\r\n          g = re.exec(s);\r\n        }\r\n        return s1;\r\n      };\r\n\r\n      var getTooltipContent = function (d) {\r\n        let html = \"\";\r\n        if (tooltipType) {\r\n          html +=\r\n            \"<table style='font-size:\" +\r\n            tooltipFontSize.replace(\"%\", \"\") / 100 +\r\n            \"em'>\";\r\n          if (labelCol != -1)\r\n            html +=\r\n              \"<thead><tr class='michaeldmoore-multistat-panel-tooltip-title'><th colspan='2' align='center'>\" +\r\n              d[labelCol] +\r\n              \"</th></tr></thead>\";\r\n          if (Array.isArray(d)) {\r\n            html += \"<tbody>\";\r\n            for (var i = 0; i < d.length; i++) {\r\n              if (i != labelCol) {\r\n                var cc = cols[i];\r\n                var dd = d[i];\r\n\r\n                if (cc == DateTimeColName)\r\n                  dd = moment(dd)\r\n                    .add(TZOffsetHours, \"h\")\r\n                    .format(TooltipDateFormat);\r\n                else if (cc == ValueColName && $.isNumeric(dd))\r\n                  dd = Number(dd).toFixed(ValueDecimals);\r\n\r\n                html += \"<tr><td>\" + cc + \"</td><td>\" + dd + \"</td></tr>\";\r\n              }\r\n            }\r\n            html += \"</tbody></table>\";\r\n          }\r\n        }\r\n\r\n        if (Links.length) {\r\n          html += \"<table><tbody>\";\r\n          Links.forEach((l) => {\r\n            html +=\r\n              \"<tr><td align='right'><i class='fa fa-link'></i></td><td><a href='\" +\r\n              translateValues(l.url, d) +\r\n              (l.newtab ? \"' target='_blank'\" : \"'\") +\r\n              \">\" +\r\n              translateValues(l.name, d) +\r\n              \"</a></td></tr>\";\r\n          });\r\n          html += \"</tbody></table>\";\r\n        }\r\n        return html;\r\n      };\r\n\r\n      var isInTooltip = false;\r\n      var $panel;\r\n      var $panelContent;\r\n      var panelContent;\r\n      var tooltipShow = function (d) {\r\n        if ($(\"#\" + tooltipDivID).length == 0) {\r\n          $panel = $(\".\" + panelID);\r\n          //          $panelContent = this.elem.closest(\".panel-content\");\r\n          $panelContent = $panel.parent().parent().parent().parent();\r\n          panelContent = d3.selectAll($panelContent);\r\n          panelContent\r\n            .append(\"div\")\r\n            .attr(\"id\", tooltipDivID)\r\n            .style(\"opacity\", 0);\r\n        }\r\n\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n        tooltipDiv\r\n          .classed(\r\n            \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n            true\r\n          )\r\n          .html(getTooltipContent(d))\r\n          .on(\"mouseover\", function () {\r\n            if (!isInTooltip) {\r\n              isInTooltip = true;\r\n              tooltipHide(true);\r\n            }\r\n          })\r\n          .on(\"mouseleave\", function () {\r\n            isInTooltip = false;\r\n            tooltipHide(false);\r\n          });\r\n\r\n        const $tooltipDiv = $(\"#\" + tooltipDivID);\r\n        const tooltipWidth = $tooltipDiv.width();\r\n        const tooltipHeight = $tooltipDiv.height();\r\n        const minTop = 28;\r\n\r\n        const mouseCoordinates = d3.mouse(panelContent.node());\r\n        let Left = mouseCoordinates[0] - tooltipWidth / 2;\r\n        let Top = mouseCoordinates[1] + minTop - tooltipHeight / 2;\r\n\r\n        let panelWidth = $panel.width();\r\n        let panelHeight = $panel.height();\r\n\r\n        if (Left < 0) Left = 0;\r\n        else if (Left > panelWidth - tooltipWidth)\r\n          Left = panelWidth - tooltipWidth;\r\n\r\n        if (Top < 0) Top = 0;\r\n        else if (Top > panelHeight + minTop - tooltipHeight)\r\n          Top = panelHeight + minTop - tooltipHeight;\r\n\r\n        tooltipDiv\r\n          .transition()\r\n          .duration(200)\r\n          .style(\"opacity\", 1.0)\r\n          .style(\"left\", Left + \"px\")\r\n          .style(\"top\", Top + \"px\");\r\n      };\r\n\r\n      var tooltipHide = function (cancel) {\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n\r\n        if (cancel) {\r\n          //console.log(\"cancelling tooltip hide\");\r\n          tooltipDiv.transition().style(\"opacity\", 1.0);\r\n        } else {\r\n          tooltipDiv\r\n            .transition()\r\n            .duration(2000)\r\n            .style(\"opacity\", 0)\r\n            .on(\"end\", function () {\r\n              d3.select(this)\r\n                .html(\"\")\r\n                .classed(\r\n                  \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n                  false\r\n                );\r\n            });\r\n        }\r\n      };\r\n\r\n      var scaleAndClipValue = function (d) {\r\n        var val = d * ScaleFactor;\r\n        if (val > maxLineValue) val = maxLineValue;\r\n        if (val < minLineValue) val = minLineValue;\r\n\r\n        return val;\r\n      };\r\n\r\n      var getBarColor = function (d, valueDef) {\r\n        if (recolorCol != -1) {\r\n          let recolorString = d[recolorCol];\r\n\r\n          if (RecolorRules.length) {\r\n            if (recolorString) {\r\n              let recolorRule = RecolorRules.find((r) => {\r\n                if (r.pattern) {\r\n                  switch (r.matchType) {\r\n                    case \"reg-ex\":\r\n                      let re = RegExp(r.pattern);\r\n                      return re.test(recolorString);\r\n\r\n                    case \"list\":\r\n                      return r.pattern.indexOf(recolorString) != -1;\r\n\r\n                    case \"subset\":\r\n                      return recolorString.indexOf(r.pattern) != -1;\r\n\r\n                    default:\r\n                      return r.pattern === recolorString;\r\n                  }\r\n                }\r\n                return false;\r\n              });\r\n\r\n              if (recolorRule) return recolorRule.color;\r\n            }\r\n          }\r\n\r\n          // no matching rule found, check if recolorString is a valid color\r\n          const s = new Option().style;\r\n          s.color = recolorString;\r\n          if (s.color !== \"\") return recolorString;\r\n        }\r\n\r\n        let value = d[valueDef.Col] * ScaleFactor;\r\n        if (recolorHighLimitBar && value > highLimitValue)\r\n          return HighLimitBarColor;\r\n        if (recolorLowLimitBar && value < lowLimitValue)\r\n          return LowLimitBarColor;\r\n\r\n        // All else fails, let's use the standard colors for this bar...\r\n        return value > baseLineValue\r\n          ? valueDef.HighBarColor\r\n          : valueDef.LowBarColor;\r\n      };\r\n\r\n      if (this.panel.Horizontal) {\r\n        var plotGroupHorizontal = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n                    .attr(\"width\", w)\r\n                    .attr(\"height\", dh)\r\n                    .attr(\"x\", left)\r\n                    .attr(\"y\", hh)\r\n                    .attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n                    .attr(\"width\", w)\r\n                    .attr(\"height\", dh)\r\n                    .attr(\"x\", left)\r\n                    .attr(\"y\", hh)\r\n                    .attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g1 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueWidth = 0;\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", left + w)\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"end\")\r\n                  .attr(\"dominant-baseline\", \"central\")\r\n                  .each(function (d, i) {\r\n                    var thisWidth = this.getComputedTextLength();\r\n                    maxValueWidth = d3.max([maxValueWidth, thisWidth]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            w -= maxValueWidth;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelWidth = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g1.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                if (SelectedValues.length) {\r\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\r\n                  let maxvalue = minvalue;\r\n                  SelectedValues.forEach((v) => {\r\n                    let value = d[v.Col] * ScaleFactor;\r\n                    if (minvalue > value) minvalue = value;\r\n                    if (maxvalue < value) maxvalue = value;\r\n                  });\r\n\r\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\r\n                    return panel.OutOfRangeLabelColor;\r\n                }\r\n                return panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var y = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var x = left + a / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisWidth = a;\r\n                maxLabelWidth = d3.max([maxLabelWidth, thisWidth]);\r\n              });\r\n\r\n            if ($.isNumeric(labelMargin)) {\r\n              left += labelMargin;\r\n              w -= labelMargin;\r\n            } else {\r\n              left += maxLabelWidth;\r\n              w -= maxLabelWidth;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([minLineValue, maxLineValue])\r\n            .range([left + labelMargin, left + w])\r\n            .nice();\r\n\r\n          function vLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"y1\", hh + highSideMargin)\r\n              .attr(\"x1\", valueScale(value))\r\n              .attr(\"y2\", hh + dh - lowSideMargin)\r\n              .attr(\"x2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            vLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            vLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            vLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            vLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            vLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"width\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(val) - valueScale(baseLineValue)\r\n                    );\r\n                  })\r\n                  .attr(\"height\", height)\r\n                  .attr(\"x\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (height + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            var bw = labelScale.step();\r\n\r\n            if (panel.LineWidth) {\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneY;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              SelectedValues.forEach((value, index) => {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                if (panel.LineWidth) {\r\n                  var points = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    var d = data[i];\r\n                    var y =\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index;\r\n                    var x = valueScale(d[value.Col] * ScaleFactor);\r\n                    points.push({\r\n                      x,\r\n                      y,\r\n                    });\r\n                  }\r\n\r\n                  svg\r\n                    .append(\"path\")\r\n                    .attr(\"d\", lineFunction(points))\r\n                    .attr(\"stroke\", panel.LineColor)\r\n                    .attr(\"stroke-width\", panel.LineWidth)\r\n                    .attr(\"fill\", \"none\");\r\n                }\r\n\r\n                if (panel.DotSize) {\r\n                  g1.append(\"circle\")\r\n                    .attr(\"r\", panel.DotSize / 2.0)\r\n                    .attr(\"fill\", panel.DotColor)\r\n                    .attr(\"cy\", function (d) {\r\n                      return (\r\n                        labelScale(d[labelCol]) +\r\n                        width / 2 +\r\n                        (width + gap) * index\r\n                      );\r\n                    })\r\n                    .attr(\"cx\", function (d) {\r\n                      return valueScale(d[value.Col] * ScaleFactor);\r\n                    });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      // \"bar end\"\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val) + (val > baseLineValue);\r\n                    }\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"start\"\r\n                        : \"end\";\r\n                    // \"bar end\"\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"end\"\r\n                        : \"start\";\r\n                  })\r\n                  .attr(\"dominant-baseline\", \"central\");\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          // Add High Side Value Axis (X)\r\n          if (highSideMargin > 0) {\r\n            var ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(1,\" + (hh + highSideMargin) + \")\")\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisTop(valueScale));\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n\r\n          // Add Low Side Value Axis (X)\r\n          if (lowSideMargin > 0) {\r\n            var ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(0,\" + (hh + dh - lowSideMargin) + \")\"\r\n              )\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisBottom(valueScale));\r\n\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n        };\r\n\r\n        if (this.groupedRows != null) {\r\n          var gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          var dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each row of groups...\r\n          var pointsPerRow = [];\r\n          for (let i = 0; i < this.groupedRows.length / gcols; i++)\r\n            pointsPerRow.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let rr = Math.floor(i / gcols);\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerRow[rr] < u) pointsPerRow[rr] = u;\r\n          }\r\n\r\n          var totalPoints = 0;\r\n          for (let i = 0; i < pointsPerRow.length; i++)\r\n            totalPoints += pointsPerRow[i];\r\n\r\n          var rowOverheadHeight =\r\n            groupNameOffset +\r\n            this.panel.LowSideMargin +\r\n            this.panel.HighSideMargin;\r\n          var rowHeight =\r\n            (h - pointsPerRow.length * rowOverheadHeight) / totalPoints;\r\n\r\n          var numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          var hh = 0;\r\n          for (var rr = 0; rr < numRows; rr++) {\r\n            var nn = pointsPerRow[rr];\r\n            var dh = rowOverheadHeight + nn * rowHeight;\r\n            hh += dh;\r\n            for (var cc = 0; cc < gcols; cc++) {\r\n              var ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupHorizontal(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  cc * dw,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          plotGroupHorizontal(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      } else {\r\n        var plotGroupVertical = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n      .attr(\"width\", w)\r\n      .attr(\"height\", dh)\r\n      .attr(\"x\", left)\r\n      .attr(\"y\", hh)\r\n      .attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n                    .attr(\"width\", w)\r\n                    .attr(\"height\", dh)\r\n                    .attr(\"x\", left)\r\n                    .attr(\"y\", hh)\r\n                    .attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .range([left + lowSideMargin, left + w - highSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .range([left + lowSideMargin, left + w - highSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d, i) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g2 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueHeight = 0;\r\n\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", hh)\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", \"text-before-edge\")\r\n                  .each(function (d, i) {\r\n                    var thisHeight = this.getBBox().height;\r\n                    maxValueHeight = d3.max([maxValueHeight, thisHeight]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            hh += maxValueHeight;\r\n            dh -= maxValueHeight;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelHeight = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g2.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                if (SelectedValues.length) {\r\n                  // This should check ALL the SelectedValues, bot just [0]///////////////////////////////////////////////\r\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\r\n                  let maxvalue = minvalue;\r\n\r\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\r\n                    return panel.OutOfRangeLabelColor;\r\n                }\r\n                return panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var x = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var y = hh + dh - b / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisHeight = b;\r\n                maxLabelHeight = d3.max([maxLabelHeight, thisHeight]);\r\n              });\r\n            if ($.isNumeric(labelMargin)) {\r\n              dh -= labelMargin;\r\n            } else {\r\n              dh -= maxLabelHeight;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([maxLineValue, minLineValue])\r\n            .range([hh, hh + dh])\r\n            .nice();\r\n\r\n          function hLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"x1\", left + lowSideMargin)\r\n              .attr(\"y1\", valueScale(value))\r\n              .attr(\"x2\", left + w - highSideMargin)\r\n              .attr(\"y2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            hLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            hLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            hLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            hLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            hLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"height\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(baseLineValue) - valueScale(val)\r\n                    );\r\n                  })\r\n                  .attr(\"width\", width)\r\n                  .attr(\"y\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (width + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            var bw = labelScale.step();\r\n\r\n            if (panel.LineWidth) {\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneX;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              SelectedValues.forEach((value, index) => {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                if (panel.LineWidth) {\r\n                  var points = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    var d = data[i];\r\n                    var x =\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index;\r\n                    var y = valueScale(d[value.Col] * ScaleFactor);\r\n                    points.push({\r\n                      x,\r\n                      y,\r\n                    });\r\n                  }\r\n\r\n                  svg\r\n                    .append(\"path\")\r\n                    .attr(\"d\", lineFunction(points))\r\n                    .attr(\"stroke\", panel.LineColor)\r\n                    .attr(\"stroke-width\", panel.LineWidth)\r\n                    .attr(\"fill\", \"none\");\r\n                }\r\n\r\n                if (panel.DotSize) {\r\n                  g2.append(\"circle\")\r\n                    .attr(\"r\", panel.DotSize / 2.0)\r\n                    .attr(\"fill\", panel.DotColor)\r\n                    .attr(\"cx\", function (d) {\r\n                      return (\r\n                        labelScale(d[labelCol]) +\r\n                        width / 2 +\r\n                        (width + gap) * index\r\n                      );\r\n                    })\r\n                    .attr(\"cy\", function (d) {\r\n                      return valueScale(d[value.Col] * ScaleFactor);\r\n                    });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val);\r\n                    }\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-after-edge\"\r\n                        : \"text-before-edge\";\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-before-edge\"\r\n                        : \"text-after-edge\";\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          if (lowSideMargin > 0) {\r\n            let ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(\" + (left + lowSideMargin) + \", 0)\")\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisLeft(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n\r\n          if (highSideMargin > 0) {\r\n            let ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(\" + (left + w - highSideMargin) + \", 0)\"\r\n              )\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisRight(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n        };\r\n\r\n        let groupNameOffset = this.panel.ShowGroupLabels\r\n          ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n          : 0;\r\n\r\n        if (this.groupedRows != null) {\r\n          let gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          let dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each column of groups...\r\n          var pointsPerCol = [];\r\n          for (let i = 0; i < gcols; i++) pointsPerCol.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let cc = i % gcols;\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerCol[cc] < u) pointsPerCol[cc] = u;\r\n          }\r\n\r\n          let totalPoints = 0;\r\n          for (let i = 0; i < pointsPerCol.length; i++)\r\n            totalPoints += pointsPerCol[i];\r\n\r\n          var colOverheadWidth =\r\n            this.panel.LowSideMargin + this.panel.HighSideMargin;\r\n          var colWidth =\r\n            (w - pointsPerCol.length * colOverheadWidth) / totalPoints;\r\n\r\n          let numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          let dh = h / numRows;\r\n          let hh = dh;\r\n          for (let rr = 0; rr < numRows; rr++) {\r\n            let ww = 0;\r\n            for (let cc = 0; cc < gcols; cc++) {\r\n              let nn = pointsPerCol[cc];\r\n\r\n              let ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupVertical(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  ww,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n                ww += dw;\r\n              }\r\n            }\r\n            hh += dh;\r\n          }\r\n        } else {\r\n          plotGroupVertical(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      }\r\n\r\n      var pulseHigh = function (svg) {\r\n        var highFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.highflash\"\r\n        );\r\n\r\n        if (\r\n          $.isNumeric(HighLimitBarFlashTimeout) &&\r\n          highFlashRects._groups.length > 0 &&\r\n          highFlashRects._groups[0].length > 0\r\n        ) {\r\n          highFlashRects.transition().on(\"start\", function highRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", HighLimitBarFlashColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", HighLimitBarColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", highRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      var pulseLow = function (svg) {\r\n        var lowFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.lowflash\"\r\n        );\r\n        if (\r\n          $.isNumeric(LowLimitBarFlashTimeout) &&\r\n          lowFlashRects._groups.length > 0 &&\r\n          lowFlashRects._groups[0].length > 0\r\n        ) {\r\n          lowFlashRects.transition().on(\"start\", function lowRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", LowLimitBarFlashColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", LowLimitBarColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", lowRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      pulseHigh(this.svg);\r\n      pulseLow(this.svg);\r\n    }\r\n\r\n    /*\r\n    var drag = d3.drag()\r\n      .on(\"drag\", function () {\r\n        d3.select(this).attr(\"cx\", d3.event.x).attr(\"cy\", d3.event.y);\r\n      });\r\n\r\n    if (!this.panel.Legend) {\r\n      this.svg\r\n        .append(\"rect\")\r\n        .attr(\"x\", 10)\r\n        .attr(\"y\", 20)\r\n        .attr(\"width\", 100)\r\n        .attr(\"height\", 200)\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"stroke\", \"yellow\")\r\n        .call(this.drag);\r\n    }\r\n*/\r\n\r\n    this.ctrl.renderingCompleted();\r\n  }\r\n\r\n  onConfigChanged() {\r\n    this.refresh();\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.ctrl = ctrl;\r\n    this.elem = elem;\r\n\r\n    // for backward compatability (grafana 6.6.0 and earlier)\r\n    var panelContentElem = elem.find(\".panel-content\");\r\n    if (panelContentElem.length) this.elem = panelContentElem;\r\n\r\n    CTRL = ctrl;\r\n  }\r\n}\r\n\r\nvar CTRL;\r\n\r\nMultistatPanelCtrl.templateUrl = \"module.html\";\r\n\r\nexport { MultistatPanelCtrl as PanelCtrl };\r\n"]}