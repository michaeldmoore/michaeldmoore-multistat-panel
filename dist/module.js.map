{"version":3,"sources":["../src/module.js"],"names":["isNumber","n","isNaN","parseFloat","isFinite","MetricsPanelCtrl","$","_","moment","d3","getTemplateSrv","PanelEvents","templateSrv","MultistatPanelCtrl","$scope","$injector","panelDefaults","timeFrom","timeShift","BarPadding","MultiBarPadding","BaseLineColor","BaseLineWidth","BaseLineValue","DateTimeColName","DateFormat","TooltipDateFormat","FlashHighLimitBar","FlashLowLimitBar","HighAxisColor","HighAxisWidth","HighBarColor","RecolorColName","HighLimitBarColor","HighLimitBarFlashColor","HighLimitBarFlashTimeout","HighLimitLineColor","HighLimitValue","HighLmitLineWidth","HighSideMargin","Horizontal","LabelColName","LabelNameFilter","LabelColor","OutOfRangeLabelColor","GroupLabelColor","LabelFontSize","GroupLabelFontSize","GroupGap","LabelMargin","Legend","Links","LowAxisColor","LowAxisWidth","LowBarColor","LowLimitBarColor","LowLimitBarFlashColor","LowLimitBarFlashTimeout","LowLimitLineColor","LowLimitValue","LowLmitLineWidth","LowSideMargin","MaxLineColor","MaxLineWidth","MaxLineValue","MinLineColor","MinLineWidth","MinLineValue","RecolorHighLimitBar","RecolorLowLimitBar","RecolorRules","ShowBaseLine","ShowDate","Aggregate","ShowHighLimitLine","ShowLabels","ShowGroupLabels","ShowLeftAxis","ShowLowLimitLine","ShowMaxLine","ShowMinLine","ShowRightAxis","ShowValues","SortColName","SortDirection","TZOffsetHours","ToolTipType","ToolTipFontSize","ValueColName","Values","ValueDecimals","ValueColor","ValueFontSize","OddRowColor","EvenRowColor","OutlineColor","GroupSortString","GroupCols","GroupNameFilter","ScaleFactor","ValuePosition","LableAngle","ShowBars","ShowLines","LineWidth","LineColor","DotSize","DotColor","CurveType","defaults","panel","length","Name","Selected","dashboardVariables","getVariables","forEach","v","current","push","name","value","console","log","JSON","stringify","events","on","dataReceived","onDataReceived","bind","dataError","onDataError","render","onRender","dataSnapshotLoad","onDataSnapshotLoad","editModeInitialized","onInitEditMode","className","id","obj","names","shift","updateNamedValue","Number","snapshotData","err","seriesList","data","displayStatusMessage","status","statusText","metricNames","sortDirections","aggregations","fontSizes","valuePositions","curveTypes","matchTypes","tooltipTypes","addEditorTab","cols","rows","columns","i","text","cols0","concat","letters","split","color","Math","floor","random","hexcolor","match","exec","r","parseInt","g","b","brightness","contrastingColor","r1","g1","b1","ctrl","randomColor","index","up","splice","dateTimeCol","$title","elem","closest","find","$maxDate","append","children","last","maxDate","dd","add","toUpperCase","fromNow","show","format","hide","msg","html","labelCol","sortCol","groupCol","recolorCol","range","timeSrv","timeRangeForUrl","from","to","colName","GroupColName","Value","Col","SelectedValues","filter","groupedLabelFunc","regex","RegExp","matchingRows","label","oo","nest","key","rollup","d","entries","x","Object","values","assign","sum","Array","mean","valueCol","max","min","groupNameOffset","replace","groupedRows","regexGroupRows","matchingGroups","groupName","groupSortString","sort","a","aPos","search","bPos","localeCompare","$container","svg","select","attr","$legend","legendValues","deselectedClassName","css","getContrastingColor","click","window","event","ctrlKey","CTRL","$apply","h","height","w","width","buildDateHtml","labelMargin","lowSideMargin","highSideMargin","selectAll","interrupt","barPadding","multiBarPadding","baseLineValue","minLineValue","maxLineValue","highLimitValue","recolorHighLimitBar","lowLimitValue","recolorLowLimitBar","flashHighLimitBar","flashLowLimitBar","tooltipType","tooltipFontSize","panelID","tooltipDivID","minValue","col","val","maxValue","remove","sortData","sortDirection","ascending","y","xx","yy","translateValues","s","s1","re","j","dv","getTooltipContent","isArray","cc","toFixed","l","url","newtab","isInTooltip","$panel","$panelContent","panelContent","tooltipShow","parent","style","tooltipDiv","tooltipHtml","classed","tooltipHide","$tooltipDiv","tooltipWidth","tooltipHeight","minTop","mouseCoordinates","mouse","node","Left","Top","panelWidth","panelHeight","transition","duration","cancel","scaleAndClipValue","getBarColor","valueDef","recolorString","recolorRule","pattern","matchType","test","indexOf","Option","getValueColor","barColor","valueColor","plotGroupHorizontal","numRows","left","hh","dh","labels","map","toString","substr","labelScale","scaleBand","domain","rangeRound","paddingInner","paddingOuter","stripedata","stripeScale","oddeven","enter","step","maxValueWidth","gap","bandwidth","each","thisWidth","getComputedTextLength","maxLabelWidth","labelAngle","minvalue","maxvalue","bbox","getBBox","sin","PI","c","cos","abs","valueScale","scaleLinear","nice","vLine","strokeWidth","HighLimitLineWidth","LowLimitLineWidth","bw","curveFunc","curveLinear","curveMonotoneY","curveCardinal","curveCatmullRom","lineFunction","line","curve","points","ggHighSide","call","axisTop","ggLowSide","axisBottom","gcols","dw","pointsPerRow","rr","u","totalPoints","rowOverheadHeight","rowHeight","ceil","nn","ii","plotGroupVertical","g2","maxValueHeight","thisHeight","maxLabelHeight","hLine","curveMonotoneX","axisLeft","tickSizeInner","tickSizeOuter","ticks","axisRight","pointsPerCol","colOverheadWidth","colWidth","ww","pulseHigh","highFlashRects","_groups","highRepeat","active","pulseLow","lowFlashRects","lowRepeat","renderingCompleted","refresh","scope","attrs","panelContentElem","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["/*jshint esversion: 6 */\r\n/*jshint -W087 */\r\n/*jshint -W014 */\r\nimport { MetricsPanelCtrl } from \"app/plugins/sdk\";\r\nimport $ from \"jquery\";\r\nimport \"jquery.flot\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport \"./css/multistat-panel.css!\";\r\nimport * as d3 from \"d3\";\r\nimport { getTemplateSrv } from '@grafana/runtime';\r\nimport { PanelEvents } from \"@grafana/data\";\r\n\r\nconst templateSrv = getTemplateSrv();\r\n\r\nfunction isNumber(n) {\r\n  return !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\nclass MultistatPanelCtrl extends MetricsPanelCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    var panelDefaults = {\r\n      timeFrom: null,\r\n      timeShift: null,\r\n      BarPadding: 10,\r\n      MultiBarPadding: 10,\r\n      BaseLineColor: \"#ff0000\",\r\n      BaseLineWidth: 1,\r\n      BaseLineValue: null,\r\n      DateTimeColName: \"date\",\r\n      DateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      TooltipDateFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n      FlashHighLimitBar: false,\r\n      FlashLowLimitBar: false,\r\n      HighAxisColor: \"#ffffff\",\r\n      HighAxisWidth: 1,\r\n      HighBarColor: \"rgb(120, 128, 0)\",\r\n      RecolorColName: null,\r\n      HighLimitBarColor: \"#ff0000\",\r\n      HighLimitBarFlashColor: \"#ffa500\",\r\n      HighLimitBarFlashTimeout: 1000,\r\n      HighLimitLineColor: \"#ff0000\",\r\n      HighLimitValue: null,\r\n      HighLmitLineWidth: 1,\r\n      HighSideMargin: 22,\r\n      Horizontal: false,\r\n      LabelColName: \"\",\r\n      LabelNameFilter: \"\",\r\n      LabelColor: \"#ffffff\",\r\n      OutOfRangeLabelColor: \"#ffffff\",\r\n      GroupLabelColor: \"#ffffff\",\r\n      LabelFontSize: \"100%\",\r\n      GroupLabelFontSize: \"200%\",\r\n      GroupGap: 5,\r\n      LabelMargin: null,\r\n      Legend: false,\r\n      Links: [],\r\n      LowAxisColor: \"#ffffff\",\r\n      LowAxisWidth: 1,\r\n      LowBarColor: \"teal\",\r\n      LowLimitBarColor: \"#ff0000\",\r\n      LowLimitBarFlashColor: \"#ffa500\",\r\n      LowLimitBarFlashTimeout: 200,\r\n      LowLimitLineColor: \"#ff0000\",\r\n      LowLimitValue: null,\r\n      LowLmitLineWidth: 1,\r\n      LowSideMargin: 22,\r\n      MaxLineColor: \"rgb(74, 232, 12)\",\r\n      MaxLineWidth: 1,\r\n      MaxLineValue: null,\r\n      MinLineColor: \"#ff0000\",\r\n      MinLineWidth: 1,\r\n      MinLineValue: null,\r\n      RecolorHighLimitBar: false,\r\n      RecolorLowLimitBar: false,\r\n      RecolorRules: [],\r\n      ShowBaseLine: false,\r\n      ShowDate: false,\r\n      Aggregate: \"last\",\r\n      ShowHighLimitLine: false,\r\n      ShowLabels: true,\r\n      ShowGroupLabels: true,\r\n      ShowLeftAxis: true,\r\n      ShowLowLimitLine: false,\r\n      ShowMaxLine: false,\r\n      ShowMinLine: false,\r\n      ShowRightAxis: true,\r\n      ShowValues: true,\r\n      SortColName: \"value\",\r\n      SortDirection: \"ascending\",\r\n      TZOffsetHours: 0,\r\n      ToolTipType: \"\",\r\n      ToolTipFontSize: \"100%\",\r\n      ValueColName: \"\",\r\n      Values: [],\r\n      ValueDecimals: 2,\r\n      ValueColor: \"#ffffff\",\r\n      ValueFontSize: \"100%\",\r\n      OddRowColor: \"rgba(33, 33, 34, 0.92)\",\r\n      EvenRowColor: \"rgba(61, 61, 64, 0.78)\",\r\n      OutlineColor: \"rgba(245, 255, 0, 0.1)\",\r\n      GroupSortString: \"\",\r\n      GroupCols: 0,\r\n      GroupNameFilter: \"\",\r\n      ScaleFactor: 1,\r\n      ValuePosition: \"top\",\r\n      LableAngle: 0,\r\n      ShowBars: true,\r\n      ShowLines: false,\r\n      LineWidth: 5,\r\n      LineColor: \"blue\",\r\n      DotSize: 10,\r\n      DotColor: \"white\",\r\n      CurveType: \"Monotone\",\r\n    };\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    // Migrate old configurations from single value column to array of value columns\r\n    if (this.panel.Values.length === 0) {\r\n      this.panel.Values = [\r\n        {\r\n          Name: this.panel.ValueColName,\r\n          LowBarColor: this.panel.LowBarColor,\r\n          HighBarColor: this.panel.HighBarColor,\r\n          Selected: true\r\n        },\r\n      ];\r\n      delete this.panel.ValueColName;\r\n      delete this.panel.LowBarColor;\r\n      delete this.panel.HighBarColor;\r\n    }\r\n\r\n    this.dashboardVariables = [];\r\n    //console.log('Listing variables');\r\n    if (templateSrv){\r\n      templateSrv.getVariables().forEach((v) => {      \r\n        //console.log(JSON.stringify(v, null, 2));\r\n        if (v.current){\r\n          //console.log(\"dashboard variable[\" + v.name + \"]=\" + v.current.value);\r\n          //this.updateNamedValue(this.panel, v.name.split(\"_\"), v.current.value);   ////// WHAT WAS THIS FOR?????\r\n          this.dashboardVariables.push({name:v.name, value:v.current.value});\r\n        }\r\n      });\r\n    }\r\n\r\n    console.log('this.dashboardVariables='+JSON.stringify(this.dashboardVariables, null, 2));\r\n\r\n    this.events.on(\r\n      PanelEvents.dataReceived,\r\n      this.onDataReceived.bind(this),\r\n      $scope\r\n    );\r\n\r\n    this.events.on(\r\n\t  PanelEvents.dataError, \r\n\t  this.onDataError.bind(this), \r\n\t  $scope\r\n\t);\r\n\r\n    this.events.on(\r\n\t  PanelEvents.render, \r\n\t  this.onRender.bind(this)\r\n\t);\r\n\r\n    this.events.on(\r\n      PanelEvents.dataSnapshotLoad,\r\n      this.onDataSnapshotLoad.bind(this)\r\n    );\r\n    \r\n\tthis.events.on(\r\n      PanelEvents.editModeInitialized,\r\n      this.onInitEditMode.bind(this)\r\n    );\r\n\r\n    this.className = \"michaeldmoore-multistat-panel-\" + this.panel.id;\r\n  }\r\n\r\n  updateNamedValue(obj, names, value) {\r\n    let name = names.shift();\r\n    if (obj[name]) {\r\n      if (names.length) this.updateNamedValue(obj[name], names, value);\r\n      else obj[name] = Number(value);\r\n    }\r\n  }\r\n\r\n  onDataSnapshotLoad(snapshotData) {\r\n    this.onDataReceived(snapshotData);\r\n  }\r\n\r\n  onDataError(err) {\r\n    this.seriesList = [];\r\n    this.data = [];\r\n    this.displayStatusMessage(\r\n      \"Query failure, Status=\" + err.status + \", \" + err.statusText\r\n    );\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.metricNames = [\r\n      \"min\",\r\n      \"max\",\r\n      \"avg\",\r\n      \"current\",\r\n      \"total\",\r\n      \"name\",\r\n      \"first\",\r\n      \"delta\",\r\n      \"diff\",\r\n      \"range\",\r\n    ];\r\n    this.sortDirections = [\"none\", \"ascending\", \"descending\"];\r\n    this.aggregations = [\"all\", \"last\", \"first\", \"mean\", \"max\", \"min\", \"sum\"];\r\n    this.fontSizes = [\r\n      \"20%\",\r\n      \"30%\",\r\n      \"50%\",\r\n      \"70%\",\r\n      \"80%\",\r\n      \"100%\",\r\n      \"110%\",\r\n      \"120%\",\r\n      \"150%\",\r\n      \"170%\",\r\n      \"200%\",\r\n      \"250%\",\r\n      \"300%\",\r\n      \"350%\",\r\n      \"400%\",\r\n    ];\r\n    this.valuePositions = [\"bar base\", \"bar end\", \"top\"];\r\n    this.curveTypes = [\"Linear\", \"Monotone\", \"Cardinal\", \"Catmull-Rom\"];\r\n    this.matchTypes = [\"exact\", \"subset\", \"list\", \"reg-ex\"];\r\n    this.tooltipTypes = [\"light\", \"dark\"];\r\n    this.addEditorTab(\r\n      \"Columns\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/columns.html\",\r\n      2\r\n    );\r\n    this.addEditorTab(\r\n      \"Layout\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/layout.html\",\r\n      3\r\n    );\r\n    this.addEditorTab(\r\n      \"Grouping\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/grouping.html\",\r\n      4\r\n    );\r\n    this.addEditorTab(\r\n      \"Options\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/options.html\",\r\n      5\r\n    );\r\n    this.addEditorTab(\r\n      \"Lines-and-Limits\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/linesandlimits.html\",\r\n      6\r\n    );\r\n    this.addEditorTab(\r\n      \"Bar links\",\r\n      \"public/plugins/michaeldmoore-multistat-panel/barlinks.html\",\r\n      7\r\n    );\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    this.cols = [];\r\n     //console.log('onDataReceived(' + JSON.stringify(data, null, 2) + ')');\r\n    if (data.length == 0 || data[0].rows.length == 0) {\r\n      this.displayStatusMessage(\"No data to show\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    } else if (/*data[0].type == \"table\" || */data[0].columns) {\r\n      this.data = data[0];\r\n\r\n      for (let i = 0; i < this.data.columns.length; i++)\r\n        this.cols[i] = this.data.columns[i].text;\r\n      this.cols0 = [\"\"].concat(this.cols);\r\n\r\n      this.render();\r\n    } else {\r\n      this.displayStatusMessage(\"Multistat only supports Table datasets\");\r\n      this.data = data;\r\n      this.rows = null;\r\n      this.render();\r\n    }\r\n  }\r\n\r\n  randomColor() {\r\n    var letters = '456789ABCDE'.split('');\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++ ) {\r\n      color += letters[Math.floor(Math.random() * letters.length)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  getContrastingColor(hexcolor) {\r\n    let match = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/i.exec(hexcolor);\r\n    if (match) {\r\n      let r = parseInt(match[1]);\r\n      let g = parseInt(match[2]);\r\n      let b = parseInt(match[3]);\r\n      \r\n      let brightness = (0.2126 * r + 0.7152 * g + 0.0722 * b);\r\n      let contrastingColor = brightness < 128 ? '#ffffff' : '#000000';\r\n      return contrastingColor;\r\n    } \r\n  \r\n    match = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexcolor);\r\n    if (match) {\r\n      let r1 = parseInt(match[1], 16);\r\n      let g1 = parseInt(match[2], 16);\r\n      let b1 = parseInt(match[3], 16);\r\n      \r\n      let brightness = (0.2126 * r1 + 0.7152 * g1 + 0.0722 * b1);\r\n      let contrastingColor = brightness < 128 ? '#ffffff' : '#000000';\r\n      return contrastingColor;\r\n    } \r\n\r\n  return this.panel.ValueColor;\r\n}\r\n\r\n  onValueAdd() {\r\n    this.ctrl.panel.Values.push({\r\n      Name:'', \r\n      HighBarColor:this.randomColor(), \r\n      LowBarColor:this.randomColor(), \r\n      Selected: true});\r\n    this.ctrl.render();\r\n  }\r\n\r\n  onReorderValues(index, up) {\r\n    const Values = this.ctrl.panel.Values;\r\n    if (up) {\r\n      if (index) Values[index] = Values.splice(index - 1, 1, Values[index])[0];\r\n    } else {\r\n      if (index + 1 < Values.length)\r\n        Values[index] = Values.splice(index + 1, 1, Values[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderRecolorRules(index, up) {\r\n    const RecolorRules = this.ctrl.panel.RecolorRules;\r\n    if (up) {\r\n      if (index)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index - 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    } else {\r\n      if (index + 1 < RecolorRules.length)\r\n        RecolorRules[index] = RecolorRules.splice(\r\n          index + 1,\r\n          1,\r\n          RecolorRules[index]\r\n        )[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  onReorderLinks(index, up) {\r\n    const Links = this.ctrl.panel.Links;\r\n    if (up) {\r\n      if (index) Links[index] = Links.splice(index - 1, 1, Links[index])[0];\r\n    } else {\r\n      if (index + 1 < Links.length)\r\n        Links[index] = Links.splice(index + 1, 1, Links[index])[0];\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  buildDateHtml(dateTimeCol) {\r\n    var $title = this.elem.closest(\".panel-container\").find(\".panel-title\");\r\n    var $maxDate = $title.find(\"span.michaeldmoore-multistat-panel-maxDate\");\r\n\r\n    if ($maxDate.length == 0)\r\n      $maxDate = $title\r\n        .append('<span class=\"michaeldmoore-multistat-panel-maxDate\"/>')\r\n        .children()\r\n        .last();\r\n\r\n    if (dateTimeCol != -1 && this.panel.ShowDate) {\r\n      var maxDate = this.rows[0][dateTimeCol];\r\n\r\n      for (let i = 1; i < this.rows.length; i++) {\r\n        if (maxDate < this.rows[i][dateTimeCol])\r\n          maxDate = this.rows[i][dateTimeCol];\r\n      }\r\n\r\n      var dd = moment(maxDate).add(this.panel.TZOffsetHours, \"h\");\r\n\r\n      if (this.panel.DateFormat.toUpperCase() == \"ELAPSED\")\r\n        $maxDate.text(dd.fromNow()).show();\r\n      else $maxDate.text(dd.format(this.panel.DateFormat)).show();\r\n    } else $maxDate.hide();\r\n  }\r\n\r\n  displayStatusMessage(msg) {\r\n    this.elem.html(\r\n      \"<div class='michaeldmoore-multistat-panel-statusmessage'>\" +\r\n      msg +\r\n      \"</div>\"\r\n    );\r\n  }\r\n\r\n  onRender() {\r\n    if (this.data != null && this.data.rows && this.data.rows.length) {\r\n      var cols = this.cols;\r\n      var dateTimeCol = -1;\r\n      var labelCol = -1;\r\n      var sortCol = 0;\r\n      var groupCol = -1;\r\n      var recolorCol = -1;\r\n\r\n      // clone dashboard variables array\r\n      var dashboardVariables = [...this.dashboardVariables];\r\n      let range = this.timeSrv.timeRangeForUrl();\r\n      dashboardVariables.push({name:\"from\", value:range.from});\r\n      dashboardVariables.push({name:\"to\", value:range.to});\r\n\r\n      cols.forEach((colName, i) => {\r\n        if (colName == this.panel.DateTimeColName) dateTimeCol = i;\r\n        if (colName == this.panel.LabelColName) labelCol = i;\r\n        if (colName == this.panel.SortColName) sortCol = i;\r\n        if (colName == this.panel.GroupColName) groupCol = i;\r\n        if (colName == this.panel.RecolorColName) recolorCol = i;\r\n\r\n        this.panel.Values.forEach((Value) => {\r\n          if (colName == Value.Name) {\r\n            Value.Col = i;\r\n          }\r\n        });\r\n      });\r\n\r\n      var SelectedValues = this.panel.Values.filter(\r\n        (value) => value.Col >= 0 && value.Selected\r\n      );\r\n\r\n      //console.log('onRender: this.data.rows\\n'+JSON.stringify(this.data.rows));\r\n\r\n      const groupedLabelFunc = function (obj) {\r\n        if (groupCol != -1) return obj[groupCol] + \":\" + obj[labelCol];\r\n        else return obj[labelCol];\r\n      };\r\n\r\n      if (this.panel.LabelNameFilter.length > 0 && labelCol != -1) {\r\n        var regex = new RegExp(this.panel.LabelNameFilter, \"\");\r\n        this.matchingRows = [];\r\n        for (let i = 0; i < this.data.rows.length; i++) {\r\n          var dd = this.data.rows[i];\r\n          var label = dd[labelCol];\r\n          if (label.match(regex) != null) this.matchingRows.push(dd);\r\n        }\r\n\r\n        if (this.matchingRows.length == 0) {\r\n          this.displayStatusMessage(\r\n            \"No data.  Regex filter '\" +\r\n            this.panel.LabelNameFilter +\r\n            \"' eliminated all \" +\r\n            this.data.rows.length +\r\n            \" rows from current query\"\r\n          );\r\n          return;\r\n        }\r\n      } else this.matchingRows = this.data.rows;\r\n\r\n      if (\r\n        this.panel.Aggregate != \"all\" &&\r\n        labelCol != -1 &&\r\n        SelectedValues.length > 0\r\n      ) {\r\n        var oo = [];\r\n        this.rows = [];\r\n        switch (this.panel.Aggregate) {\r\n          case \"first\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[0];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"last\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                return d[d.length - 1];\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = oo;\r\n            break;\r\n\r\n          case \"sum\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.sum(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"mean\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.mean(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n            case \"mean\":\r\n              this.rows = d3\r\n                .nest()\r\n                .key(groupedLabelFunc)\r\n                .rollup(function (d) {\r\n                  var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                  dd[valueCol] = d3.mean(d, function (d) {\r\n                    return d[valueCol];\r\n                  });\r\n                  return dd;\r\n                })\r\n                .entries(this.matchingRows)\r\n                .forEach(function (x) {\r\n                  oo.push(x.value);\r\n                });\r\n              this.rows = Array.from(oo);\r\n              break;\r\n  \r\n            case \"max\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.max(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n\r\n          case \"min\":\r\n            this.rows = d3\r\n              .nest()\r\n              .key(groupedLabelFunc)\r\n              .rollup(function (d) {\r\n                var dd = Object.values(Object.assign({}, d[d.length - 1]));\r\n                SelectedValues.forEach((value) => {\r\n                  dd[value.Col] = d3.min(d, function (d) {\r\n                    return d[value.Col];\r\n                  });\r\n                });\r\n                return dd;\r\n              })\r\n              .entries(this.matchingRows)\r\n              .forEach(function (x) {\r\n                oo.push(x.value);\r\n              });\r\n            this.rows = Array.from(oo);\r\n            break;\r\n        }\r\n      } else {\r\n        this.rows = this.matchingRows;\r\n      }\r\n\r\n      //console.log('after aggregation('+this.panel.Aggregate+') this.rows:\\n'+JSON.stringify(this.rows));\r\n\r\n      var groupNameOffset = this.panel.ShowGroupLabels\r\n        ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n        : 0;\r\n\r\n      if (groupCol >= 0) {\r\n        this.groupedRows = d3\r\n          .nest()\r\n          .key(function (d) {\r\n            return d[groupCol];\r\n          })\r\n          .entries(this.rows);\r\n\r\n        if (this.panel.GroupNameFilter.length > 0) {\r\n          var regexGroupRows = new RegExp(this.panel.GroupNameFilter, \"\");\r\n          let matchingGroups = [];\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let groupName = this.groupedRows[i].key;\r\n            if (groupName.match(regexGroupRows) != null)\r\n              matchingGroups.push(this.groupedRows[i]);\r\n          }\r\n\r\n          if (matchingGroups.length > 0) this.groupedRows = matchingGroups;\r\n          else {\r\n            this.displayStatusMessage(\r\n              \"No groups.  Group Regex filter '\" +\r\n              this.panel.GroupNameFilter +\r\n              \"' eliminated all \" +\r\n              this.groupedRows.length +\r\n              \" groups from current query\"\r\n            );\r\n            return;\r\n          }\r\n        }\r\n\r\n        let groupSortString = this.panel.GroupSortString;\r\n\r\n        this.groupedRows.sort(function (a, b) {\r\n          var aPos = groupSortString.search(a.key);\r\n          var bPos = groupSortString.search(b.key);\r\n\r\n          if (aPos == bPos) return a.key.localeCompare(b.key);\r\n          else if (aPos == -1) return 1;\r\n          else if (bPos == -1) return -1;\r\n          else return aPos - bPos;\r\n        });\r\n      } else {\r\n        this.groupedRows = null;\r\n      }\r\n\r\n      this.elem.html(\r\n        \"<div class='\" +\r\n        this.className +\r\n        \"' style='display: flex; flex-direction: column; height:100%; width:100%'>\" +\r\n        \"</div>\"\r\n      );\r\n\r\n      var $container = this.elem.find(\"div\");\r\n\r\n      this.svg = d3\r\n        .select(\".\" + this.className)\r\n        .append(\"svg\")\r\n        .attr(\"height\", \"100%\");\r\n\r\n      if (this.panel.Legend) {\r\n        var $legend = $container\r\n          .append(\r\n            \"<div><p></p><ul class='michaeldmoore-multistat-panel-legend'></ul></div>\"\r\n          )\r\n          .find(\"ul\");\r\n\r\n        const legendValues = this.panel.Values.filter(\r\n          (value) => value.Col >= 0\r\n        );\r\n        legendValues.forEach((value, i) => {\r\n          ///////////////////////////////////////////////////////////////////////////////\r\n          // Be careful with this - the toggling/selection logic is quite complicated. //\r\n          ///////////////////////////////////////////////////////////////////////////////\r\n          let deselectedClassName = value.Selected\r\n            ? \"\"\r\n            : \" class='michaeldmoore-multistat-panel-legend-deselected'\";\r\n          $legend\r\n            .append(\"<li\" + deselectedClassName + \">\" + value.Name + \"</li>\")\r\n            .children()\r\n            .last()\r\n            .css(\"background-color\", value.HighBarColor)\r\n            .css(\"color\", this.getContrastingColor(value.HighBarColor))\r\n            .click(function () {\r\n              //console.log('legend-click() value='+JSON.stringify(value,null,2));\r\n              if (window.event.ctrlKey) {\r\n                // toggle this item only\r\n                value.Selected = !value.Selected;\r\n              } else {\r\n                if (!value.Selected || SelectedValues.length != 1) {\r\n                  // deselect everything\r\n                  legendValues.forEach((v) => (v.Selected = false));\r\n                  // and re-select this one;\r\n                  value.Selected = true;\r\n                } else {\r\n                  legendValues.forEach((v) => (v.Selected = true));\r\n                }\r\n              }\r\n              //console.log('legend-click() legendValues='+JSON.stringify(legendValues,null,2));\r\n              // force a re-render\r\n              CTRL.$scope.$apply(() => {\r\n                CTRL.render();\r\n              });\r\n            });\r\n        });\r\n      }\r\n\r\n      var h = $container.find(\"svg\").height();\r\n      var w = $container.width() - 15;\r\n\r\n      this.buildDateHtml(dateTimeCol);\r\n\r\n      var labelMargin =\r\n        isNumber(this.panel.LabelMargin) && this.panel.LabelMargin >= 0\r\n          ? this.panel.LabelMargin\r\n          : null;\r\n      var lowSideMargin =\r\n        this.panel.LowSideMargin >= 0 ? this.panel.LowSideMargin : 0;\r\n      var highSideMargin =\r\n        this.panel.HighSideMargin >= 0 ? this.panel.HighSideMargin : 0;\r\n\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.highflash\")\r\n        .interrupt();\r\n\r\n      this.svg\r\n        .selectAll(\"rect.michaeldmoore-multistat-panel-bar.lowflash\")\r\n        .interrupt();\r\n\r\n      var id = this.panel.id;\r\n      var barPadding = this.panel.BarPadding;\r\n      var multiBarPadding = this.panel.MultiBarPadding;\r\n      var baseLineValue = this.panel.BaseLineValue;\r\n      var minLineValue = this.panel.MinLineValue;\r\n      var maxLineValue = this.panel.MaxLineValue;\r\n      var highLimitValue = this.panel.HighLimitValue;\r\n      var HighLimitBarColor = this.panel.HighLimitBarColor;\r\n      var HighLimitBarFlashColor = this.panel.HighLimitBarFlashColor;\r\n      var HighLimitBarFlashTimeout = this.panel.HighLimitBarFlashTimeout;\r\n      var recolorHighLimitBar = this.panel.RecolorHighLimitBar;\r\n      var Links = this.panel.Links;\r\n      var lowLimitValue = this.panel.LowLimitValue;\r\n      var LowLimitBarColor = this.panel.LowLimitBarColor;\r\n      var LowLimitBarFlashColor = this.panel.LowLimitBarFlashColor;\r\n      var LowLimitBarFlashTimeout = this.panel.LowLimitBarFlashTimeout;\r\n      var RecolorRules = this.panel.RecolorRules;\r\n      var recolorLowLimitBar = this.panel.RecolorLowLimitBar;\r\n      var flashHighLimitBar = this.panel.FlashHighLimitBar;\r\n      var flashLowLimitBar = this.panel.FlashLowLimitBar;\r\n      var tooltipType = this.panel.ToolTipType;\r\n      var tooltipFontSize = this.panel.ToolTipFontSize;\r\n      var DateTimeColName = this.panel.DateTimeColName;\r\n      var TooltipDateFormat = this.panel.TooltipDateFormat;\r\n      var ValueColName = this.panel.ValueColName;\r\n      var ValueDecimals = this.panel.ValueDecimals;\r\n      var OddRowColor = this.panel.OddRowColor;\r\n      var EvenRowColor = this.panel.EvenRowColor;\r\n      var OutlineColor = this.panel.OutlineColor;\r\n      var TZOffsetHours = this.panel.TZOffsetHours;\r\n      var GroupCols = this.panel.GroupCols;\r\n      var GroupGap = this.panel.GroupGap;\r\n      var ScaleFactor = Number(this.panel.ScaleFactor);\r\n      var ValuePosition = this.panel.ValuePosition;\r\n\r\n      var panelID = \"michaeldmoore-multistat-panel-\" + id;\r\n      var tooltipDivID = \"michaeldmoore-multistat-panel-tooltip-\" + id;\r\n\r\n      var minValue =\r\n        SelectedValues.length &&\r\n        d3.min(this.rows, function (d) {\r\n          let min = Number(d[SelectedValues[0].Col]);\r\n          for (var i = 1; i < SelectedValues.length; i++) {\r\n            let col = SelectedValues[i].Col;\r\n            let val = Number(d[col]);\r\n            if (min > val) min = val;\r\n          }\r\n          return min * ScaleFactor;\r\n        });\r\n      if (isNumber(minLineValue) == false) minLineValue = minValue;\r\n\r\n      var maxValue =\r\n        SelectedValues.length &&\r\n        d3.max(this.rows, function (d) {\r\n          let max = Number(d[SelectedValues[0].Col]);\r\n          for (var i = 1; i < SelectedValues.length; i++) {\r\n            let col = SelectedValues[i].Col;\r\n            let val = Number(d[col]);\r\n            if (max < val) max = val;\r\n          }\r\n          return max * ScaleFactor;\r\n        });\r\n      if (isNumber(maxLineValue) == false) maxLineValue = maxValue;\r\n\r\n      if (isNumber(baseLineValue) == false) baseLineValue = 0;\r\n\r\n      if (minLineValue > baseLineValue) minLineValue = baseLineValue;\r\n\r\n      if (isNumber(lowLimitValue) && minLineValue > lowLimitValue)\r\n        minLineValue = lowLimitValue;\r\n\r\n      if (maxLineValue < baseLineValue) maxLineValue = baseLineValue;\r\n\r\n      if (isNumber(highLimitValue) && maxLineValue < highLimitValue)\r\n        maxLineValue = highLimitValue;\r\n\r\n      $(\"#\" + tooltipDivID).remove();\r\n\r\n      var sortData = function (data, sortDirection) {\r\n        if (sortDirection != \"none\") {\r\n          var ascending = sortDirection == \"ascending\";\r\n          data.sort(function (x, y) {\r\n            let xx = x[sortCol];\r\n            let yy = y[sortCol];\r\n\r\n            if (isNumber(xx) && isNumber(yy))\r\n              return ascending ? xx - yy : yy - xx;\r\n            else return ascending ? xx.localeCompare(yy) : yy.localeCompare(xx);\r\n          });\r\n        }\r\n      };\r\n\r\n      var translateValues = function (s, d) {\r\n        // lookup column index corresponding to the substitution tokens and replace with this bar's value\r\n        let s1 = s;\r\n        const re = /\\{[^}]+\\}/g;\r\n        let g = re.exec(s);\r\n        while (g) {\r\n          //console.log('Translating token '+g);\r\n          for (var i = 0; i < cols.length; i++) {\r\n            if (g == \"{\" + cols[i] + \"}\") {\r\n              s1 = s1.replace(g, d[i]);\r\n              break;\r\n            }\r\n          }\r\n\r\n          // do the same thing with dashboard variables...\r\n          for (var j = 0; j < dashboardVariables.length; j++) {\r\n            let dv = dashboardVariables[j];\r\n            if (g == \"{\" + dv.name + \"}\"){\r\n              //console.log(\"dashboard variable[\" + dv.name + \"]=\" + dv.value);\r\n              s1 = s1.replace(g, dv.value);\r\n              break;\r\n            }\r\n          }      \r\n\r\n          g = re.exec(s);\r\n        }\r\n        //console.log('Translating url '+s+' to ' + s1);\r\n        return s1;\r\n      };\r\n\r\n      var getTooltipContent = function (d) {\r\n        let html = \"\";\r\n        if (tooltipType && Array.isArray(d)) {\r\n          html +=\r\n            \"<table style='font-size:\" +\r\n            tooltipFontSize.replace(\"%\", \"\") / 100 +\r\n            \"em'>\";\r\n          if (labelCol != -1)\r\n            html +=\r\n              \"<thead><tr class='michaeldmoore-multistat-panel-tooltip-title'><th colspan='2' align='center'>\" +\r\n              d[labelCol] +\r\n              \"</th></tr></thead>\";\r\n          if (Array.isArray(d)) {\r\n            html += \"<tbody>\";\r\n            for (var i = 0; i < d.length; i++) {\r\n              if (i != labelCol) {\r\n                var cc = cols[i];\r\n                var dd = d[i];\r\n\r\n                if (cc == DateTimeColName)\r\n                  dd = moment(dd)\r\n                    .add(TZOffsetHours, \"h\")\r\n                    .format(TooltipDateFormat);\r\n                else if (cc == ValueColName && isNumber(dd))\r\n                  dd = Number(dd).toFixed(ValueDecimals);\r\n\r\n                html += \"<tr><td>\" + cc + \"</td><td>\" + dd + \"</td></tr>\";\r\n              }\r\n            }\r\n            html += \"</tbody></table>\";\r\n          }\r\n\r\n          if (Links.length) {\r\n            html += \"<table><tbody>\";\r\n            Links.forEach((l) => {\r\n              html +=\r\n                \"<tr><td align='right'><i class='fa fa-link'></i></td><td><a href='\" +\r\n                translateValues(l.url, d) +\r\n                (l.newtab ? \"' target='_blank'\" : \"'\") +\r\n                \">\" +\r\n                translateValues(l.name, d) +\r\n                \"</a></td></tr>\";\r\n            });\r\n            html += \"</tbody></table>\";\r\n          }\r\n        }\r\n\r\n        return html;\r\n      };\r\n\r\n      var isInTooltip = false;\r\n      var $panel;\r\n      var $panelContent;\r\n      var panelContent;\r\n      var tooltipShow = function (d) {\r\n        if ($(\"#\" + tooltipDivID).length == 0) {\r\n          $panel = $(\".\" + panelID);\r\n          //          $panelContent = this.elem.closest(\".panel-content\");\r\n          $panelContent = $panel.parent().parent().parent().parent();\r\n          panelContent = d3.selectAll($panelContent);\r\n          panelContent\r\n            .append(\"div\")\r\n            .attr(\"id\", tooltipDivID)\r\n            .style(\"opacity\", 0);\r\n        }\r\n\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n\r\n        let tooltipHtml = getTooltipContent(d);\r\n        if (tooltipHtml.length){\r\n          tooltipDiv\r\n          .classed(\r\n            \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n            true\r\n          )\r\n          .html(tooltipHtml)\r\n          .on(\"mouseover\", function () {\r\n            if (!isInTooltip) {\r\n              isInTooltip = true;\r\n              tooltipHide(true);\r\n            }\r\n          })\r\n          .on(\"mouseleave\", function () {\r\n            isInTooltip = false;\r\n            tooltipHide(false);\r\n          });\r\n\r\n        const $tooltipDiv = $(\"#\" + tooltipDivID);\r\n        const tooltipWidth = $tooltipDiv.width();\r\n        const tooltipHeight = $tooltipDiv.height();\r\n        const minTop = 28;\r\n\r\n        const mouseCoordinates = d3.mouse(panelContent.node());\r\n        let Left = mouseCoordinates[0] - tooltipWidth / 2;\r\n        let Top = mouseCoordinates[1] + minTop - tooltipHeight / 2;\r\n\r\n        let panelWidth = $panel.width();\r\n        let panelHeight = $panel.height();\r\n\r\n        if (Left < 0) Left = 0;\r\n        else if (Left > panelWidth - tooltipWidth)\r\n          Left = panelWidth - tooltipWidth;\r\n\r\n        if (Top < 0) Top = 0;\r\n        else if (Top > panelHeight + minTop - tooltipHeight)\r\n          Top = panelHeight + minTop - tooltipHeight;\r\n\r\n        tooltipDiv\r\n          .transition()\r\n          .duration(200)\r\n          .style(\"opacity\", 1.0)\r\n          .style(\"left\", Left + \"px\")\r\n          .style(\"top\", Top + \"px\");\r\n        }\r\n      };\r\n\r\n      var tooltipHide = function (cancel) {\r\n        const tooltipDiv = d3.selectAll(\"#\" + tooltipDivID);\r\n\r\n        if (cancel) {\r\n          //console.log(\"cancelling tooltip hide\");\r\n          tooltipDiv.transition().style(\"opacity\", 1.0);\r\n        } else {\r\n          tooltipDiv\r\n            .transition()\r\n            .duration(2000)\r\n            .style(\"opacity\", 0)\r\n            .on(\"end\", function () {\r\n              d3.select(this)\r\n                .html(\"\")\r\n                .classed(\r\n                  \"michaeldmoore-multistat-panel-\" + tooltipType + \"-tooltip\",\r\n                  false\r\n                );\r\n            });\r\n        }\r\n      };\r\n\r\n      var scaleAndClipValue = function (d) {\r\n        var val = d * ScaleFactor;\r\n        if (val > maxLineValue) val = maxLineValue;\r\n        if (val < minLineValue) val = minLineValue;\r\n\r\n        return val;\r\n      };\r\n\r\n      var getBarColor = function (d, valueDef) {\r\n        if (recolorCol != -1) {\r\n          let recolorString = d[recolorCol];\r\n\r\n          if (RecolorRules.length) {\r\n            if (recolorString) {\r\n              let recolorRule = RecolorRules.find((r) => {\r\n                if (r.pattern) {\r\n                  switch (r.matchType) {\r\n                    case \"reg-ex\":\r\n                      let re = RegExp(r.pattern);\r\n                      return re.test(recolorString);\r\n\r\n                    case \"list\":\r\n                      return r.pattern.indexOf(recolorString) != -1;\r\n\r\n                    case \"subset\":\r\n                      return recolorString.indexOf(r.pattern) != -1;\r\n\r\n                    default:\r\n                      return r.pattern === recolorString;\r\n                  }\r\n                }\r\n                return false;\r\n              });\r\n\r\n              if (recolorRule) return recolorRule.color;\r\n            }\r\n          }\r\n\r\n          // no matching rule found, check if recolorString is a valid color\r\n          const s = new Option().style;\r\n          s.color = recolorString;\r\n          if (s.color !== \"\") return recolorString;\r\n        }\r\n\r\n        let value = d[valueDef.Col] * ScaleFactor;\r\n        if (recolorHighLimitBar && value > highLimitValue)\r\n          return HighLimitBarColor;\r\n        if (recolorLowLimitBar && value < lowLimitValue)\r\n          return LowLimitBarColor;\r\n\r\n        // All else fails, let's use the standard colors for this bar...\r\n        return value > baseLineValue\r\n          ? valueDef.HighBarColor\r\n          : valueDef.LowBarColor;\r\n      };\r\n\r\n      var getValueColor = function (d, valueDef) {\r\n        let barColor = getBarColor(d, valueDef);\r\n        let valueColor = CTRL.getContrastingColor(barColor);\r\n        return valueColor;\r\n      };\r\n\r\n      if (this.panel.Horizontal) {\r\n        var plotGroupHorizontal = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .rangeRound([hh + highSideMargin, hh + dh - lowSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g1 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueWidth = 0;\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", left + w)\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"end\")\r\n                  .attr(\"dominant-baseline\", \"central\")\r\n                  .each(function (d, i) {\r\n                    var thisWidth = this.getComputedTextLength();\r\n                    maxValueWidth = d3.max([maxValueWidth, thisWidth]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            w -= maxValueWidth;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelWidth = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g1.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                if (SelectedValues.length) {\r\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\r\n                  let maxvalue = minvalue;\r\n                  SelectedValues.forEach((v) => {\r\n                    let value = d[v.Col] * ScaleFactor;\r\n                    if (minvalue > value) minvalue = value;\r\n                    if (maxvalue < value) maxvalue = value;\r\n                  });\r\n\r\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\r\n                    return panel.OutOfRangeLabelColor;\r\n                }\r\n                return panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var y = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var x = left + a / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisWidth = a;\r\n                maxLabelWidth = d3.max([maxLabelWidth, thisWidth]);\r\n              });\r\n\r\n            if (isNumber(labelMargin)) {\r\n              left += labelMargin;\r\n              w -= labelMargin;\r\n            } else {\r\n              left += maxLabelWidth;\r\n              w -= maxLabelWidth;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([minLineValue, maxLineValue])\r\n            .range([left + labelMargin, left + w])\r\n            .nice();\r\n\r\n          function vLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"y1\", hh + highSideMargin)\r\n              .attr(\"x1\", valueScale(value))\r\n              .attr(\"y2\", hh + dh - lowSideMargin)\r\n              .attr(\"x2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            vLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            vLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            vLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            vLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            vLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"width\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(val) - valueScale(baseLineValue)\r\n                    );\r\n                  })\r\n                  .attr(\"height\", height)\r\n                  .attr(\"x\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (height + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            var bw = labelScale.step();\r\n\r\n            if (panel.LineWidth) {\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneY;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              SelectedValues.forEach((value, index) => {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                if (panel.LineWidth) {\r\n                  var points = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    var d = data[i];\r\n                    var y =\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index;\r\n                    var x = valueScale(d[value.Col] * ScaleFactor);\r\n                    points.push({\r\n                      x,\r\n                      y,\r\n                    });\r\n                  }\r\n\r\n                  svg\r\n                    .append(\"path\")\r\n                    .attr(\"d\", lineFunction(points))\r\n                    .attr(\"stroke\", panel.LineColor)\r\n                    .attr(\"stroke-width\", panel.LineWidth)\r\n                    .attr(\"fill\", \"none\");\r\n                }\r\n\r\n                if (panel.DotSize) {\r\n                  g1.append(\"circle\")\r\n                    .attr(\"r\", panel.DotSize / 2.0)\r\n                    .attr(\"fill\", panel.DotColor)\r\n                    .attr(\"cy\", function (d) {\r\n                      return (\r\n                        labelScale(d[labelCol]) +\r\n                        width / 2 +\r\n                        (width + gap) * index\r\n                      );\r\n                    })\r\n                    .attr(\"cx\", function (d) {\r\n                      return valueScale(d[value.Col] * ScaleFactor);\r\n                    });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let height =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g1.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      // \"bar end\"\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val) + (val > baseLineValue);\r\n                    }\r\n                  })\r\n                  .attr(\"y\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      height / 2 +\r\n                      (height + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", function(d) {\r\n                    return getValueColor(d, valueDef);\r\n                  })\r\n                  .attr(\"text-anchor\", function (d) {\r\n                    if (panel.ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"start\"\r\n                        : \"end\";\r\n                    // \"bar end\"\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"end\"\r\n                        : \"start\";\r\n                  })\r\n                  .attr(\"dominant-baseline\", \"central\");\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", w)\r\n            .attr(\"height\", stripeScale.step())\r\n            .attr(\"x\", left)\r\n            .attr(\"y\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          // Add High Side Value Axis (X)\r\n          if (highSideMargin > 0) {\r\n            var ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(1,\" + (hh + highSideMargin) + \")\")\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisTop(valueScale));\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n\r\n          // Add Low Side Value Axis (X)\r\n          if (lowSideMargin > 0) {\r\n            var ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(0,\" + (hh + dh - lowSideMargin) + \")\"\r\n              )\r\n              .attr(\"class\", \"michaeldmoore-multistat-panel-valueaxis\")\r\n              .call(d3.axisBottom(valueScale));\r\n\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n        };\r\n\r\n        if (this.groupedRows != null) {\r\n          var gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          var dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each row of groups...\r\n          var pointsPerRow = [];\r\n          for (let i = 0; i < this.groupedRows.length / gcols; i++)\r\n            pointsPerRow.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let rr = Math.floor(i / gcols);\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerRow[rr] < u) pointsPerRow[rr] = u;\r\n          }\r\n\r\n          var totalPoints = 0;\r\n          for (let i = 0; i < pointsPerRow.length; i++)\r\n            totalPoints += pointsPerRow[i];\r\n\r\n          var rowOverheadHeight =\r\n            groupNameOffset +\r\n            this.panel.LowSideMargin +\r\n            this.panel.HighSideMargin;\r\n          var rowHeight =\r\n            (h - pointsPerRow.length * rowOverheadHeight) / totalPoints;\r\n\r\n          var numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          var hh = 0;\r\n          for (var rr = 0; rr < numRows; rr++) {\r\n            var nn = pointsPerRow[rr];\r\n            var dh = rowOverheadHeight + nn * rowHeight;\r\n            hh += dh;\r\n            for (var cc = 0; cc < gcols; cc++) {\r\n              var ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupHorizontal(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  cc * dw,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          plotGroupHorizontal(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      } else {\r\n        var plotGroupVertical = function (\r\n          panel,\r\n          svg,\r\n          data,\r\n          numRows,\r\n          groupName,\r\n          groupNameOffset,\r\n          left,\r\n          w,\r\n          hh,\r\n          dh\r\n        ) {\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t.attr(\"width\", w)\r\n\t\t\t.attr(\"height\", dh)\r\n\t\t\t.attr(\"x\", left)\r\n\t\t\t.attr(\"y\", hh)\r\n\t\t\t.attr(\"stroke\", \"yellow\");*/\r\n\r\n          sortData(data, panel.SortDirection);\r\n\r\n          // Add Above-High Side Group Names\r\n          if (groupName != \"\" && panel.ShowGroupLabels) {\r\n            svg\r\n              .append(\"text\")\r\n              .text(groupName)\r\n              .attr(\"x\", left + (labelMargin + w) / 2)\r\n              .attr(\"y\", hh + groupNameOffset / 2)\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.GroupLabelFontSize)\r\n              .attr(\"fill\", panel.GroupLabelColor)\r\n              .attr(\"background\", \"blue\")\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\");\r\n          }\r\n\r\n          hh += groupNameOffset;\r\n          dh -= groupNameOffset;\r\n\r\n          // Draw border rectangle\r\n          /*svg.append(\"rect\")\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"width\", w)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"height\", dh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"x\", left)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"y\", hh)\r\n\t\t\t\t\t\t\t\t\t\t.attr(\"stroke\", \"#ffffff\");*/\r\n\r\n          var labels = data.map(function (d) {\r\n            return d[labelCol];\r\n          });\r\n          while (labels.length < numRows)\r\n            labels = labels.concat(\r\n              \"_\" + Math.random().toString(36).substr(2, 9)\r\n            );\r\n\r\n          var labelScale = d3\r\n            .scaleBand()\r\n            .domain(labels)\r\n            .range([left + lowSideMargin, left + w - highSideMargin])\r\n            .paddingInner(barPadding / 100)\r\n            .paddingOuter(barPadding / 200);\r\n\r\n          var stripedata = data.concat(d3.range(data.length, numRows));\r\n\r\n          var stripeScale = d3\r\n            .scaleBand()\r\n            .domain(stripedata)\r\n            .range([left + lowSideMargin, left + w - highSideMargin]);\r\n\r\n          // Draw background of alternating stripes\r\n          var oddeven = false;\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"michaeldmoore-multistat-panel-row\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d, i) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", function (d) {\r\n              oddeven = !oddeven;\r\n              return oddeven ? OddRowColor : EvenRowColor;\r\n            });\r\n\r\n          var g2 = svg\r\n            .append(\"g\")\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"g\");\r\n\r\n          if (panel.ShowValues && panel.ValuePosition == \"top\") {\r\n            var maxValueHeight = 0;\r\n\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", hh)\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", panel.ValueColor)\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", \"text-before-edge\")\r\n                  .each(function (d, i) {\r\n                    var thisHeight = this.getBBox().height;\r\n                    maxValueHeight = d3.max([maxValueHeight, thisHeight]);\r\n                  });\r\n              }\r\n            });\r\n\r\n            hh += maxValueHeight;\r\n            dh -= maxValueHeight;\r\n          }\r\n\r\n          if (panel.ShowLabels) {\r\n            var maxLabelHeight = 0;\r\n            var labelAngle = Number(panel.LableAngle);\r\n            g2.append(\"text\")\r\n              .text(function (d) {\r\n                return d[labelCol];\r\n              })\r\n              .attr(\"font-family\", \"sans-serif\")\r\n              .attr(\"font-size\", panel.LabelFontSize)\r\n              .attr(\"fill\", function (d, i) {\r\n                if (SelectedValues.length) {\r\n                  // This should check ALL the SelectedValues, bot just [0]///////////////////////////////////////////////\r\n                  let minvalue = d[SelectedValues[0].Col] * ScaleFactor;\r\n                  let maxvalue = minvalue;\r\n\r\n                  if (maxvalue > maxLineValue || minvalue < minLineValue)\r\n                    return panel.OutOfRangeLabelColor;\r\n                }\r\n                return panel.LabelColor;\r\n              })\r\n              .attr(\"text-anchor\", \"middle\")\r\n              .attr(\"dominant-baseline\", \"central\")\r\n              .attr(\"transform\", function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var x = labelScale(d[labelCol]) + labelScale.bandwidth() / 2;\r\n                var y = hh + dh - b / 2;\r\n                return (\r\n                  \"translate(\" + x + \",\" + y + \") rotate(\" + labelAngle + \")\"\r\n                );\r\n              })\r\n              .each(function (d, i) {\r\n                var bbox = this.getBBox();\r\n                var s = Math.sin((labelAngle * Math.PI) / 180);\r\n                var c = Math.cos((labelAngle * Math.PI) / 180);\r\n                var b = Math.abs(bbox.width * s) + Math.abs(bbox.height * c);\r\n                var a = Math.abs(bbox.width * c) + Math.abs(bbox.height * s);\r\n\r\n                var thisHeight = b;\r\n                maxLabelHeight = d3.max([maxLabelHeight, thisHeight]);\r\n              });\r\n            if (isNumber(labelMargin)) {\r\n              dh -= labelMargin;\r\n            } else {\r\n              dh -= maxLabelHeight;\r\n            }\r\n          }\r\n\r\n          var valueScale = d3\r\n            .scaleLinear()\r\n            .domain([maxLineValue, minLineValue])\r\n            .range([hh, hh + dh])\r\n            .nice();\r\n\r\n          function hLine(svg, value, color, strokeWidth) {\r\n            svg\r\n              .append(\"line\")\r\n              .style(\"stroke\", color)\r\n              .attr(\"stroke-width\", strokeWidth == null ? 1 : strokeWidth)\r\n              .attr(\"x1\", left + lowSideMargin)\r\n              .attr(\"y1\", valueScale(value))\r\n              .attr(\"x2\", left + w - highSideMargin)\r\n              .attr(\"y2\", valueScale(value));\r\n          }\r\n\r\n          if (panel.ShowBaseLine)\r\n            hLine(svg, baseLineValue, panel.BaseLineColor, panel.BaseLineWidth);\r\n\r\n          if (panel.ShowMaxLine)\r\n            hLine(svg, maxLineValue, panel.MaxLineColor, panel.MaxLineWidth);\r\n\r\n          if (panel.ShowMinLine)\r\n            hLine(svg, minLineValue, panel.MinLineColor, panel.MinLineWidth);\r\n\r\n          if (panel.ShowHighLimitLine)\r\n            hLine(\r\n              svg,\r\n              highLimitValue,\r\n              panel.HighLimitLineColor,\r\n              panel.HighLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowLowLimitLine)\r\n            hLine(\r\n              svg,\r\n              lowLimitValue,\r\n              panel.LowLimitLineColor,\r\n              panel.LowLimitLineWidth\r\n            );\r\n\r\n          if (panel.ShowBars) {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"rect\")\r\n                  .attr(\"class\", \"michaeldmoore-multistat-panel-bar\")\r\n                  .attr(\"height\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return Math.abs(\r\n                      valueScale(baseLineValue) - valueScale(val)\r\n                    );\r\n                  })\r\n                  .attr(\"width\", width)\r\n                  .attr(\"y\", function (d) {\r\n                    var val = scaleAndClipValue(d[valueCol]);\r\n                    return d3.min([valueScale(val), valueScale(baseLineValue)]);\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return labelScale(d[labelCol]) + (width + gap) * index;\r\n                  })\r\n                  .attr(\"fill\", function (d) {\r\n                    return getBarColor(d, valueDef);\r\n                  })\r\n                  .classed(\"highflash\", function (d) {\r\n                    return (\r\n                      recolorHighLimitBar &&\r\n                      flashHighLimitBar &&\r\n                      d[valueCol] * ScaleFactor > highLimitValue\r\n                    );\r\n                  })\r\n                  .classed(\"lowflash\", function (d) {\r\n                    return (\r\n                      recolorLowLimitBar &&\r\n                      flashLowLimitBar &&\r\n                      d[valueCol] * ScaleFactor < lowLimitValue\r\n                    );\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          if (panel.ShowLines) {\r\n            var bw = labelScale.step();\r\n\r\n            if (panel.LineWidth) {\r\n              var curveFunc = d3.curveLinear;\r\n              switch (panel.CurveType) {\r\n                case \"Linear\":\r\n                  curveFunc = d3.curveLinear;\r\n                  break;\r\n                case \"Monotone\":\r\n                  curveFunc = d3.curveMonotoneX;\r\n                  break;\r\n                case \"Cardinal\":\r\n                  curveFunc = d3.curveCardinal;\r\n                  break;\r\n                case \"Catmull-Rom\":\r\n                  curveFunc = d3.curveCatmullRom;\r\n                  break;\r\n              }\r\n\r\n              var lineFunction = d3\r\n                .line()\r\n                .curve(curveFunc)\r\n                .x(function (d) {\r\n                  return d.x;\r\n                })\r\n                .y(function (d) {\r\n                  return d.y;\r\n                });\r\n\r\n              SelectedValues.forEach((value, index) => {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                if (panel.LineWidth) {\r\n                  var points = [];\r\n                  for (var i = 0; i < data.length; i++) {\r\n                    var d = data[i];\r\n                    var x =\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index;\r\n                    var y = valueScale(d[value.Col] * ScaleFactor);\r\n                    points.push({\r\n                      x,\r\n                      y,\r\n                    });\r\n                  }\r\n\r\n                  svg\r\n                    .append(\"path\")\r\n                    .attr(\"d\", lineFunction(points))\r\n                    .attr(\"stroke\", panel.LineColor)\r\n                    .attr(\"stroke-width\", panel.LineWidth)\r\n                    .attr(\"fill\", \"none\");\r\n                }\r\n\r\n                if (panel.DotSize) {\r\n                  g2.append(\"circle\")\r\n                    .attr(\"r\", panel.DotSize / 2.0)\r\n                    .attr(\"fill\", panel.DotColor)\r\n                    .attr(\"cx\", function (d) {\r\n                      return (\r\n                        labelScale(d[labelCol]) +\r\n                        width / 2 +\r\n                        (width + gap) * index\r\n                      );\r\n                    })\r\n                    .attr(\"cy\", function (d) {\r\n                      return valueScale(d[value.Col] * ScaleFactor);\r\n                    });\r\n                }\r\n              });\r\n            }\r\n          }\r\n\r\n          if (panel.ShowValues && panel.ValuePosition != \"top\") {\r\n            SelectedValues.forEach((valueDef, index) => {\r\n              let valueCol = valueDef.Col;\r\n              if (valueCol >= 0) {\r\n                let gap =\r\n                  SelectedValues.length > 1\r\n                    ? (labelScale.bandwidth() * multiBarPadding) /\r\n                    (SelectedValues.length - 1) /\r\n                    100\r\n                    : 0;\r\n                let width =\r\n                  (labelScale.bandwidth() - gap * (SelectedValues.length - 1)) /\r\n                  SelectedValues.length;\r\n\r\n                g2.append(\"text\")\r\n                  .text(function (d) {\r\n                    return (Number(d[valueCol]) * ScaleFactor).toFixed(\r\n                      ValueDecimals\r\n                    );\r\n                  })\r\n                  .attr(\"x\", function (d, i) {\r\n                    return (\r\n                      labelScale(d[labelCol]) +\r\n                      width / 2 +\r\n                      (width + gap) * index\r\n                    );\r\n                  })\r\n                  .attr(\"y\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return valueScale(baseLineValue);\r\n                    else {\r\n                      var val = scaleAndClipValue(d[valueCol]);\r\n                      return valueScale(val);\r\n                    }\r\n                  })\r\n                  .attr(\"font-family\", \"sans-serif\")\r\n                  .attr(\"font-size\", panel.ValueFontSize)\r\n                  .attr(\"fill\", function(d) {\r\n                    return getValueColor(d, valueDef);\r\n                  })\r\n                  .attr(\"text-anchor\", \"middle\")\r\n                  .attr(\"dominant-baseline\", function (d) {\r\n                    if (ValuePosition == \"bar base\")\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-after-edge\"\r\n                        : \"text-before-edge\";\r\n                    else\r\n                      return d[valueCol] * ScaleFactor > baseLineValue\r\n                        ? \"text-before-edge\"\r\n                        : \"text-after-edge\";\r\n                  });\r\n              }\r\n            });\r\n          }\r\n\r\n          svg\r\n            .append(\"g\")\r\n            .selectAll(\"rect\")\r\n            .data(stripedata)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"width\", stripeScale.step())\r\n            .attr(\"height\", dh)\r\n            .attr(\"x\", function (d) {\r\n              return stripeScale(d);\r\n            })\r\n            .attr(\"y\", hh)\r\n            .attr(\"fill\", \"rgba(0,0,0,0)\")\r\n            .attr(\"stroke\", OutlineColor)\r\n            .on(\"mouseover\", function (d) {\r\n              if ((tooltipType && Array.isArray(d)) || Links.length)\r\n                tooltipShow(d);\r\n            })\r\n            .on(\"mouseleave\", function () {\r\n              if (!isInTooltip) {\r\n                tooltipHide(false);\r\n              }\r\n            });\r\n\r\n          if (lowSideMargin > 0) {\r\n            let ggLowSide = svg\r\n              .append(\"g\")\r\n              .attr(\"transform\", \"translate(\" + (left + lowSideMargin) + \", 0)\")\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisLeft(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggLowSide.selectAll(\".tick text\").attr(\"fill\", panel.LowAxisColor);\r\n            ggLowSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n            ggLowSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.LowAxisColor)\r\n              .attr(\"stroke-width\", panel.LowAxisWidth);\r\n          }\r\n\r\n          if (highSideMargin > 0) {\r\n            let ggHighSide = svg\r\n              .append(\"g\")\r\n              .attr(\r\n                \"transform\",\r\n                \"translate(\" + (left + w - highSideMargin) + \", 0)\"\r\n              )\r\n              .classed(\"michaeldmoore-multistat-panel-valueaxis\", true)\r\n              .call(\r\n                d3\r\n                  .axisRight(valueScale)\r\n                  .tickSizeInner(5)\r\n                  .tickSizeOuter(10)\r\n                  .ticks(5)\r\n              );\r\n            ggHighSide\r\n              .selectAll(\".tick text\")\r\n              .attr(\"fill\", panel.HighAxisColor);\r\n            ggHighSide\r\n              .selectAll(\".tick line\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n            ggHighSide\r\n              .selectAll(\"path.domain\")\r\n              .attr(\"stroke\", panel.HighAxisColor)\r\n              .attr(\"stroke-width\", panel.HighAxisWidth);\r\n          }\r\n        };\r\n\r\n        let groupNameOffset = this.panel.ShowGroupLabels\r\n          ? Number(this.panel.GroupLabelFontSize.replace(\"%\", \"\")) * 0.15\r\n          : 0;\r\n\r\n        if (this.groupedRows != null) {\r\n          let gcols =\r\n            GroupCols <= 0 || GroupCols > this.groupedRows.length\r\n              ? this.groupedRows.length\r\n              : GroupCols;\r\n          let dw = (w + GroupGap) / gcols;\r\n\r\n          // Figure out the max data points in each column of groups...\r\n          var pointsPerCol = [];\r\n          for (let i = 0; i < gcols; i++) pointsPerCol.push(0);\r\n          for (let i = 0; i < this.groupedRows.length; i++) {\r\n            let cc = i % gcols;\r\n            let u = this.groupedRows[i].values.length;\r\n            if (pointsPerCol[cc] < u) pointsPerCol[cc] = u;\r\n          }\r\n\r\n          let totalPoints = 0;\r\n          for (let i = 0; i < pointsPerCol.length; i++)\r\n            totalPoints += pointsPerCol[i];\r\n\r\n          var colOverheadWidth =\r\n            this.panel.LowSideMargin + this.panel.HighSideMargin;\r\n          var colWidth =\r\n            (w - pointsPerCol.length * colOverheadWidth) / totalPoints;\r\n\r\n          let numRows = Math.ceil(this.groupedRows.length / gcols);\r\n          let dh = h / numRows;\r\n          let hh = dh;\r\n          for (let rr = 0; rr < numRows; rr++) {\r\n            let ww = 0;\r\n            for (let cc = 0; cc < gcols; cc++) {\r\n              let nn = pointsPerCol[cc];\r\n\r\n              let ii = cc + rr * gcols;\r\n              if (ii < this.groupedRows.length) {\r\n                plotGroupVertical(\r\n                  this.panel,\r\n                  this.svg,\r\n                  this.groupedRows[ii].values,\r\n                  nn,\r\n                  this.groupedRows[ii].key,\r\n                  groupNameOffset,\r\n                  ww,\r\n                  dw - GroupGap,\r\n                  hh - dh,\r\n                  dh\r\n                );\r\n                ww += dw;\r\n              }\r\n            }\r\n            hh += dh;\r\n          }\r\n        } else {\r\n          plotGroupVertical(\r\n            this.panel,\r\n            this.svg,\r\n            this.rows,\r\n            this.rows.length,\r\n            \"\",\r\n            0,\r\n            0,\r\n            w,\r\n            0,\r\n            h\r\n          );\r\n        }\r\n      }\r\n\r\n      var pulseHigh = function (svg) {\r\n        var highFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.highflash\"\r\n        );\r\n\r\n        if (\r\n          isNumber(HighLimitBarFlashTimeout) &&\r\n          highFlashRects._groups.length > 0 &&\r\n          highFlashRects._groups[0].length > 0\r\n        ) {\r\n          highFlashRects.transition().on(\"start\", function highRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", HighLimitBarFlashColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", HighLimitBarColor)\r\n              .duration(HighLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", highRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      var pulseLow = function (svg) {\r\n        var lowFlashRects = svg.selectAll(\r\n          \"rect.michaeldmoore-multistat-panel-bar.lowflash\"\r\n        );\r\n        if (\r\n          isNumber(LowLimitBarFlashTimeout) &&\r\n          lowFlashRects._groups.length > 0 &&\r\n          lowFlashRects._groups[0].length > 0\r\n        ) {\r\n          lowFlashRects.transition().on(\"start\", function lowRepeat() {\r\n            d3.active(this)\r\n              .style(\"fill\", LowLimitBarFlashColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .style(\"fill\", LowLimitBarColor)\r\n              .duration(LowLimitBarFlashTimeout)\r\n              .transition()\r\n              .on(\"start\", lowRepeat);\r\n          });\r\n        }\r\n      };\r\n\r\n      pulseHigh(this.svg);\r\n      pulseLow(this.svg);\r\n    }\r\n\r\n    /*\r\n    var drag = d3.drag()\r\n      .on(\"drag\", function () {\r\n        d3.select(this).attr(\"cx\", d3.event.x).attr(\"cy\", d3.event.y);\r\n      });\r\n\r\n    if (!this.panel.Legend) {\r\n      this.svg\r\n        .append(\"rect\")\r\n        .attr(\"x\", 10)\r\n        .attr(\"y\", 20)\r\n        .attr(\"width\", 100)\r\n        .attr(\"height\", 200)\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"stroke\", \"yellow\")\r\n        .call(this.drag);\r\n    }\r\n*/\r\n\r\n    this.ctrl.renderingCompleted();\r\n  }\r\n\r\n  onConfigChanged() {\r\n    this.refresh();\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.ctrl = ctrl;\r\n    this.elem = elem;\r\n\r\n    // for backward compatability (grafana 6.6.0 and earlier)\r\n    var panelContentElem = elem.find(\".panel-content\");\r\n    if (panelContentElem.length) this.elem = panelContentElem;\r\n\r\n    CTRL = ctrl;\r\n  }\r\n}\r\n\r\nvar CTRL;\r\n\r\nMultistatPanelCtrl.templateUrl = \"module.html\";\r\n\r\nexport { MultistatPanelCtrl as PanelCtrl };\r\n"]}